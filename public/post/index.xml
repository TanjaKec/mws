<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | tanja&#39;s website</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Tue, 23 Feb 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/media/TK.jpg</url>
      <title>Posts</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>Subset Variable Selection in R</title>
      <link>/post/breg_cv/</link>
      <pubDate>Tue, 23 Feb 2021 00:00:00 +0000</pubDate>
      <guid>/post/breg_cv/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/datatables-css/datatables-crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/datatables-binding/datatables.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/dt-core/css/jquery.dataTables.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;/rmarkdown-libs/dt-core/css/jquery.dataTables.extra.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/dt-core/js/jquery.dataTables.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;


&lt;hr /&gt;
&lt;p&gt;This short tutorial on Subset variable Selection in R comes from pp. 244-251 of &lt;a href=&#34;https://www.statlearning.com&#34;&gt;“Introduction to Statistical Learning with Applications in R” by Gareth James, Daniela Witten, Trevor Hastie and Robert Tibshirani&lt;/a&gt; and chapter “Forward, Backward, and Stepwise Selection”, from pp. 511-519 of &lt;a href=&#34;http://appliedpredictivemodeling.com&#34;&gt;“Applied Predictive Modeling”&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/topepos&#34;&gt;Max Kuhn&lt;/a&gt; and Kjell Johnson.&lt;/p&gt;
&lt;p&gt;For the large numbers of explanatory variables, and many interactions and non-linear terms, the process of model simplification can take a very long time. There are many algorithms for automatic variable selection that can help to chose the variables to include in a regression model.&lt;/p&gt;
&lt;div id=&#34;using-best-subsets-regression-and-stepwise-regression&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Using Best Subsets Regression and Stepwise Regression&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Stepwise regression&lt;/strong&gt; and &lt;strong&gt;Best Subsets regression&lt;/strong&gt; (&lt;strong&gt;BREG&lt;/strong&gt;) are two of the more common variable selection methods. The &lt;em&gt;stepwise&lt;/em&gt; procedure starts from the saturated model (or the maximal model, whichever is appropriate) through a series of simplifications to the minimal adequate model. This progression is made on the basis of deletion tests: F tests, AIC, t-tests or chi-squared tests that assess the significance of the increase in deviance that results when a given term is removed from the current model.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;BREG&lt;/em&gt;, also known as “all possible regressions”, as the name of the procedure indicates, fits a separate least squares regression for each possible combination of the &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt; predictors, i.e. explanatory variables. After fitting all of the models, BREG then displays the best fitted models with one explanatory variable, two explanatory variables, three explanatory variables, and so on. Usually, either adjusted R-squared or Mallows Cp is the criterion for picking the best fitting models for this process. The result is a display of the best fitted models of different sizes up to the full/maximal model and the final fitted model can be selected by comparing displayed models based on the criteria of parsimony.&lt;/p&gt;
&lt;div id=&#34;case-study&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Case Study&lt;/h3&gt;
&lt;p&gt;We want to apply the subset selection approach to the &lt;code&gt;fat&lt;/code&gt; data, available in the &lt;code&gt;library(faraway)&lt;/code&gt;.
We wish to predict body fat (variable &lt;code&gt;brozek&lt;/code&gt;) using all predictors except for &lt;code&gt;siri&lt;/code&gt;, &lt;code&gt;density&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;As instructed, we will start off by creating a subset of all the variables from the &lt;code&gt;fat&lt;/code&gt; data set except for &lt;code&gt;siri&lt;/code&gt;, &lt;code&gt;density&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt;. We will save this subset as a new data frame &lt;code&gt;bodyfat&lt;/code&gt;. To confirm that the three suggested variables have been removed, we will check for the difference in the dimension of the two data frames and have a glimpse at teh data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#If you don&amp;#39;t have the &amp;quot;ISLR&amp;quot; package installed yet, uncomment and run the line below
#install.packages(&amp;quot;ISLR&amp;quot;)
library(ISLR) 
library(faraway)
library(tidyr)
suppressPackageStartupMessages(library(dplyr))
bodyfat &amp;lt;- fat %&amp;gt;% 
  select(-siri, -density, -free) 
dim(fat) - dim(bodyfat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0 3&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(bodyfat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 252
## Columns: 15
## $ brozek  &amp;lt;dbl&amp;gt; 12.6, 6.9, 24.6, 10.9, 27.8, 20.6, 19.0, 12.8, 5.1, 12.0, 7.5…
## $ age     &amp;lt;int&amp;gt; 23, 22, 22, 26, 24, 24, 26, 25, 25, 23, 26, 27, 32, 30, 35, 3…
## $ weight  &amp;lt;dbl&amp;gt; 154.25, 173.25, 154.00, 184.75, 184.25, 210.25, 181.00, 176.0…
## $ height  &amp;lt;dbl&amp;gt; 67.75, 72.25, 66.25, 72.25, 71.25, 74.75, 69.75, 72.50, 74.00…
## $ adipos  &amp;lt;dbl&amp;gt; 23.7, 23.4, 24.7, 24.9, 25.6, 26.5, 26.2, 23.6, 24.6, 25.8, 2…
## $ neck    &amp;lt;dbl&amp;gt; 36.2, 38.5, 34.0, 37.4, 34.4, 39.0, 36.4, 37.8, 38.1, 42.1, 3…
## $ chest   &amp;lt;dbl&amp;gt; 93.1, 93.6, 95.8, 101.8, 97.3, 104.5, 105.1, 99.6, 100.9, 99.…
## $ abdom   &amp;lt;dbl&amp;gt; 85.2, 83.0, 87.9, 86.4, 100.0, 94.4, 90.7, 88.5, 82.5, 88.6, …
## $ hip     &amp;lt;dbl&amp;gt; 94.5, 98.7, 99.2, 101.2, 101.9, 107.8, 100.3, 97.1, 99.9, 104…
## $ thigh   &amp;lt;dbl&amp;gt; 59.0, 58.7, 59.6, 60.1, 63.2, 66.0, 58.4, 60.0, 62.9, 63.1, 5…
## $ knee    &amp;lt;dbl&amp;gt; 37.3, 37.3, 38.9, 37.3, 42.2, 42.0, 38.3, 39.4, 38.3, 41.7, 3…
## $ ankle   &amp;lt;dbl&amp;gt; 21.9, 23.4, 24.0, 22.8, 24.0, 25.6, 22.9, 23.2, 23.8, 25.0, 2…
## $ biceps  &amp;lt;dbl&amp;gt; 32.0, 30.5, 28.8, 32.4, 32.2, 35.7, 31.9, 30.5, 35.9, 35.6, 3…
## $ forearm &amp;lt;dbl&amp;gt; 27.4, 28.9, 25.2, 29.4, 27.7, 30.6, 27.8, 29.0, 31.1, 30.0, 2…
## $ wrist   &amp;lt;dbl&amp;gt; 17.1, 18.2, 16.6, 18.2, 17.7, 18.8, 17.7, 18.8, 18.2, 19.2, 1…&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using the &lt;code&gt;glimpse()&lt;/code&gt; function allows us to notice that all the variables in our new &lt;code&gt;bodyfat&lt;/code&gt; data set are the measured type.
#### Get to Know Your Data&lt;/p&gt;
&lt;p&gt;Let us take a look at the data using the &lt;code&gt;DT&lt;/code&gt; package, which provides an R interface to the JavaScript library &lt;code&gt;DataTables&lt;/code&gt;. It will enable us to filter through the displayed data and quickly check for &lt;code&gt;NA&lt;/code&gt;s to see if there are any missing values that should be of concern.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;DT::datatable(fat)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:auto;&#34; class=&#34;datatables html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;filter&#34;:&#34;none&#34;,&#34;data&#34;:[[&#34;1&#34;,&#34;2&#34;,&#34;3&#34;,&#34;4&#34;,&#34;5&#34;,&#34;6&#34;,&#34;7&#34;,&#34;8&#34;,&#34;9&#34;,&#34;10&#34;,&#34;11&#34;,&#34;12&#34;,&#34;13&#34;,&#34;14&#34;,&#34;15&#34;,&#34;16&#34;,&#34;17&#34;,&#34;18&#34;,&#34;19&#34;,&#34;20&#34;,&#34;21&#34;,&#34;22&#34;,&#34;23&#34;,&#34;24&#34;,&#34;25&#34;,&#34;26&#34;,&#34;27&#34;,&#34;28&#34;,&#34;29&#34;,&#34;30&#34;,&#34;31&#34;,&#34;32&#34;,&#34;33&#34;,&#34;34&#34;,&#34;35&#34;,&#34;36&#34;,&#34;37&#34;,&#34;38&#34;,&#34;39&#34;,&#34;40&#34;,&#34;41&#34;,&#34;42&#34;,&#34;43&#34;,&#34;44&#34;,&#34;45&#34;,&#34;46&#34;,&#34;47&#34;,&#34;48&#34;,&#34;49&#34;,&#34;50&#34;,&#34;51&#34;,&#34;52&#34;,&#34;53&#34;,&#34;54&#34;,&#34;55&#34;,&#34;56&#34;,&#34;57&#34;,&#34;58&#34;,&#34;59&#34;,&#34;60&#34;,&#34;61&#34;,&#34;62&#34;,&#34;63&#34;,&#34;64&#34;,&#34;65&#34;,&#34;66&#34;,&#34;67&#34;,&#34;68&#34;,&#34;69&#34;,&#34;70&#34;,&#34;71&#34;,&#34;72&#34;,&#34;73&#34;,&#34;74&#34;,&#34;75&#34;,&#34;76&#34;,&#34;77&#34;,&#34;78&#34;,&#34;79&#34;,&#34;80&#34;,&#34;81&#34;,&#34;82&#34;,&#34;83&#34;,&#34;84&#34;,&#34;85&#34;,&#34;86&#34;,&#34;87&#34;,&#34;88&#34;,&#34;89&#34;,&#34;90&#34;,&#34;91&#34;,&#34;92&#34;,&#34;93&#34;,&#34;94&#34;,&#34;95&#34;,&#34;96&#34;,&#34;97&#34;,&#34;98&#34;,&#34;99&#34;,&#34;100&#34;,&#34;101&#34;,&#34;102&#34;,&#34;103&#34;,&#34;104&#34;,&#34;105&#34;,&#34;106&#34;,&#34;107&#34;,&#34;108&#34;,&#34;109&#34;,&#34;110&#34;,&#34;111&#34;,&#34;112&#34;,&#34;113&#34;,&#34;114&#34;,&#34;115&#34;,&#34;116&#34;,&#34;117&#34;,&#34;118&#34;,&#34;119&#34;,&#34;120&#34;,&#34;121&#34;,&#34;122&#34;,&#34;123&#34;,&#34;124&#34;,&#34;125&#34;,&#34;126&#34;,&#34;127&#34;,&#34;128&#34;,&#34;129&#34;,&#34;130&#34;,&#34;131&#34;,&#34;132&#34;,&#34;133&#34;,&#34;134&#34;,&#34;135&#34;,&#34;136&#34;,&#34;137&#34;,&#34;138&#34;,&#34;139&#34;,&#34;140&#34;,&#34;141&#34;,&#34;142&#34;,&#34;143&#34;,&#34;144&#34;,&#34;145&#34;,&#34;146&#34;,&#34;147&#34;,&#34;148&#34;,&#34;149&#34;,&#34;150&#34;,&#34;151&#34;,&#34;152&#34;,&#34;153&#34;,&#34;154&#34;,&#34;155&#34;,&#34;156&#34;,&#34;157&#34;,&#34;158&#34;,&#34;159&#34;,&#34;160&#34;,&#34;161&#34;,&#34;162&#34;,&#34;163&#34;,&#34;164&#34;,&#34;165&#34;,&#34;166&#34;,&#34;167&#34;,&#34;168&#34;,&#34;169&#34;,&#34;170&#34;,&#34;171&#34;,&#34;172&#34;,&#34;173&#34;,&#34;174&#34;,&#34;175&#34;,&#34;176&#34;,&#34;177&#34;,&#34;178&#34;,&#34;179&#34;,&#34;180&#34;,&#34;181&#34;,&#34;182&#34;,&#34;183&#34;,&#34;184&#34;,&#34;185&#34;,&#34;186&#34;,&#34;187&#34;,&#34;188&#34;,&#34;189&#34;,&#34;190&#34;,&#34;191&#34;,&#34;192&#34;,&#34;193&#34;,&#34;194&#34;,&#34;195&#34;,&#34;196&#34;,&#34;197&#34;,&#34;198&#34;,&#34;199&#34;,&#34;200&#34;,&#34;201&#34;,&#34;202&#34;,&#34;203&#34;,&#34;204&#34;,&#34;205&#34;,&#34;206&#34;,&#34;207&#34;,&#34;208&#34;,&#34;209&#34;,&#34;210&#34;,&#34;211&#34;,&#34;212&#34;,&#34;213&#34;,&#34;214&#34;,&#34;215&#34;,&#34;216&#34;,&#34;217&#34;,&#34;218&#34;,&#34;219&#34;,&#34;220&#34;,&#34;221&#34;,&#34;222&#34;,&#34;223&#34;,&#34;224&#34;,&#34;225&#34;,&#34;226&#34;,&#34;227&#34;,&#34;228&#34;,&#34;229&#34;,&#34;230&#34;,&#34;231&#34;,&#34;232&#34;,&#34;233&#34;,&#34;234&#34;,&#34;235&#34;,&#34;236&#34;,&#34;237&#34;,&#34;238&#34;,&#34;239&#34;,&#34;240&#34;,&#34;241&#34;,&#34;242&#34;,&#34;243&#34;,&#34;244&#34;,&#34;245&#34;,&#34;246&#34;,&#34;247&#34;,&#34;248&#34;,&#34;249&#34;,&#34;250&#34;,&#34;251&#34;,&#34;252&#34;],[12.6,6.9,24.6,10.9,27.8,20.6,19,12.8,5.1,12,7.5,8.5,20.5,20.8,21.7,20.5,28.1,22.4,16.1,16.5,19,15.3,15.7,17.6,14.2,4.6,8.5,22.4,4.7,9.4,12.3,6.5,13.4,20.9,31.1,38.2,23.6,27.5,33.8,31.3,33.1,31.7,30.4,30.8,8.4,14.1,11.2,6.4,13.4,5,10.7,7.4,8.7,7.1,4.9,22.2,20.1,27.1,30.4,24,25.4,28.8,29.6,25.1,31,28.9,21.1,14,7.1,13.2,23.7,9.4,9.1,13.7,12,18.3,9.2,21.7,21.1,18.6,30.2,26,18.2,26.2,26.1,25.8,15,22.6,8.8,14.3,20.2,18.1,9.2,24.2,9.6,17.3,10.1,11.1,17.7,21.7,20.8,20.1,19.8,21.9,24.7,17.8,19.1,18.2,17.2,21,19.5,27.1,21.6,20.9,25.9,16.7,19.8,14.1,25.1,17.9,27,24.6,14.8,16,14,17.4,26.4,17.4,20.4,15,18,22.2,23.1,25.3,23.8,26.3,21.4,28.4,21.8,20.1,24.3,18.1,22.7,9.9,10.8,14.4,19,28.6,6.1,24.5,9.9,19.1,10.6,16.5,20.5,17.2,30.1,10.5,12.8,22,9.9,14.8,13.3,15.2,26.5,19,21.4,20,34.7,16.5,4.1,1.9,20.2,16.8,24.6,10.4,13.4,28.8,22,16.8,25.8,0,11.9,12.4,17.4,9.2,23,20.1,20.2,23.8,11.8,36.5,16,24,22.3,24.8,21.5,17.6,7.3,22.6,12.5,21.7,27.7,6.8,33.4,16.6,31.7,31.5,10.1,11.3,7.8,26.4,19.3,18.5,19.3,45.1,13.8,8.2,23.9,15.1,12.7,25.3,11.9,6.1,11.3,12.8,14.9,24.5,15,16.9,11.1,16.1,15.5,25.9,25.5,18.4,24,26.4,12.7,28.8,17,33.6,29.3,31.4,28.1,15.3,29.1,11.5,32.3,28.3,25.3,30.7],[12.3,6.1,25.3,10.4,28.7,20.9,19.2,12.4,4.1,11.7,7.1,7.8,20.8,21.2,22.1,20.9,29,22.9,16,16.5,19.1,15.2,15.6,17.7,14,3.7,7.9,22.9,3.7,8.8,11.9,5.7,11.8,21.3,32.3,40.1,24.2,28.4,35.2,32.6,34.5,32.9,31.6,32,7.7,13.9,10.8,5.6,13.6,4,10.2,6.6,8,6.3,3.9,22.6,20.4,28,31.5,24.6,26.1,29.8,30.7,25.8,32.3,30,21.5,13.8,6.3,12.9,24.3,8.8,8.5,13.5,11.8,18.5,8.8,22.2,21.5,18.8,31.4,26.8,18.4,27,27,26.6,14.9,23.1,8.3,14.1,20.5,18.2,8.5,24.9,9,17.4,9.6,11.3,17.8,22.2,21.2,20.4,20.1,22.3,25.4,18,19.3,18.3,17.3,21.4,19.7,28,22.1,21.3,26.7,16.7,20.1,13.9,25.8,18.1,27.9,25.3,14.7,16,13.8,17.5,27.2,17.4,20.8,14.9,18.1,22.7,23.6,26.1,24.4,27.1,21.8,29.4,22.4,20.4,24.9,18.3,23.3,9.4,10.3,14.2,19.2,29.6,5.3,25.2,9.4,19.6,10.1,16.5,21,17.3,31.2,10,12.5,22.5,9.4,14.6,13,15.1,27.3,19.2,21.8,20.3,34.3,16.5,3,0.7,20.5,16.9,25.3,9.9,13.1,29.9,22.5,16.9,26.6,0,11.5,12.1,17.5,8.6,23.6,20.4,20.5,24.4,11.4,38.1,15.9,24.7,22.8,25.5,22,17.7,6.6,23.6,12.2,22.1,28.7,6,34.8,16.6,32.9,32.8,9.6,10.8,7.1,27.2,19.5,18.7,19.5,47.5,13.6,7.5,24.5,15,12.4,26,11.5,5.2,10.9,12.5,14.8,25.2,14.9,17,10.6,16.1,15.4,26.7,25.8,18.6,24.8,27.3,12.4,29.9,17,35,30.4,32.6,29,15.2,30.2,11,33.6,29.3,26,31.9],[1.0708,1.0853,1.0414,1.0751,1.034,1.0502,1.0549,1.0704,1.09,1.0722,1.083,1.0812,1.0513,1.0505,1.0484,1.0512,1.0333,1.0468,1.0622,1.061,1.0551,1.064,1.0631,1.0584,1.0668,1.0911,1.0811,1.0468,1.091,1.079,1.0716,1.0862,1.0719,1.0502,1.0263,1.0101,1.0438,1.0346,1.0202,1.0258,1.0217,1.025,1.0279,1.0269,1.0814,1.067,1.0742,1.0665,1.0678,1.0903,1.0756,1.084,1.0807,1.0848,1.0906,1.0473,1.0524,1.0356,1.028,1.043,1.0396,1.0317,1.0298,1.0403,1.0264,1.0313,1.0499,1.0673,1.0847,1.0693,1.0439,1.0788,1.0796,1.068,1.072,1.0666,1.079,1.0483,1.0498,1.056,1.0283,1.0382,1.0568,1.0377,1.0378,1.0386,1.0648,1.0462,1.08,1.0666,1.052,1.0573,1.0795,1.0424,1.0785,1.0991,1.077,1.073,1.0582,1.0484,1.0506,1.0524,1.053,1.048,1.0412,1.0578,1.0547,1.0569,1.0593,1.05,1.0538,1.0355,1.0486,1.0503,1.0384,1.0607,1.0529,1.0671,1.0404,1.0575,1.0358,1.0414,1.0652,1.0623,1.0674,1.0587,1.0373,1.059,1.0515,1.0648,1.0575,1.0472,1.0452,1.0398,1.0435,1.0374,1.0491,1.0325,1.0481,1.0522,1.0422,1.0571,1.0459,1.0775,1.0754,1.0664,1.055,1.0322,1.0873,1.0416,1.0776,1.0542,1.0758,1.061,1.051,1.0594,1.0287,1.0761,1.0704,1.0477,1.0775,1.0653,1.069,1.0644,1.037,1.0549,1.0492,1.0525,1.018,1.061,1.0926,1.0983,1.0521,1.0603,1.0414,1.0763,1.0689,1.0316,1.0477,1.0603,1.0387,1.1089,1.0725,1.0713,1.0587,1.0794,1.0453,1.0524,1.052,1.0434,1.0728,1.014,1.0624,1.0429,1.047,1.0411,1.0488,1.0583,1.0841,1.0462,1.0709,1.0484,1.034,1.0854,1.0209,1.061,1.025,1.0254,1.0771,1.0742,1.0829,1.0373,1.0543,1.0561,1.0543,0.995,1.0678,1.0819,1.0433,1.0646,1.0706,1.0399,1.0726,1.0874,1.074,1.0703,1.065,1.0418,1.0647,1.0601,1.0745,1.062,1.0636,1.0384,1.0403,1.0563,1.0424,1.0372,1.0705,1.0316,1.0599,1.0207,1.0304,1.0256,1.0334,1.0641,1.0308,1.0736,1.0236,1.0328,1.0399,1.0271],[23,22,22,26,24,24,26,25,25,23,26,27,32,30,35,35,34,32,28,33,28,28,31,32,28,27,34,31,27,29,32,29,27,41,41,49,40,50,46,50,45,44,48,41,39,43,40,39,45,47,47,40,51,49,42,54,58,62,54,61,62,56,54,61,57,55,54,55,54,55,62,55,56,55,61,61,57,69,81,66,67,64,64,70,72,67,72,64,46,48,46,44,47,46,47,53,38,50,46,47,49,48,41,49,43,43,43,52,43,40,43,43,47,42,48,40,48,51,40,44,52,44,40,47,50,46,42,43,40,42,49,40,47,50,41,44,39,43,40,49,40,40,52,23,23,24,24,25,25,26,26,26,27,27,27,28,28,28,30,31,31,33,33,34,34,35,35,35,35,35,35,35,35,36,36,37,37,37,38,39,39,40,40,40,40,40,41,41,41,41,41,42,42,42,42,42,42,42,42,43,43,43,43,44,44,44,44,47,47,47,49,49,49,50,50,51,51,51,52,53,54,54,54,55,55,55,55,55,56,56,57,57,58,58,60,62,62,63,64,65,65,65,66,67,67,68,69,70,72,72,72,74],[154.25,173.25,154,184.75,184.25,210.25,181,176,191,198.25,186.25,216,180.5,205.25,187.75,162.75,195.75,209.25,183.75,211.75,179,200.5,140.25,148.75,151.25,159.25,131.5,148,133.25,160.75,182,160.25,168,218.5,247.25,191.75,202.25,196.75,363.15,203,262.75,205,217,212,125.25,164.25,133.5,148.5,135.75,127.5,158.25,139.25,137.25,152.75,136.25,198,181.5,201.25,202.5,179.75,216,178.75,193.25,178,205.5,183.5,151.5,154.75,155.25,156.75,167.5,146.75,160.75,125,143,148.25,162.5,177.75,161.25,171.25,163.75,150.25,190.25,170.75,168,167,157.75,160,176.75,176,177,179.75,165.25,192.5,184.25,224.5,188.75,162.5,156.5,197,198.5,173.75,172.75,196.75,177,165.5,200.25,203.25,194,168.5,170.75,183.25,178.25,163,175.25,158,177.25,179,191,187.5,206.5,185.25,160.25,151.5,161,167,177.5,152.25,192.25,165.25,171.75,171.25,197,157,168.25,186,166.75,187.75,168.25,212.75,176.75,173.25,167,159.75,188.15,156,208.5,206.5,143.75,223,152.25,241.75,146,156.75,200.25,171.5,205.75,182.5,136.5,177.25,151.25,196,184.25,140,218.75,217,166.25,224.75,228.25,172.75,152.25,125.75,177.25,176.25,226.75,145.25,151,241.25,187.25,234.75,219.25,118.5,145.75,159.25,170.5,167.5,232.75,210.5,202.25,185,153,244.25,193.5,224.75,162.75,180,156.25,168,167.25,170.75,178.25,150,200.5,184,223,208.75,166,195,160.5,159.75,140.5,216.25,168.25,194.75,172.75,219,149.25,154.5,199.25,154.5,153.25,230,161.75,142.25,179.75,126.5,169.5,198.5,174.5,167.75,147.75,182.25,175.5,161.75,157.75,168.75,191.5,219.15,155.25,189.75,127.5,224.5,234.25,227.75,199.5,155.5,215.5,134.25,201,186.75,190.75,207.5],[67.75,72.25,66.25,72.25,71.25,74.75,69.75,72.5,74,73.5,74.5,76,69.5,71.25,69.5,66,71,71,67.75,73.5,68,69.75,68.25,70,67.75,71.5,67.5,67.5,64.75,69,73.75,71.25,71.25,71,73.5,65,70,68.25,72.25,67,68.75,29.5,70,71.5,68,73.25,67.5,71.25,68.5,66.75,72.25,69,67.75,73.5,67.5,72,68,69.5,70.75,65.75,73.25,68.5,70.25,67,70,67.5,70.75,71.5,69.25,71.5,71.5,68.75,73.75,64,65.75,67.5,69.5,68.5,70.25,69.25,67.75,67.25,72.75,70,69.25,67.5,67.25,65.75,72.5,73,70,69.5,70.5,71.75,74.5,77.75,73.25,66.5,68.25,72,73.5,72,71.25,73.75,69.25,68.5,73.5,74.25,75.5,69.25,68.5,70,70,70.25,71.75,69.25,72.75,72,74,72.25,74.5,71.5,68.75,66.75,66.5,67,68.75,67.75,73.25,69.75,71.5,70.5,73.25,66.75,69.5,69.75,70.75,74,71.25,75,71,69.5,67.75,72.25,77.5,70.75,72.75,69.75,72.5,70.25,69,74.5,72.25,67.25,73.5,75.25,69,72.25,68.75,71.5,72.25,73,68.75,70.5,72,73.75,68,72.25,69.5,69.5,67.75,65.5,71,71.5,71.75,69.25,67,71.5,69.25,74.5,74.25,68,67.25,69.75,74.25,71.5,74.25,72,72.5,68.25,69.25,76,70.5,74.75,72.75,68.25,69,71.5,72.75,67.5,70.25,69.25,71.5,74,69.75,73,65.5,72.5,70.25,70.75,68,74.5,71.75,70.75,73,64,69.75,70,71.75,69.25,70.5,72.25,67.5,67.25,68.75,66.75,68.25,74.25,69.5,68.5,65.75,71.75,71.5,67.25,67.5,67.5,72.25,69.5,69.5,65.75,65.75,68.25,72,72.75,68.5,69.25,70.5,67,69.75,66,70.5,70],[23.7,23.4,24.7,24.9,25.6,26.5,26.2,23.6,24.6,25.8,23.6,26.3,26.3,28.5,27.4,26.3,27.3,29.2,28.2,27.6,27.3,29.1,21.2,21.4,23.2,21.9,20.3,22.9,22.4,23.8,23.6,22.2,23.3,30.5,32.2,32,29.1,29.7,48.9,31.8,39.1,29.9,31.2,29.2,19.1,21.3,20.6,20.6,20.4,20.2,21.3,20.6,21.1,19.9,21.1,26.9,27.6,29.3,28.4,29.2,28.2,26.8,27.6,27.9,29.5,28.3,21.3,21.3,22.8,21.6,23.1,21.9,20.8,21.5,23.3,22.9,23.7,26.7,23,25.1,25.1,23.4,25.3,24.5,24.7,26,24.6,26,23.7,23.3,25.4,26.2,23.4,26.3,23.4,26.1,24.8,25.9,23.7,26.7,25.9,23.6,24,25.5,26,24.8,26,26,24,24.7,25.6,26.3,25.6,23.3,24,23.4,23.6,24.3,24.6,25.3,26.2,25.5,23.9,23.9,25.6,26.2,26.4,23.4,25.2,23.9,23.7,24.3,25.8,24.8,24.5,26.8,23.5,24.1,23.3,26.6,24.6,25.3,25.6,21.6,22.1,21.9,27.7,29.8,19.3,31.8,22.5,30.7,19.7,24.4,26.1,21.6,30.4,24.6,20.3,24.4,20.4,25.9,24.4,19.8,29.7,28.1,25.3,30.3,33.3,25.2,23.4,20.6,24.8,24.3,31,21.3,23.7,33.2,27.5,29.8,28,18.1,22.7,23,21.8,23.1,29.7,28.6,27,28,22.5,29.8,27.4,28.3,21.6,27.2,23.1,23.1,22.3,26.4,25.4,22,27.6,23.7,32.3,27.6,27.2,26.1,22.9,22.5,21.4,27.4,23,27.4,22.8,37.6,21.6,22.2,27.2,22.7,24.5,31,25,22.2,26.8,20,25.6,25.3,25.4,25.2,24.1,24.9,24.2,25.2,24.1,26.1,25.8,31.9,22.6,30.9,20.8,33.9,31.8,30.3,29.9,22.8,30.5,21.1,29.1,30.2,27,29.8],[134.9,161.3,116,164.7,133.1,167,146.6,153.6,181.3,174.4,172.3,197.7,143.5,162.5,147,129.3,140.8,162.5,154.3,176.8,145.1,169.8,118.2,122.6,129.8,151.9,120.3,114.9,127,145.7,159.7,149.8,142.5,172.7,170.4,118.4,154.5,142.6,240.5,139.4,175.8,140.1,151.1,146.7,114.7,141.1,118.5,139,117.6,121.2,141.4,129,125.3,142,129.6,154.1,145.1,146.7,141,136.7,161.2,127.4,136.1,133.3,141.7,130.4,119.6,133.1,144.2,136.1,127.8,132.9,146.1,107.9,125.9,121.1,147.5,139.1,127.2,139.5,114.3,111.2,155.6,126,124.1,123.9,134.1,123.8,161.1,150.9,141.3,147.3,150.1,145.9,166.6,185.7,169.6,143.5,128.8,154.2,157.2,138.9,138.6,153.7,133.2,136,162,166.3,160.6,133.1,137.5,133.5,139.7,128.9,129.9,131.7,142.1,153.8,143.1,153.8,150.7,139.6,136.5,127.3,138.5,137.9,130.7,125.8,153,140.5,140.9,133.3,151.2,117.2,128.3,137.1,131,134.4,131.6,169.9,133.8,141.8,129,143.9,168.4,133.6,168.9,147.5,135,168.3,137.2,195.1,130.5,130.9,159.3,142,143.9,163.4,119.1,138.3,136.2,167,159.8,118.8,160.8,175.8,130.7,179.7,149.3,144.2,146.1,123.4,141.7,146.6,170.9,130.2,130.8,171.7,146.1,195.3,162.7,118.5,128.4,139.5,140.8,152.1,179.2,168.3,161.4,141,135,155.2,162.6,170.8,126.5,135.4,122.6,138.4,155.1,132.1,155.9,117.5,144.9,171.4,148.5,174.2,113.5,133.6,144.3,141.8,129.5,159.3,135.9,158.7,139.4,120.2,128.7,141.9,151.7,131.2,151.3,171.9,142.6,133.6,159.5,110.3,144.2,149.9,148.3,139.4,131.4,152.9,148.4,119.9,117.5,137.6,145.2,161.2,135.5,135.1,105.9,149.2,165.6,156.3,143.6,131.8,152.7,118.9,136.1,133.9,142.6,143.7],[36.2,38.5,34,37.4,34.4,39,36.4,37.8,38.1,42.1,38.5,39.4,38.4,39.4,40.5,36.4,38.9,42.1,38,40,39.1,41.3,33.9,35.5,34.5,35.7,36.2,38.8,36.4,36.7,38.7,37.3,38.1,39.8,42.1,38.4,38.5,42.1,51.2,40.2,43.2,36.6,37.3,41.5,31.5,35.7,33.6,34.6,32.8,34,34.9,34.3,36.5,35.1,37.8,39.9,39.1,40.5,40.5,38.4,41.4,35.6,38,37.4,40.1,40.9,35.6,36.9,37.5,36.3,35.5,38.7,36.4,33.2,36.5,36,38.7,38.7,37.8,37.4,38.4,38.1,39.3,38.7,38.5,36.5,37.7,36.5,38,36.7,37.2,39.2,37.5,38,37.3,41.1,37.5,38.7,35.9,40,40.1,37,36.3,40.7,39.6,31.1,38.6,42,38.5,34.2,37.2,37.1,40.2,35.3,38,36.3,36.8,41,38.3,38,40.8,39.5,36.9,36.9,37.7,36.6,38.9,37.5,39.8,38.3,35.5,36.3,37.8,37.8,36.5,37.8,37,37.7,34.3,40.8,37.4,36.5,37.5,35.5,38,35.7,39.2,40.9,35.2,40.6,35.4,41.8,34.1,37.9,38.2,35.6,38.5,37,35.9,36.2,35,38.5,40.7,36,39.5,40.5,38.5,43.9,40.4,37.6,37,34,38.4,38.7,41.5,36,35.3,42.1,38,42.8,40,33.8,35.5,35.3,37.7,39.4,41.9,38.5,40.8,38,36.4,41.8,40.7,38.5,35.4,38.5,35.5,36.5,37.6,37.4,37.8,35.2,37.9,37.9,40.9,41.9,39.1,40.2,36,34.5,35.8,40.2,38.3,39,37.4,41.2,34.8,36.9,39.4,37.6,38.5,42.5,37.4,35.2,41.1,33.4,37.2,38.3,38.1,37.4,35.2,39.4,38,35.1,40.4,38.3,40.6,40.2,37.9,40.8,34.7,38.8,41.4,41.3,40.7,36.3,40.8,34.9,40.9,38.9,38.9,40.8],[93.1,93.6,95.8,101.8,97.3,104.5,105.1,99.6,100.9,99.6,101.5,103.6,102,104.1,101.3,99.1,101.9,107.6,106.8,106.2,103.3,111.4,86,86.7,90.2,89.6,88.6,97.4,93.5,97.4,100.5,93.5,93,111.7,117,118.5,106.5,105.6,136.2,114.8,128.3,106,113.3,106.6,85.1,96.6,88.2,89.8,92.3,83.4,90.2,89.2,89.7,93.3,87.6,107.6,100,111.5,115.4,104.8,112.3,102.9,107.6,105.3,105.3,103,90,95.4,89.3,94.4,97.6,88.5,93.6,87.7,93.4,91.6,91.6,102,96.4,102.7,97.7,97.1,103.1,101.8,101.4,98.9,97.5,104.3,97.3,96.7,99.7,101.9,97.2,106.6,99.6,113.2,99.1,99.4,95.1,107.5,106.5,99.1,96.7,103.5,104,93.1,105.2,110,110.1,97.8,96.3,108,99.7,93.5,100.7,97,96,99.2,95.4,101.8,104.3,99.2,99.3,94,98.9,101,98.7,95.9,103.9,96.2,97.8,94.6,103.6,100.4,98.4,104.6,92.9,97.8,98.3,104.7,98.6,99.5,102.7,92.1,96.6,92.7,102,110.9,92.3,114.1,92.9,108.3,88.5,94,101.1,92.1,105.6,98.5,88.7,101.1,94,103.8,98.9,89.2,111.4,107.5,99.1,108.2,114.9,99.1,92.2,90.8,100.5,98.2,115.3,96.8,92.6,119.2,102.7,109.5,108.5,79.3,95.5,92.3,98.9,89.5,117.5,107.4,109.2,103.4,91.4,115.2,104.9,106.7,92.2,101.6,97.8,92,94,103.7,102.7,91.1,107.2,100.8,121.6,105.6,100.6,102.7,99.8,92.9,91.2,115.6,98.3,103.7,98.7,119.8,92.8,93.3,106.8,93.9,99,119.9,94.2,92.7,106.9,88.8,101.7,105.3,104,98.6,99.6,103.4,100.2,94.9,97.2,104.7,104,117.6,95.8,106.4,93,119.6,119.7,115.8,118.3,97.4,113.7,89.2,108.5,111.1,108.3,112.4],[85.2,83,87.9,86.4,100,94.4,90.7,88.5,82.5,88.6,83.6,90.9,91.6,101.8,96.4,92.8,96.4,97.5,89.6,100.5,95.9,98.8,76.4,80,76.3,79.7,74.6,88.7,73.9,83.5,88.7,84.5,79.1,100.5,115.6,113.1,100.9,98.8,148.1,108.1,126.2,104.3,111.2,104.3,76,81.5,73.7,79.5,83.4,70.4,86.7,77.9,82,79.6,77.6,100,99.8,104.2,105.3,98.3,104.8,94.7,102.4,99.7,105.5,100.3,83.9,86.6,78.4,84.6,91.5,82.8,82.9,76,83.3,81.8,78.8,95,95.4,98.6,95.8,89,97.8,94.9,99.8,89.7,88.1,90.9,86,86.5,95.6,93.2,83.1,97.5,88.8,99.2,91.6,86.7,88.2,94,95,92,89.2,95.5,98.6,87.3,102.8,101.6,88.7,92.3,90.6,105,95,89.6,92.4,86.6,90,90,92.4,87.5,99.2,98.1,83.3,86.1,84.1,89.9,92.1,78,93.5,87,90.1,90.3,99.8,89.4,87.2,101.1,86.1,98.6,88.5,106.6,93.1,93,91,77.1,85.3,81.9,99.1,100.5,76.5,106.8,77.6,102.9,72.8,88.2,100.1,83.5,105,90.8,76.6,92.4,81.2,95.6,92.1,83.4,106,95.1,90.4,100.4,115.9,90.8,81.9,75,90.3,90.3,108.8,79.4,83.2,110.3,92.7,104.5,104.6,69.4,83.6,86.8,90.4,83.7,109.3,98.9,98,101.2,80.6,113.7,94.1,105.7,85.6,96.6,86,89.7,78,89.7,89.2,85.7,103.1,89.1,113.9,96.3,93.9,101.3,83.9,84.4,79.4,104,89.7,97.6,87.6,122.1,81.1,81.5,100,88.7,91.8,110.4,87.6,82.8,95.3,78.2,91.1,96.7,89.4,93,86.4,96.7,88.1,94.9,93.3,95.6,98.2,113.8,82.8,100.5,79.7,118,109,113.4,106.1,84.3,107.6,83.6,105,111.5,101.3,108.5],[94.5,98.7,99.2,101.2,101.9,107.8,100.3,97.1,99.9,104.1,98.2,107.7,103.9,108.6,100.1,99.2,105.2,107,102.4,109,104.9,104.8,94.6,93.4,95.8,96.5,85.3,94.7,88.5,98.7,99.8,100.6,94.5,108.3,116.1,113.8,106.2,104.8,147.7,102.5,125.6,115.5,114.1,106,88.2,97.2,88.5,92.7,90.4,87.2,98.3,91,89.1,91.6,88.6,99.6,102.5,105.8,97,99.6,103.1,100.8,99.4,99.7,108.3,104.2,93.9,91.8,96.1,94.3,98.5,95.5,96.3,88.6,93,94.8,94.3,98.3,99.3,100.2,97.1,96.9,99.6,95,96.2,96.2,96.9,93.8,99.3,98.3,102.2,100.6,95.4,100.6,101.4,107.5,102.4,96.2,92.8,103.7,101.7,98.3,98.3,101.6,99.5,96.6,103.6,100.7,102.1,100.6,99.3,103,98.6,99.8,97.5,92.6,99.7,96.4,104.3,101,104.1,101.4,97.5,95.2,94,100,98.5,93.2,99.5,97.8,95.8,99.1,103.2,92.3,98.4,102.1,95.6,100.6,98.3,107.7,101.6,99.3,98.9,93.9,102.5,95.3,110.1,106.2,92.1,113.9,93.5,114.4,91.1,95.2,105,98.3,106.4,102.5,89.8,99.3,91.5,105.1,103.5,89.6,108.8,104.5,95.6,106.8,111.9,98.1,92.8,89.2,98.7,99.9,114.4,89.2,96.4,113.9,101.9,109.9,109.8,85,91.6,96.1,95.5,98.1,108.8,104.1,101.8,103.1,92.3,112.4,102.7,111.8,96.5,100.6,96.2,101,99,94.2,99.2,96.9,105.5,102.6,107.1,102,100.1,101.7,91.8,94,89,109,99.1,104.2,96.1,112.8,96.3,94.4,105,94.5,96.2,105.5,95.6,91.9,98.2,87.5,97.1,106.6,98.4,97,90.1,100.7,97.8,100.2,94,93.7,101.1,111.8,94.5,100.5,87.6,114.3,109.1,109.8,101.6,94.4,110,88.8,104.5,101.7,97.8,107.1],[59,58.7,59.6,60.1,63.2,66,58.4,60,62.9,63.1,59.7,66.2,63.4,66,69,63.1,64.8,66.9,64.2,65.8,63.5,63.4,57.4,54.9,58.4,55,51.7,57.5,50.1,58.9,57.5,58.5,57.3,67.1,71.2,61.9,63.5,66,87.3,61.3,72.5,70.6,67.7,65,50,58.4,53.3,52.7,52,50.6,52.6,51.4,49.3,52.6,51.9,57.2,62.1,61.8,59.1,60.6,61.6,60.9,61,60.8,65,64.8,55,54.3,56,51.2,56.6,58.9,52.9,50.9,55.5,54.5,56.7,55,53.5,56.5,54.8,54.8,58.9,56,56.3,54.7,57.2,57.8,61,60.4,58.3,58.9,56.9,58.9,57.4,61.7,60.6,62.1,54.7,62.7,59,59.3,60,59.1,59.5,54.7,61.2,55.8,57.5,57.5,61.9,63.7,62.3,61.5,59.3,55.9,58.8,56.8,64.6,58.5,58.5,57.1,60.5,58.1,58.5,60.7,60.7,53.5,61.7,57.4,57,60.3,61.2,56.1,56,58.9,58.8,63.6,58.1,66.5,59.1,60.4,57.1,56.1,59.1,56.4,71.2,68.4,51.9,67.6,56.9,72.9,53.6,56.8,62.1,57.3,68.6,60.8,50.1,59.4,52.5,61.4,64,52.4,63.8,64.8,55.5,63.3,74.4,60.1,54.7,50,57.8,59.2,69.2,50.3,60,69.8,64.7,69.5,68.1,47.2,54.1,58,55.4,57.3,67.7,63.5,62.8,61.5,54.3,68.5,60.6,65.3,60.2,61.1,57.7,62.3,57.5,58.5,60.2,55.5,68.8,60.6,63.5,63.3,58.9,60.7,53,56,51.1,63.7,56.3,60,57.1,62.5,53.8,54.7,63.9,53.7,57.7,64.2,59.7,54.4,57.4,50.8,56.6,64,58.4,55.4,53,59.3,57.1,56.8,54.3,54.4,59.3,63.4,61.2,59.2,50.7,61.3,63.7,65.6,58.2,54.3,63.3,49.6,59.6,60.3,56,59.3],[37.3,37.3,38.9,37.3,42.2,42,38.3,39.4,38.3,41.7,39.7,39.2,38.3,41.5,39,38.7,40.8,40,38.7,40.6,38,40.6,35.3,36.2,35.5,36.7,34.7,36,34.5,35.3,38.7,38.8,36.2,44.2,43.3,38.3,39.9,41.5,49.1,41.1,39.6,42.5,40.9,40.2,34.7,38.2,34.5,37.5,35.8,34.4,37.2,34.9,33.7,37.6,34.9,38,39.6,39.8,38,37.7,40.9,38,39.4,40.1,41.2,40.2,36.1,35.4,37.4,37.4,38.6,37.6,37.5,35.4,35.2,37,39.7,38.3,37.5,39.3,38.2,38,39,36.5,36.6,37.8,37.7,39.5,38.4,39.9,38.2,39.7,38.3,40.5,39.6,42.3,39.4,39.3,37.3,39,39.4,38.4,38.4,39.8,36.1,39,39.3,38.7,40,36.8,38,40,38.1,37.8,38.1,36.3,38.4,38.8,41.1,39.2,39.3,40.5,38.7,36.5,36.6,36,36.8,35.8,39,36.9,38.7,38.5,38.1,35.6,36.9,37.9,36.1,39.2,38.4,42.5,39.6,38.2,36.7,36.1,37.6,36.5,43.5,40.8,35.7,42.7,35.9,43.5,36.8,37.4,40,37.8,40,38.5,34.8,39,36.6,40.6,37.3,35.6,42,41.3,34.2,41.7,40.6,39.1,36.2,34.8,37.3,37.7,42.4,34.8,38.1,42.6,39.5,43.1,42.8,33.5,36.2,39.4,38.9,39.7,41.3,39.8,41.3,40.4,36.3,45,38.6,43.3,38.9,38.4,38.6,38,40,39,39.2,35.7,38.3,39,40.3,39.8,37.6,39.4,36.2,38.2,35,40.3,38.8,40.9,38.1,36.9,36.5,39,39.2,36.2,38.1,42.7,40.2,35.2,37.1,33,38.5,42.6,37.4,38.8,35,38.6,38.9,35.9,35.7,37.1,40.3,41.1,39.1,38.1,33.4,42.1,42.4,46,38.8,37.5,44,34.8,40.8,37.3,41.6,42.2],[21.9,23.4,24,22.8,24,25.6,22.9,23.2,23.8,25,25.2,25.9,21.5,23.7,23.1,21.7,23.1,24.4,22.9,24,22.1,24.6,22.2,22.1,22.9,22.5,21.4,21,21.3,22.6,33.9,21.5,24.5,25.2,26.3,21.9,22.6,24.7,29.6,24.7,26.6,23.7,25,23,21,23.4,22.5,21.9,20.6,21.9,22.4,21,21.4,22.6,22.5,22,22.5,22.7,22.5,22.9,23.1,22.1,23.6,22.7,24.7,22.7,21.7,21.5,22.4,21.6,22.4,21.6,23.1,19.1,20.9,21.4,24.2,21.8,21.5,22.7,23.7,22,23,24.1,22,33.7,21.8,23.3,23.8,24.4,22.5,23.1,22.1,24.5,24.6,23.2,22.9,23.3,21.9,22.3,22.3,22.4,23.2,25.4,22,24.8,23.5,23.4,24.8,22.8,22.3,23.6,23.9,21.9,21.8,22.1,22.8,23.3,24.8,24.5,24.6,23.2,22.6,22.1,23.5,21.9,22.2,20.8,21.8,22.2,23.2,23,22.6,20.5,23,22.7,22.4,23.8,22.5,24.5,21.6,22,22.3,22.7,23.2,22,25.2,24.6,22,24.7,20.4,25.1,23.8,22.8,24.9,21.7,25.2,25,21.8,24.6,21,25,23.5,20.4,23.4,25.6,21.9,24.6,24,23.4,22.1,22,22.4,21.5,24,22.2,22,24.8,24.7,25.8,24.1,20.2,21.8,22.7,22.4,22.6,24.7,23.5,24.8,22.9,21.8,25.5,24.7,26,22.4,24.1,24,22.3,22.5,24.1,23.8,22,23.7,24,21.8,24.1,21.4,23.3,22.5,22.6,21.7,23.2,23,25.5,21.8,23.6,21.5,22.6,22.9,22,23.9,27,23.4,22.5,21.8,19.7,22.6,23.4,22.5,23.2,21.3,22.8,23.6,21,21,22.7,23,22.3,22.3,24,20.1,23.4,24.6,25.4,24.1,22.6,22.6,21.5,23.2,21.5,22.7,24.6],[32,30.5,28.8,32.4,32.2,35.7,31.9,30.5,35.9,35.6,32.8,37.2,32.5,36.9,36.1,31.1,36.2,38.2,37.2,37.1,32.5,33,27.9,29.8,31.1,29.9,28.7,29.2,30.5,30.1,32.5,30.1,29,37.5,37.3,32,35.1,33.2,45,34.1,36.4,33.6,36.7,35.8,26.1,29.7,27.9,28.8,28.8,26.8,26,26.7,29.6,38.5,27.7,35.9,33.1,37.7,31.6,34.5,36.2,32.5,32.7,33.6,35.3,34.8,29.6,32.8,32.6,27.3,31.5,30.3,29.7,29.3,29.4,29.3,30.2,30.8,31.4,30.3,29.4,29.9,34.3,31.2,29.7,32.4,32.6,29.2,30.2,28.8,29.1,31.4,30.1,33.3,30.3,32.9,31.6,30.6,31.6,35.3,32.2,27.9,31,31,30.1,31,30.5,35.1,35.1,32.1,33.3,33.5,35.3,30.7,31.8,29.8,29.9,33.4,33.6,32.1,33.9,33,34.4,30.6,34.4,35.6,33.8,33.9,33.3,31.6,27.5,31.2,33.5,33.6,34,30.9,32.7,34.3,31.7,35.5,30.8,32,31.6,30.5,31.8,33.5,36.1,33.3,25.8,36,31.6,38.5,27.8,30.6,33.7,32.2,35.2,31.6,27,30.1,27,31.3,33.5,28.3,34,36.4,30.2,37.2,36.1,32.5,30.4,24.8,31,32.4,35.4,31,31.5,34.4,34.8,39.1,35.6,27.7,31.4,30,30.5,32.9,37.2,36.4,36.6,33.4,29.6,37.1,34,33.7,31.7,32.9,31.2,30.8,30.6,33.8,31.7,29.4,32.1,32.9,34.8,37.3,33.1,36.7,31.4,29,30.9,36.8,29.5,32.7,28.6,34.7,31.3,27.5,35.7,28.5,31.4,38.4,27.9,29.4,34.1,25.3,33.4,33.2,34.6,32.4,31.7,31.8,30.9,27.8,31.3,30.3,32.6,35.1,29.8,35.9,28.5,34.9,35.6,35.3,32.1,29.2,37.5,25.6,35.2,31.3,30.5,33.7],[27.4,28.9,25.2,29.4,27.7,30.6,27.8,29,31.1,30,29.4,30.2,28.6,31.6,30.5,26.4,30.8,31.6,30.5,30.1,30.3,32.8,25.9,26.7,28,28.2,27,26.6,27.9,26.7,27.7,26.4,30,31.5,31.7,29.8,30.6,30.5,29,31,32.7,28.7,29.8,31.5,23.1,27.4,26.2,26.8,25.5,25.8,25.8,26.1,26,27.4,27.5,30.2,28.3,30.9,28.8,29.6,31.8,29.8,29.9,29,31.1,30.1,27.4,27.4,28.1,27.1,27.3,27.3,27.3,25.7,27,27,29.2,25.7,26.8,28.7,27.2,25.2,29.6,27.3,26.3,27.7,28,28.4,29.3,29.6,27.7,28.4,28.2,29.6,27.9,30.8,30.1,27.8,27.5,30.9,31,26.2,29.2,30.3,27.2,29.4,28.5,29.6,30.7,26,28.2,27.8,31.1,27.6,27.3,26.3,28,29.8,29.5,28.6,31.2,29.6,28,27.5,29.2,30.2,30.3,28.2,29.6,27.8,26.5,28.4,28.6,29.3,29.8,28.8,28.3,28.4,27.4,29.8,27.9,28.5,27.5,27.2,29.7,28.3,30.3,29.7,25.2,30.4,29,33.8,26.3,28.3,29.2,27.7,30.7,28,34.9,28.2,26.3,29.2,30.6,26.2,31.2,33.7,28.7,33.1,31.8,29.8,27.4,25.9,28.7,28.4,21,26.9,26.6,29.5,30.3,32.5,29,24.6,28.3,26.4,28.9,29.3,31.8,30.4,32.4,29.2,27.3,31.2,30.1,29.9,27.1,29.8,27.3,27.8,30,28.8,28.4,26.6,28.9,29.2,30.7,23.1,29.5,31.6,27.5,26.2,28.8,31,27.9,30,26.7,29.1,26.3,25.9,30.4,25.7,29.9,32,27,26.8,31.1,22,29.3,30,30.1,29.7,27.3,29.1,29.6,26.1,28.7,26.3,28.5,29.6,28.9,30.5,24.8,30.1,30.7,29.8,29.3,27.3,32.6,25.7,28.6,27.2,29.4,30],[17.1,18.2,16.6,18.2,17.7,18.8,17.7,18.8,18.2,19.2,18.5,19,17.7,18.8,18.2,16.9,17.3,19.3,18.5,18.2,18.4,19.9,16.7,17.1,17.6,17.7,16.5,17,17.2,17.6,18.4,17.9,18.8,18.7,19.7,17,19,19.4,21.4,18.3,21.4,17.4,18.4,18.8,16.1,18.3,17.3,17.9,16.3,16.8,17.3,17.2,16.9,18.5,18.5,18.9,18.5,19.2,18.2,18.5,20.2,18.3,19.1,18.8,18.4,18.7,17.4,18.7,18.1,17.3,18.6,18.3,18.2,16.9,16.8,18.3,18.1,18.8,18.3,19,19,17.7,19,19.2,18,18.2,18.8,18.1,18.8,18.7,17.7,18.8,18.4,19.1,17.8,20.4,18.5,18.2,18.2,18.3,18.6,17,18.4,19.7,17.7,18.8,18.1,19.1,19.2,17.3,18.1,17.4,19.8,17.4,17.5,17.3,18.1,19.5,18.5,18,19.5,18.4,17.6,17.6,18,17.6,17.2,17.4,18.1,17.7,17.6,17.1,17.9,17.3,18.1,17.6,17.1,17.7,17.6,18.7,16.6,17.8,17.9,18.2,18.3,17.3,18.7,18.4,16.9,18.4,17.8,19.6,17.4,17.9,19.4,17.7,19.1,18.6,16.9,18.2,16.5,19.1,19.7,16.5,18.5,19.4,17.7,19.8,18.8,17.4,17.7,16.9,17.7,17.8,20.1,16.9,16.7,18.4,18.1,19.9,19,16.5,17.2,17.4,17.7,18.2,20,19.1,18.8,18.5,17.9,19.9,18.7,18.5,17.1,18.8,17.4,16.9,18.5,18.8,18.6,17.4,18.7,18.4,17.4,19.4,17.3,18.4,17.7,17.6,17.4,18.9,18.6,19,18,18.4,17.8,18.6,19.2,17.1,18.9,19.6,17.8,17,19.2,15.8,18.8,18.4,18.8,19,16.9,19,18,17.6,18.3,18.3,19,18.5,18.3,19.1,16.5,19.4,19.5,19.5,18.5,18.5,18.8,18.5,20.1,18,19.8,20.9]],&#34;container&#34;:&#34;&lt;table class=\&#34;display\&#34;&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt; &lt;\/th&gt;\n      &lt;th&gt;brozek&lt;\/th&gt;\n      &lt;th&gt;siri&lt;\/th&gt;\n      &lt;th&gt;density&lt;\/th&gt;\n      &lt;th&gt;age&lt;\/th&gt;\n      &lt;th&gt;weight&lt;\/th&gt;\n      &lt;th&gt;height&lt;\/th&gt;\n      &lt;th&gt;adipos&lt;\/th&gt;\n      &lt;th&gt;free&lt;\/th&gt;\n      &lt;th&gt;neck&lt;\/th&gt;\n      &lt;th&gt;chest&lt;\/th&gt;\n      &lt;th&gt;abdom&lt;\/th&gt;\n      &lt;th&gt;hip&lt;\/th&gt;\n      &lt;th&gt;thigh&lt;\/th&gt;\n      &lt;th&gt;knee&lt;\/th&gt;\n      &lt;th&gt;ankle&lt;\/th&gt;\n      &lt;th&gt;biceps&lt;\/th&gt;\n      &lt;th&gt;forearm&lt;\/th&gt;\n      &lt;th&gt;wrist&lt;\/th&gt;\n    &lt;\/tr&gt;\n  &lt;\/thead&gt;\n&lt;\/table&gt;&#34;,&#34;options&#34;:{&#34;columnDefs&#34;:[{&#34;className&#34;:&#34;dt-right&#34;,&#34;targets&#34;:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]},{&#34;orderable&#34;:false,&#34;targets&#34;:0}],&#34;order&#34;:[],&#34;autoWidth&#34;:false,&#34;orderClasses&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Alternatively, we can use the &lt;code&gt;is.na()&lt;/code&gt; function to check if there are any missing observations in particular with respect to the response variable &lt;code&gt;bronzek&lt;/code&gt;. For a given input vector the &lt;code&gt;is.na()&lt;/code&gt; function returns a vector of &lt;code&gt;TRUE&lt;/code&gt; and &lt;code&gt;FALSE&lt;/code&gt; value, with a value of &lt;code&gt;TRUE&lt;/code&gt; for any elements that are missing, and a &lt;code&gt;FALSE&lt;/code&gt; value for non-missing elements. By using the &lt;code&gt;sum()&lt;/code&gt; function we can then count all of the missing elements, which can be easily removed from data by using either the &lt;code&gt;na.omit()&lt;/code&gt; function or the &lt;code&gt;drop_na&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bodyfat %&amp;gt;%
  select(brozek) %&amp;gt;%
  is.na() %&amp;gt;%
  sum() &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-correlation-matrix-and-its-visualisation&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The correlation matrix and its visualisation&lt;/h3&gt;
&lt;p&gt;Previously (see the section on &lt;a href=&#34;https://dataliteracy.rbind.io/module4/mlregression/&#34;&gt;Multiple Regression&lt;/a&gt;), we learnt how to examine multivariate data by creating a scatter plot matrix to obtain an in-depth vision into its behaviour. We used the &lt;code&gt;GGally::ggpairs()&lt;/code&gt; function that produces a pairwise comparison of multivariate data for both data types: measured and attribute. Creating such a matrix for a data set with a considerable number of variables could be a taxing task with a resulting display that may not be easy to make sense of.&lt;/p&gt;
&lt;p&gt;Fabulous &lt;a href=&#34;https://www.vumc.org/biostatistics/person/frank-e-harrell-jr-phd&#34;&gt;Frank Harrell&lt;/a&gt; (check his blog &lt;a href=&#34;https://www.fharrell.com/&#34;&gt;Statistical Thinking&lt;/a&gt; if you haven’t stumbled upon it yet!) has created the &lt;a href=&#34;https://cran.r-project.org/web/packages/Hmisc/index.html&#34;&gt;&lt;code&gt;Hmisc&lt;/code&gt;&lt;/a&gt; package with many useful functions for data analysis and high-level graphics. It contains the &lt;code&gt;rcorr&lt;/code&gt; function for the computation of Pearson or Spearman correlation matrix with pairwise deletion of missing data. It generates one table of correlation coefficients, i.e. the correlation matrix and another table of the &lt;span class=&#34;math inline&#34;&gt;\(p\)&lt;/span&gt;-values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bodyfat.rcorr = Hmisc::rcorr(as.matrix(bodyfat))
bodyfat.coeff = bodyfat.rcorr$r
bodyfat.p = bodyfat.rcorr$P
bodyfat.coeff&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##              brozek         age      weight      height      adipos      neck
## brozek   1.00000000  0.28917352  0.61315611 -0.08910641  0.72799418 0.4914889
## age      0.28917352  1.00000000 -0.01274609 -0.17164514  0.11885126 0.1135052
## weight   0.61315611 -0.01274609  1.00000000  0.30827854  0.88735216 0.8307162
## height  -0.08910641 -0.17164514  0.30827854  1.00000000 -0.02489094 0.2537099
## adipos   0.72799418  0.11885126  0.88735216 -0.02489094  1.00000000 0.7778569
## neck     0.49148893  0.11350519  0.83071622  0.25370988  0.77785691 1.0000000
## chest    0.70288516  0.17644968  0.89419052  0.13489181  0.91179865 0.7848350
## abdom    0.81370622  0.23040942  0.88799494  0.08781291  0.92388010 0.7540774
## hip      0.62569993 -0.05033212  0.94088412  0.17039426  0.88326922 0.7349579
## thigh    0.56128438 -0.20009576  0.86869354  0.14843561  0.81270609 0.6956973
## knee     0.50778587  0.01751569  0.85316739  0.28605321  0.71365983 0.6724050
## ankle    0.26678256 -0.10505810  0.61368542  0.26474369  0.50031664 0.4778924
## biceps   0.49303089 -0.04116212  0.80041593  0.20781557  0.74638418 0.7311459
## forearm  0.36327744 -0.08505555  0.63030143  0.22864922  0.55859425 0.6236603
## wrist    0.34757276  0.21353062  0.72977489  0.32206533  0.62590659 0.7448264
##             chest      abdom         hip      thigh       knee      ankle
## brozek  0.7028852 0.81370622  0.62569993  0.5612844 0.50778587  0.2667826
## age     0.1764497 0.23040942 -0.05033212 -0.2000958 0.01751569 -0.1050581
## weight  0.8941905 0.88799494  0.94088412  0.8686935 0.85316739  0.6136854
## height  0.1348918 0.08781291  0.17039426  0.1484356 0.28605321  0.2647437
## adipos  0.9117986 0.92388010  0.88326922  0.8127061 0.71365983  0.5003166
## neck    0.7848350 0.75407737  0.73495788  0.6956973 0.67240498  0.4778924
## chest   1.0000000 0.91582767  0.82941992  0.7298586 0.71949640  0.4829879
## abdom   0.9158277 1.00000000  0.87406618  0.7666239 0.73717888  0.4532227
## hip     0.8294199 0.87406618  1.00000000  0.8964098 0.82347262  0.5583868
## thigh   0.7298586 0.76662393  0.89640979  1.0000000 0.79917030  0.5397971
## knee    0.7194964 0.73717888  0.82347262  0.7991703 1.00000000  0.6116082
## ankle   0.4829879 0.45322269  0.55838682  0.5397971 0.61160820  1.0000000
## biceps  0.7279075 0.68498272  0.73927252  0.7614774 0.67870883  0.4848545
## forearm 0.5801727 0.50331609  0.54501412  0.5668422 0.55589819  0.4190500
## wrist   0.6601623 0.61983243  0.63008954  0.5586848 0.66450729  0.5661946
##              biceps     forearm     wrist
## brozek   0.49303089  0.36327744 0.3475728
## age     -0.04116212 -0.08505555 0.2135306
## weight   0.80041593  0.63030143 0.7297749
## height   0.20781557  0.22864922 0.3220653
## adipos   0.74638418  0.55859425 0.6259066
## neck     0.73114592  0.62366027 0.7448264
## chest    0.72790748  0.58017273 0.6601623
## abdom    0.68498272  0.50331609 0.6198324
## hip      0.73927252  0.54501412 0.6300895
## thigh    0.76147745  0.56684218 0.5586848
## knee     0.67870883  0.55589819 0.6645073
## ankle    0.48485454  0.41904999 0.5661946
## biceps   1.00000000  0.67825513 0.6321264
## forearm  0.67825513  1.00000000 0.5855883
## wrist    0.63212642  0.58558825 1.0000000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bodyfat.p&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##               brozek          age       weight       height     adipos
## brozek            NA 3.044832e-06 0.000000e+00 1.584527e-01 0.00000000
## age     3.044832e-06           NA 8.404326e-01 6.303967e-03 0.05956386
## weight  0.000000e+00 8.404326e-01           NA 5.989982e-07 0.00000000
## height  1.584527e-01 6.303967e-03 5.989982e-07           NA 0.69415116
## adipos  0.000000e+00 5.956386e-02 0.000000e+00 6.941512e-01         NA
## neck    0.000000e+00 7.206646e-02 0.000000e+00 4.614130e-05 0.00000000
## chest   0.000000e+00 4.966465e-03 0.000000e+00 3.231539e-02 0.00000000
## abdom   0.000000e+00 2.249495e-04 0.000000e+00 1.646071e-01 0.00000000
## hip     0.000000e+00 4.263055e-01 0.000000e+00 6.701323e-03 0.00000000
## thigh   0.000000e+00 1.408117e-03 0.000000e+00 1.838840e-02 0.00000000
## knee    0.000000e+00 7.820168e-01 0.000000e+00 3.927576e-06 0.00000000
## ankle   1.770467e-05 9.609999e-02 0.000000e+00 2.062620e-05 0.00000000
## biceps  0.000000e+00 5.153980e-01 0.000000e+00 9.038055e-04 0.00000000
## forearm 2.808188e-09 1.783211e-01 0.000000e+00 2.519644e-04 0.00000000
## wrist   1.446366e-08 6.442181e-04 0.000000e+00 1.721428e-07 0.00000000
##                 neck        chest        abdom         hip       thigh
## brozek  0.000000e+00 0.000000e+00 0.000000e+00 0.000000000 0.000000000
## age     7.206646e-02 4.966465e-03 2.249495e-04 0.426305473 0.001408117
## weight  0.000000e+00 0.000000e+00 0.000000e+00 0.000000000 0.000000000
## height  4.614130e-05 3.231539e-02 1.646071e-01 0.006701323 0.018388401
## adipos  0.000000e+00 0.000000e+00 0.000000e+00 0.000000000 0.000000000
## neck              NA 0.000000e+00 0.000000e+00 0.000000000 0.000000000
## chest   0.000000e+00           NA 0.000000e+00 0.000000000 0.000000000
## abdom   0.000000e+00 0.000000e+00           NA 0.000000000 0.000000000
## hip     0.000000e+00 0.000000e+00 0.000000e+00          NA 0.000000000
## thigh   0.000000e+00 0.000000e+00 0.000000e+00 0.000000000          NA
## knee    0.000000e+00 0.000000e+00 0.000000e+00 0.000000000 0.000000000
## ankle   8.881784e-16 4.440892e-16 3.597123e-14 0.000000000 0.000000000
## biceps  0.000000e+00 0.000000e+00 0.000000e+00 0.000000000 0.000000000
## forearm 0.000000e+00 0.000000e+00 0.000000e+00 0.000000000 0.000000000
## wrist   0.000000e+00 0.000000e+00 0.000000e+00 0.000000000 0.000000000
##                 knee        ankle       biceps      forearm        wrist
## brozek  0.000000e+00 1.770467e-05 0.000000e+00 2.808188e-09 1.446366e-08
## age     7.820168e-01 9.609999e-02 5.153980e-01 1.783211e-01 6.442181e-04
## weight  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
## height  3.927576e-06 2.062620e-05 9.038055e-04 2.519644e-04 1.721428e-07
## adipos  0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
## neck    0.000000e+00 8.881784e-16 0.000000e+00 0.000000e+00 0.000000e+00
## chest   0.000000e+00 4.440892e-16 0.000000e+00 0.000000e+00 0.000000e+00
## abdom   0.000000e+00 3.597123e-14 0.000000e+00 0.000000e+00 0.000000e+00
## hip     0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
## thigh   0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
## knee              NA 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00
## ankle   0.000000e+00           NA 4.440892e-16 3.886669e-12 0.000000e+00
## biceps  0.000000e+00 4.440892e-16           NA 0.000000e+00 0.000000e+00
## forearm 0.000000e+00 3.886669e-12 0.000000e+00           NA 0.000000e+00
## wrist   0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00           NA&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looking at the figures above, we notice that the response variable brozek is in strong association with all of the explanatory variables from the data set. In fact, it looks as if all variables are in strong correlation with one another, with a very few exceptions such as in the case of &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;adipos&lt;/code&gt;, &lt;code&gt;hip&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;, &lt;code&gt;weight&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt; to name a few of the most obvious ones. In an example like this one, where there are a high number of variables to consider, it is useful to visualise the correlation matrix. There are several packages available for the visualisation of a correlation matrix in R:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/GGally/index.html&#34;&gt;&lt;code&gt;GGally&lt;/code&gt;&lt;/a&gt; - extension to &lt;a href=&#34;https://ggplot2.tidyverse.org&#34;&gt;&lt;code&gt;ggplot2&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/GGally/GGally.pdf&#34;&gt;&lt;code&gt;ggpairs()&lt;/code&gt;&lt;/a&gt; function&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/ggcorrplot/index.html&#34;&gt;&lt;code&gt;ggcorrplot&lt;/code&gt;&lt;/a&gt; - visualisation of a correlation matrix using &lt;a href=&#34;https://ggplot2.tidyverse.org&#34;&gt;&lt;code&gt;ggplot2&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/ggcorrplot/ggcorrplot.pdf&#34;&gt;&lt;code&gt;ggcorrplot()&lt;/code&gt;&lt;/a&gt; function&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/corrplot/index.html&#34;&gt;&lt;code&gt;corrplot&lt;/code&gt;&lt;/a&gt; - rich visualisation of a correlation matrix
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/corrplot/corrplot.pdf&#34;&gt;&lt;code&gt;corrplot.mixed()&lt;/code&gt;&lt;/a&gt; function&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/corrr/index.html&#34;&gt;&lt;code&gt;corrr&lt;/code&gt;&lt;/a&gt; - a tool for exploring correlations
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/corrr/corrr.pdf&#34;&gt;&lt;code&gt;network_plot()&lt;/code&gt;&lt;/a&gt; function&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/corrgram/index.html&#34;&gt;&lt;code&gt;corrgram&lt;/code&gt;&lt;/a&gt; - calculates correlation of variables and displays the results graphically, based on the &lt;a href=&#34;http://euclid.psych.yorku.ca/datavis/papers/corrgram.pdf&#34;&gt;Corrgrams: Exploratory displays for correlation matrices&lt;/a&gt; paper (Friendly, 2002)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/corrgram/corrgram.pdf&#34;&gt;&lt;code&gt;corrgram&lt;/code&gt;&lt;/a&gt; function&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/PerformanceAnalytics/Performance+%20Analytics.pdf&#34;&gt;&lt;code&gt;PerformanceAnalytics&lt;/code&gt;&lt;/a&gt; - package of econometric functions for performance and risk analysis of financial instruments or portfolios
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/PerformanceAnalytics/PerformanceAnalytics.pdf&#34;&gt;&lt;code&gt;chart.Correlation()&lt;/code&gt;&lt;/a&gt; function&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/psych/index.html&#34;&gt;&lt;code&gt;psych&lt;/code&gt;&lt;/a&gt; - a toolbox for personality, psychometric theory and experimental psychology
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/psych/psych.pdf&#34;&gt;`pairs.panels()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will visualise the correlation matrix by using the &lt;code&gt;corrplot&lt;/code&gt; package that offers many customization options that have been neatly presented in this short &lt;a href=&#34;https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html&#34;&gt;&lt;code&gt;An Introduction to corrplot Package&lt;/code&gt;&lt;/a&gt; tutorial.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# If you don&amp;#39;t have the &amp;quot;corrplot&amp;quot; package installed yet, uncomment and run the line below
#install.packages(&amp;quot;corrplot&amp;quot;)
suppressPackageStartupMessages(library(corrplot))
corrplot(cor(bodyfat), 
         method = &amp;quot;ellipse&amp;quot;,
         order = &amp;quot;hclust&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/breg_cv/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;For larger and more complex datasets, the construction of a correlogram has obvious advantages for exploratory purposes, because it shows all the correlations in an uncomplicated manner. For example, the information provided through this correlogram is easy to absorb as positive correlations are displayed in blue and negative correlations in red, with the correlation coefficients and the corresponding colours displayed in the legend. Colour intensity and the width of the ellipse are proportional to the correlation coefficients, making it altogether easier to read and understand.&lt;/p&gt;
&lt;p&gt;Here we see, among other things, that a) the majority of variables are positively correlated with one another and that b) &lt;code&gt;age&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; are the two variables with weak correlations to most other variables.&lt;/p&gt;
&lt;p&gt;Without a doubt this is an example in which &lt;strong&gt;Stepwise regression&lt;/strong&gt; and &lt;strong&gt;Best Subsets regression&lt;/strong&gt; (&lt;strong&gt;BREG&lt;/strong&gt;) procedures can be deployed as the effective tools in helping us to identify useful predictors.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;best-subsets-regression&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Best Subsets regression&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://cran.r-project.org/web/packages/leaps/index.html&#34;&gt;&lt;code&gt;leaps&lt;/code&gt;&lt;/a&gt; package enables the best subset selection through the application of the &lt;code&gt;regsubsets()&lt;/code&gt; function. It identifies the best model that contains a given number of predictors, where &lt;strong&gt;best&lt;/strong&gt; is quantified using residual sum of squares (RSS). The syntax is the same as for the &lt;code&gt;lm()&lt;/code&gt; function and the &lt;code&gt;summary()&lt;/code&gt; command outputs the best set of variables for each model size.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;regsubsets()&lt;/code&gt; function (part of the &lt;a href=&#34;https://cran.r-project.org/web/packages/leaps/index.html&#34;&gt;&lt;code&gt;leaps&lt;/code&gt;&lt;/a&gt; library) performs the best subset selection by identifying the best model that contains a given number of predictors, where &lt;strong&gt;best&lt;/strong&gt; is quantified using RSS. The syntax is the same as for &lt;code&gt;lm()&lt;/code&gt;. The &lt;code&gt;summary()&lt;/code&gt; command outputs the best set of variables for each model size. We will save the results of the call of the &lt;code&gt;summary()&lt;/code&gt; function as &lt;code&gt;breg_summary&lt;/code&gt;, which will allow us to access the parts we need to focus on.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# # If you don&amp;#39;t have the &amp;quot;leaps&amp;quot; package installed yet, uncomment and run the line below
#install.packages(&amp;quot;leaps&amp;quot;)
library(leaps)
breg_full = regsubsets(brozek ~ ., data = bodyfat)
breg_summary = summary(breg_full)
breg_summary&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Subset selection object
## Call: regsubsets.formula(brozek ~ ., data = bodyfat)
## 14 Variables  (and intercept)
##         Forced in Forced out
## age         FALSE      FALSE
## weight      FALSE      FALSE
## height      FALSE      FALSE
## adipos      FALSE      FALSE
## neck        FALSE      FALSE
## chest       FALSE      FALSE
## abdom       FALSE      FALSE
## hip         FALSE      FALSE
## thigh       FALSE      FALSE
## knee        FALSE      FALSE
## ankle       FALSE      FALSE
## biceps      FALSE      FALSE
## forearm     FALSE      FALSE
## wrist       FALSE      FALSE
## 1 subsets of each size up to 8
## Selection Algorithm: exhaustive
##          age weight height adipos neck chest abdom hip thigh knee ankle biceps
## 1  ( 1 ) &amp;quot; &amp;quot; &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 2  ( 1 ) &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 3  ( 1 ) &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 4  ( 1 ) &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 5  ( 1 ) &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 6  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 7  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 8  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
##          forearm wrist
## 1  ( 1 ) &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 2  ( 1 ) &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 3  ( 1 ) &amp;quot; &amp;quot;     &amp;quot;*&amp;quot;  
## 4  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 5  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 6  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 7  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 8  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the summary prints out the asterisks (“*”). The presence of a “*” indicates that a given variable is included in the corresponding model. For instance, this output indicates that the best three-variable model contains only &lt;code&gt;weight&lt;/code&gt;, &lt;code&gt;abd&lt;/code&gt; and &lt;code&gt;wrist&lt;/code&gt;. Note that by default, &lt;code&gt;regsubsets()&lt;/code&gt; only reports results up to the best eight-variable model. But the &lt;code&gt;nvmax&lt;/code&gt; argument option can be used in order to return as many variables as are desired. As we would like to use all the available explanatory variables we will request a fit up to a 14-variable model, that is:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Y=f(X_1, X_2, X_3,..., X_{14}) \]&lt;/span&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;breg_full &amp;lt;- regsubsets(brozek ~., data = bodyfat, nvmax = 14)
breg_summary &amp;lt;- summary(breg_full)
breg_summary&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Subset selection object
## Call: regsubsets.formula(brozek ~ ., data = bodyfat, nvmax = 14)
## 14 Variables  (and intercept)
##         Forced in Forced out
## age         FALSE      FALSE
## weight      FALSE      FALSE
## height      FALSE      FALSE
## adipos      FALSE      FALSE
## neck        FALSE      FALSE
## chest       FALSE      FALSE
## abdom       FALSE      FALSE
## hip         FALSE      FALSE
## thigh       FALSE      FALSE
## knee        FALSE      FALSE
## ankle       FALSE      FALSE
## biceps      FALSE      FALSE
## forearm     FALSE      FALSE
## wrist       FALSE      FALSE
## 1 subsets of each size up to 14
## Selection Algorithm: exhaustive
##           age weight height adipos neck chest abdom hip thigh knee ankle biceps
## 1  ( 1 )  &amp;quot; &amp;quot; &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 2  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 3  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 4  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 5  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 6  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 7  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 8  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 9  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   
## 10  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 11  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 12  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 13  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 14  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
##           forearm wrist
## 1  ( 1 )  &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 2  ( 1 )  &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 3  ( 1 )  &amp;quot; &amp;quot;     &amp;quot;*&amp;quot;  
## 4  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 5  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 6  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 7  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 8  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 9  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 10  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 11  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 12  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 13  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 14  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;💡Remember that we can use the &lt;span class=&#34;math inline&#34;&gt;\(\bar{R}^2\)&lt;/span&gt; to select the best model! We need to discover the other pieces of information contained in the &lt;code&gt;breg_summary&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(breg_summary)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;which&amp;quot;  &amp;quot;rsq&amp;quot;    &amp;quot;rss&amp;quot;    &amp;quot;adjr2&amp;quot;  &amp;quot;cp&amp;quot;     &amp;quot;bic&amp;quot;    &amp;quot;outmat&amp;quot; &amp;quot;obj&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In addition to the output that indicates the inclusion of the variables in the given models we get when we print the summary in the console, the &lt;code&gt;summary()&lt;/code&gt; function also returns the necessary statistics for the best model selection. It provides &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(RSS\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\bar{R}^2\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(C_p\)&lt;/span&gt;, and &lt;span class=&#34;math inline&#34;&gt;\(BIC\)&lt;/span&gt;, which will help us in the selection of the best overall model.&lt;/p&gt;
&lt;p&gt;Knowing that the &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt; statistic increases monotonically as more variables are included, it will not be effective to use it in the model selection procedure. However, we are going to examine it to see the level to which it increases.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;t(t(sprintf(&amp;quot;%0.2f%%&amp;quot;, breg_summary$rsq * 100)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       [,1]    
##  [1,] &amp;quot;66.21%&amp;quot;
##  [2,] &amp;quot;71.87%&amp;quot;
##  [3,] &amp;quot;72.76%&amp;quot;
##  [4,] &amp;quot;73.51%&amp;quot;
##  [5,] &amp;quot;73.80%&amp;quot;
##  [6,] &amp;quot;74.10%&amp;quot;
##  [7,] &amp;quot;74.45%&amp;quot;
##  [8,] &amp;quot;74.67%&amp;quot;
##  [9,] &amp;quot;74.77%&amp;quot;
## [10,] &amp;quot;74.84%&amp;quot;
## [11,] &amp;quot;74.89%&amp;quot;
## [12,] &amp;quot;74.90%&amp;quot;
## [13,] &amp;quot;74.90%&amp;quot;
## [14,] &amp;quot;74.90%&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As expected, the &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt; statistic increases monotonically from 66.21% when only one variable is included in the model to almost 75% with the inclusion of 12 or more variables.&lt;/p&gt;
&lt;p&gt;Creating the line plots to visualise &lt;span class=&#34;math inline&#34;&gt;\(RSS\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\bar{R}^2\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(C_p\)&lt;/span&gt;, and &lt;span class=&#34;math inline&#34;&gt;\(BIC\)&lt;/span&gt;, for all of the models at once will help us to decide which model to select. We will keep things simple and create the visualisations using the &lt;code&gt;plot&lt;/code&gt; function in &lt;code&gt;base&lt;/code&gt; R with argument option &lt;code&gt;type = &#34;l&#34;&lt;/code&gt; onto which we will superimpose the corresponding minimal or maximal values using the &lt;code&gt;point&lt;/code&gt; function in respect of the statistic displayed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mfrow = c(2,2)) # Set up a 2x2 grid for display of 4 plots at once

plot(breg_summary$rss, xlab = &amp;quot;Number of Variables&amp;quot;, ylab = &amp;quot;RSS&amp;quot;, type = &amp;quot;l&amp;quot;)

# line plot of adjusted R^2 statistic
plot(breg_summary$adjr2, xlab = &amp;quot;Number of Variables&amp;quot;, ylab = &amp;quot;Adjusted RSq&amp;quot;, type = &amp;quot;l&amp;quot;)
# identify the location of the maximum point
adj_r2_max = which.max(breg_summary$adjr2)
# plot a red point to indicate the model with the largest adjusted R^2 statistic
points(adj_r2_max, breg_summary$adjr2[adj_r2_max], col =&amp;quot;red&amp;quot;, cex = 1, pch = 20)

# line plot of C_p and BIC, but this time in a search of the models with the SMALLEST statistic
# line plot of C_p statistic
plot(breg_summary$cp, xlab = &amp;quot;Number of Variables&amp;quot;, ylab = &amp;quot;Cp&amp;quot;, type = &amp;quot;l&amp;quot;)
cp_min = which.min(breg_summary$cp) 
points(cp_min, breg_summary$cp[cp_min], col = &amp;quot;red&amp;quot;, cex = 1, pch = 20)
# line plot of BIC statistic
plot(breg_summary$bic, xlab = &amp;quot;Number of Variables&amp;quot;, ylab = &amp;quot;BIC&amp;quot;, type = &amp;quot;l&amp;quot;)
bic_min = which.min(breg_summary$bic)
points(bic_min, breg_summary$bic[bic_min], col = &amp;quot;red&amp;quot;, cex = 1, pch = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/breg_cv/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We see that the measures are not in sync with one another and we realise that no one measure is going to give us an entirely accurate picture. According to &lt;span class=&#34;math inline&#34;&gt;\(\bar{R}^2\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(C_p\)&lt;/span&gt; the best performing model is the one with 8 variables and according to &lt;span class=&#34;math inline&#34;&gt;\(BIC\)&lt;/span&gt; the best performing model has only 4 variables. This outcome suggests that the models with fewer than 4 predictors is insufficient, while a model with more than 8 predictors will overfit.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;regsubsets()&lt;/code&gt; function has a built-in &lt;code&gt;plot()&lt;/code&gt; command which can be used to display the selected variables for the best model with a given number of predictors, ranked according to the &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\bar{R}^2\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(C_p\)&lt;/span&gt;, and &lt;span class=&#34;math inline&#34;&gt;\(BIC\)&lt;/span&gt; statistic. &lt;em&gt;The top row&lt;/em&gt; of each plot contains a black square for each variable selected according to the optimal model associated with that statistic. That is, when creating this plot for the display of the &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt; value it is not a surprise to see that the top row indicates inclusion of all 14 predictors for the &lt;span class=&#34;math inline&#34;&gt;\(R^2\)&lt;/span&gt; of 75%.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(breg_full, scale=&amp;quot;r2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/breg_cv/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can now identify the suggested 8 predictors for the best model by observing the top row and checking which of the variables has a black square.&lt;br /&gt;
In the following plot by observing the top row and checking which of the variable has a black square we can identify the exact 8 predictors to be used for the best model as suggested by &lt;span class=&#34;math inline&#34;&gt;\(\bar{R}^2\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(breg_full, scale =&amp;quot;adjr2&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/breg_cv/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It suggests that &lt;span class=&#34;math display&#34;&gt;\[brozek = f(age, weight, neck, abdom, hip, thigh, forearm, wrist)\]&lt;/span&gt;
We can use the &lt;code&gt;coef()&lt;/code&gt; function to see the coefficient estimates associated with this model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coef(breg_full, 8)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  (Intercept)          age       weight         neck        abdom          hip 
## -20.06213373   0.05921577  -0.08413521  -0.43189267   0.87720667  -0.18641032 
##        thigh      forearm        wrist 
##   0.28644340   0.48254563  -1.40486912&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(breg_full, scale=&amp;quot;Cp&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/breg_cv/index_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(C_p\)&lt;/span&gt; suggests the same set of predictors as &lt;span class=&#34;math inline&#34;&gt;\(\bar{R}^2\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(breg_full, scale=&amp;quot;bic&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/breg_cv/index_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We see that two models share a BIC close to -310. However, the model with the lowest &lt;span class=&#34;math inline&#34;&gt;\(BIC\)&lt;/span&gt; is the four-variable model that contains only &lt;code&gt;weight&lt;/code&gt;, &lt;code&gt;abdom&lt;/code&gt;, &lt;code&gt;forearm&lt;/code&gt; and &lt;code&gt;wrist&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coef(breg_full, 4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)      weight       abdom     forearm       wrist 
## -31.2967858  -0.1255654   0.9213725   0.4463824  -1.3917662&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;forward-and-backward-stepwise-selection&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Forward and Backward Stepwise Selection&lt;/h3&gt;
&lt;p&gt;To perform stepwise selection we will also use the &lt;code&gt;regsubsets()&lt;/code&gt; function, but this time with the argument &lt;code&gt;method&lt;/code&gt; set to either “&lt;code&gt;forward&lt;/code&gt;” or “&lt;code&gt;backward&lt;/code&gt;” depending on which of the two stepwise selections we wish to perform.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Forward stepwise selection
stepw_fwd &amp;lt;- regsubsets(brozek ~ ., data = bodyfat, nvmax = 14, method = &amp;quot;forward&amp;quot;)
summary(stepw_fwd)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Subset selection object
## Call: regsubsets.formula(brozek ~ ., data = bodyfat, nvmax = 14, method = &amp;quot;forward&amp;quot;)
## 14 Variables  (and intercept)
##         Forced in Forced out
## age         FALSE      FALSE
## weight      FALSE      FALSE
## height      FALSE      FALSE
## adipos      FALSE      FALSE
## neck        FALSE      FALSE
## chest       FALSE      FALSE
## abdom       FALSE      FALSE
## hip         FALSE      FALSE
## thigh       FALSE      FALSE
## knee        FALSE      FALSE
## ankle       FALSE      FALSE
## biceps      FALSE      FALSE
## forearm     FALSE      FALSE
## wrist       FALSE      FALSE
## 1 subsets of each size up to 14
## Selection Algorithm: forward
##           age weight height adipos neck chest abdom hip thigh knee ankle biceps
## 1  ( 1 )  &amp;quot; &amp;quot; &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 2  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 3  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 4  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 5  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 6  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 7  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 8  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 9  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   
## 10  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 11  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 12  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 13  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 14  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
##           forearm wrist
## 1  ( 1 )  &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 2  ( 1 )  &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 3  ( 1 )  &amp;quot; &amp;quot;     &amp;quot;*&amp;quot;  
## 4  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 5  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 6  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 7  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 8  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 9  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 10  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 11  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 12  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 13  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 14  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stepw_bwd &amp;lt;- regsubsets(brozek ~ ., data = bodyfat, nvmax = 14, method = &amp;quot;backward&amp;quot;)
summary(stepw_bwd)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Subset selection object
## Call: regsubsets.formula(brozek ~ ., data = bodyfat, nvmax = 14, method = &amp;quot;backward&amp;quot;)
## 14 Variables  (and intercept)
##         Forced in Forced out
## age         FALSE      FALSE
## weight      FALSE      FALSE
## height      FALSE      FALSE
## adipos      FALSE      FALSE
## neck        FALSE      FALSE
## chest       FALSE      FALSE
## abdom       FALSE      FALSE
## hip         FALSE      FALSE
## thigh       FALSE      FALSE
## knee        FALSE      FALSE
## ankle       FALSE      FALSE
## biceps      FALSE      FALSE
## forearm     FALSE      FALSE
## wrist       FALSE      FALSE
## 1 subsets of each size up to 14
## Selection Algorithm: backward
##           age weight height adipos neck chest abdom hip thigh knee ankle biceps
## 1  ( 1 )  &amp;quot; &amp;quot; &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 2  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 3  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 4  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 5  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 6  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 7  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 8  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 9  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   
## 10  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 11  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 12  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 13  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 14  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
##           forearm wrist
## 1  ( 1 )  &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 2  ( 1 )  &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 3  ( 1 )  &amp;quot; &amp;quot;     &amp;quot;*&amp;quot;  
## 4  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 5  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 6  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 7  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 8  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 9  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 10  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 11  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 12  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 13  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 14  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stepw_new &amp;lt;- regsubsets(brozek ~ ., data = bodyfat, nvmax = 14, method = &amp;quot;seqrep&amp;quot;)
summary(stepw_new)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Subset selection object
## Call: regsubsets.formula(brozek ~ ., data = bodyfat, nvmax = 14, method = &amp;quot;seqrep&amp;quot;)
## 14 Variables  (and intercept)
##         Forced in Forced out
## age         FALSE      FALSE
## weight      FALSE      FALSE
## height      FALSE      FALSE
## adipos      FALSE      FALSE
## neck        FALSE      FALSE
## chest       FALSE      FALSE
## abdom       FALSE      FALSE
## hip         FALSE      FALSE
## thigh       FALSE      FALSE
## knee        FALSE      FALSE
## ankle       FALSE      FALSE
## biceps      FALSE      FALSE
## forearm     FALSE      FALSE
## wrist       FALSE      FALSE
## 1 subsets of each size up to 14
## Selection Algorithm: &amp;#39;sequential replacement&amp;#39;
##           age weight height adipos neck chest abdom hip thigh knee ankle biceps
## 1  ( 1 )  &amp;quot; &amp;quot; &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 2  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 3  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 4  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 5  ( 1 )  &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 6  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 7  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 8  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 9  ( 1 )  &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   
## 10  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 11  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;   
## 12  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 13  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
## 14  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;    &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;  &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot;   
##           forearm wrist
## 1  ( 1 )  &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 2  ( 1 )  &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 3  ( 1 )  &amp;quot; &amp;quot;     &amp;quot;*&amp;quot;  
## 4  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 5  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 6  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 7  ( 1 )  &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 8  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 9  ( 1 )  &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 10  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 11  ( 1 ) &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 12  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 13  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot; &amp;quot;  
## 14  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can see that the best one-variable through four-variable models are each identical for best subset and forward and backward selection. Difference occurs for the five-variable model for which the backward selection method selects different set of predictors from the other two.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coef(breg_full, 5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)      weight        neck       abdom     forearm       wrist 
## -27.4118045  -0.1136977  -0.3382162   0.9325574   0.4964234  -1.1519642&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coef(stepw_fwd, 5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)      weight        neck       abdom     forearm       wrist 
## -27.4118045  -0.1136977  -0.3382162   0.9325574   0.4964234  -1.1519642&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coef(stepw_bwd, 5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  (Intercept)          age       weight        abdom      forearm        wrist 
## -27.89197896   0.03594628  -0.10392579   0.87162722   0.47755107  -1.67587889&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another difference in selection happens again for the six-factor model for which this time forward selection suggests a different set of predictors from the other two.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coef(breg_full, 6)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)         age      weight       abdom       thigh     forearm 
## -34.8393955   0.0566420  -0.1280528   0.8459061   0.2081457   0.4592612 
##       wrist 
##  -1.6278694&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coef(stepw_fwd, 6)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  (Intercept)          age       weight         neck        abdom      forearm 
## -23.21489668   0.04059830  -0.08818394  -0.36881380   0.87738614   0.53615286 
##        wrist 
##  -1.45115127&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coef(stepw_bwd, 6)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)         age      weight       abdom       thigh     forearm 
## -34.8393955   0.0566420  -0.1280528   0.8459061   0.2081457   0.4592612 
##       wrist 
##  -1.6278694&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For the models with seven predictors and more all three methods suggest the same variables.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;the-validation-set-approach-and-cross-validation-for-the-selection-of-the-best-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The Validation Set Approach and Cross-Validation for the selection of the best model&lt;/h2&gt;
&lt;p&gt;In this section validation set and cross-validation approaches will be used to chose the best model among a set of models of different sizes. When applying these approaches we split the given data into two subsets:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;training data&lt;/strong&gt;: a subset to train a model&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;test data&lt;/strong&gt;: a subset to test the model&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The training data is used for model estimation and variable selection, whilst the remaining test data is put aside and reserved for testing the accuracy of the model (see section on &lt;a href=&#34;http://dataliteracy.rbind.io/module4/what_is_ml/&#34;&gt;Machine Learning&lt;/a&gt;). That is, the best model variable selection is performed using only the training observations that are randomly selected from the original data.&lt;/p&gt;
&lt;p&gt;We begin the application of validation approach in R by splitting the &lt;code&gt;bodyaft&lt;/code&gt; data into a training set and a test set. First, we set a random seed to ensure the same data split each time we run the randomised process of splitting the &lt;code&gt;bodyfat&lt;/code&gt; data into training set and test set. The &lt;code&gt;set.seed()&lt;/code&gt; function sets the starting number used to generate a sequence of random numbers (it ensures that you get the same result if you start with that same seed each time you run the same process). Next, we create a random vector, &lt;code&gt;train&lt;/code&gt;, of elements equal to TRUE if the corresponding observation is in the training set, and FALSE otherwise. A random vector &lt;code&gt;test&lt;/code&gt; is obtained by using the &lt;code&gt;!&lt;/code&gt; command that creates TRUEs to be switched to FALSEs and vice versa. Once both &lt;code&gt;train&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; vectors are obtained we perform best subset on the &lt;code&gt;training&lt;/code&gt; set of the &lt;code&gt;bodyfat&lt;/code&gt; data using the now familiar &lt;code&gt;regsubset()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(111)
train &amp;lt;- sample(c(TRUE, FALSE), nrow(bodyfat), rep = TRUE)
test &amp;lt;- (!train )
breg &amp;lt;- regsubsets(brozek ~., data = bodyfat[train, ], nvmax = 14)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We now compute the validation set error for the best model of each model size. We first make a model matrix from the test data. The &lt;code&gt;model.matrix()&lt;/code&gt; function is used in many regression packages for building an &lt;strong&gt;&lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;&lt;/strong&gt; matrix from data.&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color: gray&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the multiple regression setting because of the potentially large number of predictors, it is more convenient to write the expressions using matrix notation. To develop the analogy let us quickly look at the matrix notation for the 14-variable linear regression function:&lt;/p&gt;
&lt;p&gt;&lt;span style=&#34;color: gray&#34;&gt;&lt;span class=&#34;math display&#34;&gt;\[y_i = \beta_0 + \beta_1x_1 + \epsilon_i \;\;\;\;\;\; \text{for} \;\; i=1, 2, ...n\]&lt;/span&gt;
&lt;span style=&#34;color: gray&#34;&gt;If we actually let &lt;span class=&#34;math inline&#34;&gt;\(i = 1, ..., n\)&lt;/span&gt;, we see that we obtain &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; equations:
&lt;span style=&#34;color: gray&#34;&gt;&lt;span class=&#34;math display&#34;&gt;\[y_i = \beta_0 + \beta_1x_1 + \epsilon_1\]&lt;/span&gt;
&lt;span style=&#34;color: gray&#34;&gt;&lt;span class=&#34;math display&#34;&gt;\[y_i = \beta_0 + \beta_1x_2 + \epsilon_2\]&lt;/span&gt;
&lt;span style=&#34;color: gray&#34;&gt;&lt;span class=&#34;math display&#34;&gt;\[ \vdots\]&lt;/span&gt;
&lt;span style=&#34;color: gray&#34;&gt;&lt;span class=&#34;math display&#34;&gt;\[y_i = \beta_0 + \beta_1x_n + \epsilon_n\]&lt;/span&gt;
&lt;span style=&#34;color: gray&#34;&gt;It is more efficient to use matrices to define the regression model which can be formulated for the above simple linear regression function in matrix notation as:
&lt;span style=&#34;color: gray&#34;&gt;&lt;span class=&#34;math display&#34;&gt;\[
\begin{bmatrix}
y_1\\y_2\\ \vdots\\y_n
\end{bmatrix} =
\begin{bmatrix}
1 &amp;amp; x_1 \\
1 &amp;amp; x_2 \\
\vdots &amp;amp; \vdots \\
1 &amp;amp; x_n \\
\end{bmatrix}
\begin{bmatrix}
\beta_0\\\beta_1\\ 
\end{bmatrix}
+ \begin{bmatrix}
\varepsilon_1\\\varepsilon_2\\ \vdots\\\varepsilon_n
\end{bmatrix}
\]&lt;/span&gt;
&lt;span style=&#34;color: gray&#34;&gt;Instead of writing out the &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; equations, using matrix notation, the simple linear regression function reduces to a short and simple statement:
&lt;span style=&#34;color: gray&#34;&gt;
&lt;span class=&#34;math display&#34;&gt;\[\mathbf{Y} = \mathbf{X\beta} + \mathbf{\varepsilon},\]&lt;/span&gt;
where matrices &lt;strong&gt;&lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt;&lt;/strong&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\varepsilon}\)&lt;/span&gt; are of the size &lt;span class=&#34;math inline&#34;&gt;\(n \times 1\)&lt;/span&gt;,
&lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\beta}\)&lt;/span&gt; of &lt;span class=&#34;math inline&#34;&gt;\(2 \times 1\)&lt;/span&gt; and finally matrix &lt;strong&gt;&lt;span class=&#34;math inline&#34;&gt;\(Y\)&lt;/span&gt;&lt;/strong&gt; of &lt;span class=&#34;math inline&#34;&gt;\(n \times 2\)&lt;/span&gt;.
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Once we have created &lt;strong&gt;&lt;span class=&#34;math inline&#34;&gt;\(X\)&lt;/span&gt;&lt;/strong&gt; matrix we run a loop, and for each &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;, we&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;extract the coefficients from &lt;code&gt;breg&lt;/code&gt; for the best model of that size&lt;/li&gt;
&lt;li&gt;multiply them into the appropriate columns of the test model matrix to form the predictions and&lt;/li&gt;
&lt;li&gt;compute the test MSE&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;test.mat &amp;lt;- model.matrix(brozek ~., data = bodyfat[test, ])
val.errors &amp;lt;- rep(NA, 14)
for(i in 1:14){
 coefi &amp;lt;- coef(breg, id = i)
 pred &amp;lt;- test.mat[ ,names(coefi)] %*% coefi
 val.errors[i] &amp;lt;- mean((bodyfat$brozek[test] - pred)^2)
}
val.errors&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 20.43699 16.90849 16.75413 16.20119 16.04250 17.82335 17.46721 17.64863
##  [9] 17.55764 17.06395 16.60744 17.00481 16.94781 16.84543&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coef(breg, which.min(val.errors))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  (Intercept)       weight         neck        abdom      forearm        wrist 
## -25.45466859  -0.09711483  -0.39312889   0.95767906   0.38200504  -1.25643570&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It looks as if the best model is the one that contains five variables. As there is no &lt;code&gt;predict()&lt;/code&gt; method for &lt;code&gt;regsubsets()&lt;/code&gt; we can capture our steps above and write our own predict method.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;predict.regsubsets &amp;lt;- function(object, newdata, id,...){
 form &amp;lt;- as.formula(object$call[[2]])
 mat &amp;lt;- model.matrix(form, newdata)
 coefi &amp;lt;- coef(object, id = id)
 xvars &amp;lt;- names(coefi)
 mat[,xvars ] %*% coefi
 }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The function almost does what we did above. The only tricky bit is the extraction of the formula used in the call to &lt;code&gt;regsubsets()&lt;/code&gt;. We are going to use this function to do cross-validation. We start by performing best subset selection on the full data set, and select the best five-variable model. In order to get more accurate coefficient estimates we make use of the full data set, rather than using the variables that were obtained from the training set. We should realise that the best five-variable model on the full data set may differ from the corresponding five-variable model on the training set.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;breg &amp;lt;- regsubsets(brozek ~., data = bodyfat , nvmax = 14)
coef(breg, 5)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)      weight        neck       abdom     forearm       wrist 
## -27.4118045  -0.1136977  -0.3382162   0.9325574   0.4964234  -1.1519642&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We are in luck as the best five-variable model on the full data set has the same set of variables as identified for the best five-variable model on the training set.&lt;/p&gt;
&lt;p&gt;We now try to choose among the models of different sizes using cross-validation and perform best subset selection within each of the &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt; training sets. This taxing task can be easily performed in R by creating a vector that allocates each observation to one of k = 10 folds and a matrix that will hold the results.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;k &amp;lt;- 10
set.seed(111)
folds &amp;lt;- sample (1:k, nrow(bodyfat), replace = TRUE)
cv.errors &amp;lt;- matrix(NA, k, 14, dimnames = list(NULL, paste (1:14)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we write a &lt;code&gt;for&lt;/code&gt; loop that performs cross-validation:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;in the &lt;span class=&#34;math inline&#34;&gt;\(j^{\text{th}}\)&lt;/span&gt; fold, the elements of folds that equal &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; are in the &lt;em&gt;test set&lt;/em&gt;, and the remainder are in the &lt;em&gt;training set&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;next,&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;make our predictions for each model size (using our new &lt;code&gt;predict()&lt;/code&gt; method)&lt;/li&gt;
&lt;li&gt;compute the test errors on the appropriate subset, and&lt;/li&gt;
&lt;li&gt;store them in the appropriate slot in the matrix &lt;code&gt;cv.errors&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for(j in 1:k){
 best.fit &amp;lt;- regsubsets(brozek ~., data = bodyfat[folds!=j, ], nvmax = 14)
 for(i in 1:14){
    pred &amp;lt;- predict(best.fit, bodyfat[folds==j, ], id = i)
    cv.errors[j, i] &amp;lt;- mean((bodyfat$brozek[folds==j] - pred)^2)
 }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This creates a 10 &lt;span class=&#34;math inline&#34;&gt;\(\times\)&lt;/span&gt; 14 matrix, where the &lt;span class=&#34;math inline&#34;&gt;\((i, j)^{\text{th}}\)&lt;/span&gt; element represents the test MSE for the &lt;span class=&#34;math inline&#34;&gt;\(i^{\text{th}}\)&lt;/span&gt; cross-validation fold for the best &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;-variable model. We use &lt;code&gt;apply()&lt;/code&gt; to average over the columns of this matrix in order to obtain a vector for which the &lt;span class=&#34;math inline&#34;&gt;\(j^{\text{th}}\)&lt;/span&gt; element is the cross-validation error for the &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;-variable model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean.cv.errors &amp;lt;- apply(cv.errors, 2,  mean)
mean.cv.errors&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        1        2        3        4        5        6        7        8 
## 20.34108 17.51758 17.10110 17.13365 17.53639 17.85260 17.54328 17.54522 
##        9       10       11       12       13       14 
## 31.93117 35.00292 35.25575 34.60876 34.99476 34.96073&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cv.errors&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##              1         2         3        4        5        6        7        8
##  [1,] 12.32946  9.416819  9.903653 11.10810 12.19012 13.10063 13.37630 13.56035
##  [2,] 12.48594 13.771297 13.852726 12.72790 12.99102 13.28162 13.21003 13.36145
##  [3,] 15.55276 13.954025 14.715055 14.75803 15.87441 14.79482 15.16436 13.98156
##  [4,] 31.60131 23.661676 21.820352 20.87529 22.30423 22.44055 23.90745 22.11288
##  [5,] 21.10524 24.206510 21.984589 21.35164 22.34848 23.97423 20.04423 20.86420
##  [6,] 21.92108 16.523561 16.195050 15.11413 15.57349 15.48747 14.61914 14.04020
##  [7,] 19.97793 21.266331 20.512493 20.99681 20.69149 20.58539 20.26534 19.82136
##  [8,] 17.86496 12.694993 12.796383 13.62946 13.55600 13.63481 12.65788 12.28301
##  [9,] 15.83071 15.834488 14.922103 15.21815 14.95377 15.17270 14.62951 15.25427
## [10,] 34.74140 23.846053 24.308575 25.55695 24.88093 26.05378 27.55856 30.17297
##               9        10        11        12        13        14
##  [1,]  13.60245  13.58774  13.41241  13.46334  13.44878  13.45282
##  [2,]  14.11558  14.21637  13.99672  13.94406  14.02302  13.99533
##  [3,]  14.09255  13.99584  14.08496  14.16646  14.69319  14.91532
##  [4,]  22.23907  21.92254  22.40096  22.45297  22.49736  22.50527
##  [5,] 165.51126 197.37461 200.09727 193.90667 196.86868 196.97994
##  [6,]  13.87184  13.77324  13.69918  13.80556  13.97567  13.98346
##  [7,]  19.94554  20.10140  20.08304  20.15145  20.17206  20.19522
##  [8,]  12.32055  12.29925  12.06850  12.06478  12.04933  12.05878
##  [9,]  15.56205  15.55901  15.21091  15.30418  15.32023  15.32022
## [10,]  28.05086  27.19924  27.50356  26.82817  26.89926  26.20099&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mfrow=c(1, 1))
plot(mean.cv.errors, type=&amp;quot;b&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/breg_cv/index_files/figure-html/unnamed-chunk-27-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We see that cross-validation selects a three-variable model. We will use &lt;code&gt;breg_full&lt;/code&gt; in order to obtain the three-variable model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#breg &amp;lt;- regsubsets(brozek ~., data = bodyfat, nvmax = 4)
coef(breg_full, 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)      weight       abdom       wrist 
## -24.7612893  -0.1055832   0.9019083  -1.1456968&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;caret-stepwise-and-cross-validation-put-together&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;&lt;code&gt;caret&lt;/code&gt;: Stepwise and Cross-Validation put together&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://cran.r-project.org/web/packages/caret/index.html&#34;&gt;&lt;code&gt;caret&lt;/code&gt;&lt;/a&gt; package makes modelling in R easier. It combines two in one:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;automatically resamples the models&lt;/li&gt;
&lt;li&gt;while conducting parameter tuning&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;caret&lt;/code&gt;’s most affable feature is its consistent modelling syntax which enables you to build and compare models with very little splurge. By simply changing the &lt;code&gt;method&lt;/code&gt; argument, you can easily investigate varying applicable models adopted from the pre-existing R packages. In total there are &lt;a href=&#34;https://topepo.github.io/caret/available-models.html&#34;&gt;over two hundred different models&lt;/a&gt; available in &lt;code&gt;caret&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Another sublime feature of &lt;code&gt;caret&lt;/code&gt; lies in its &lt;code&gt;train()&lt;/code&gt; function, which enables the use of the same function to run all of the competing models. It accepts several caret-specific arguments that provide capabilities for different resampling methods, performance measures, and algorithms for choosing the best model. Running the &lt;code&gt;train()&lt;/code&gt; function will create a train object with estimated parameters for a selected model from a set of given data with many other useful results.&lt;/p&gt;
&lt;p&gt;We will use &lt;code&gt;caret&lt;/code&gt; to adopt 10-fold cross-validation, that will split &lt;code&gt;bodyfat&lt;/code&gt; data into 10 approximately equal chunks to perform stepwise selections using the &lt;code&gt;leapBackward&lt;/code&gt; method adopted from the &lt;code&gt;leaps&lt;/code&gt; package.
The model will be developed based on 9 chunks and predict the &lt;span class=&#34;math inline&#34;&gt;\(\text{$10^{th}$}\)&lt;/span&gt; until all of the folds are treated as a validation set, while the model is fitted on the remaining 10-1 folds. &lt;code&gt;caret&lt;/code&gt; takes care of setting up this resampling with the help of the &lt;code&gt;trainControl()&lt;/code&gt; function and the &lt;code&gt;trControl&lt;/code&gt; argument of its &lt;code&gt;train()&lt;/code&gt; function. As the data set contains 14 predictors, we will vary &lt;code&gt;nvmax&lt;/code&gt; from 1 to 14 resulting in the identification of the 14 best models with different sizes: the best 1-variable model, the best 2-variables model, and so on up to the best 14-variables model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#If you don&amp;#39;t have the &amp;quot;caret&amp;quot; package installed yet, uncomment and run the line below
#install.packages(&amp;quot;caret&amp;quot;)
# Train the model
suppressPackageStartupMessages(library(caret))
set.seed(111)
# Set up repeated k-fold cross-validation
train.control &amp;lt;- trainControl(method = &amp;quot;cv&amp;quot;, number = 10)
# Train the model
stepwb &amp;lt;- train(brozek ~., data = bodyfat,
                    method = &amp;quot;leapBackward&amp;quot;, 
                    tuneGrid = data.frame(nvmax = 1:14),
                    trControl = train.control
                    )
class(stepwb)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;train&amp;quot;         &amp;quot;train.formula&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stepwb$results&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    nvmax     RMSE  Rsquared      MAE    RMSESD RsquaredSD     MAESD
## 1      1 4.500901 0.6779062 3.667717 0.8055119 0.11240896 0.5675990
## 2      2 4.260896 0.7022554 3.501954 0.7003423 0.11479575 0.6140745
## 3      3 4.257837 0.7103567 3.493261 0.6797350 0.09896541 0.5393138
## 4      4 4.173503 0.7218316 3.444086 0.6125089 0.09224353 0.5335659
## 5      5 4.227939 0.7159505 3.511170 0.6146446 0.08503459 0.5306893
## 6      6 4.186677 0.7200482 3.465637 0.6156029 0.08406015 0.5571481
## 7      7 4.139519 0.7272454 3.387318 0.6905944 0.08203603 0.5906919
## 8      8 4.130202 0.7290699 3.379290 0.6346024 0.07918020 0.5620786
## 9      9 4.138647 0.7279039 3.397510 0.6191154 0.08006510 0.5422292
## 10    10 4.151920 0.7245898 3.410971 0.6212871 0.08515454 0.5505494
## 11    11 4.140745 0.7268756 3.396724 0.6400128 0.08463738 0.5612896
## 12    12 4.183797 0.7214162 3.423895 0.6614864 0.08789564 0.5794326
## 13    13 4.196041 0.7197241 3.434989 0.6747641 0.09008652 0.5887054
## 14    14 4.199835 0.7192288 3.437822 0.6768053 0.09037830 0.5945132&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output above shows different metrics and their standard deviation for comparing the accuracy of the 14 best models for a different number of variables.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nvmax&lt;/code&gt;: the number of variables; in the best model for the given number of variables&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RMSE&lt;/code&gt; and &lt;code&gt;MAE&lt;/code&gt; are two different metrics measuring the prediction error of the model, implying that the lower their value, the better the model.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Rsquared&lt;/code&gt; indicates the correlation between the observed outcome values and the values predicted by the model, meaning that the higher the &lt;code&gt;Rsquared&lt;/code&gt;, the better the model.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using the 10-fold cross-validation we have estimated average prediction error (&lt;code&gt;RMSE&lt;/code&gt;) for each of the 14 best models for the given number of variables. The &lt;code&gt;RMSE&lt;/code&gt; statistical metric is used to compare the 14 selected models and to automatically choose the model that minimises the &lt;code&gt;RMSE&lt;/code&gt; as the best model. It can be seen that the model with 8 variables (&lt;code&gt;nvmax&lt;/code&gt; = 8) is the one that has the lowest &lt;code&gt;RMSE&lt;/code&gt;. We can call &lt;code&gt;bestTune&lt;/code&gt; from the created &lt;code&gt;stepwb&lt;/code&gt; object of class &lt;code&gt;train&lt;/code&gt; to directly display the “best tuning values” (&lt;code&gt;nvmax&lt;/code&gt;) and &lt;code&gt;finalModel&lt;/code&gt; to see selected variables of the best model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Final model coefficients
stepwb$finalModel&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Subset selection object
## 14 Variables  (and intercept)
##         Forced in Forced out
## age         FALSE      FALSE
## weight      FALSE      FALSE
## height      FALSE      FALSE
## adipos      FALSE      FALSE
## neck        FALSE      FALSE
## chest       FALSE      FALSE
## abdom       FALSE      FALSE
## hip         FALSE      FALSE
## thigh       FALSE      FALSE
## knee        FALSE      FALSE
## ankle       FALSE      FALSE
## biceps      FALSE      FALSE
## forearm     FALSE      FALSE
## wrist       FALSE      FALSE
## 1 subsets of each size up to 8
## Selection Algorithm: backward&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Summary of the model
stepwb$bestTune&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   nvmax
## 8     8&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(stepwb$finalModel)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Subset selection object
## 14 Variables  (and intercept)
##         Forced in Forced out
## age         FALSE      FALSE
## weight      FALSE      FALSE
## height      FALSE      FALSE
## adipos      FALSE      FALSE
## neck        FALSE      FALSE
## chest       FALSE      FALSE
## abdom       FALSE      FALSE
## hip         FALSE      FALSE
## thigh       FALSE      FALSE
## knee        FALSE      FALSE
## ankle       FALSE      FALSE
## biceps      FALSE      FALSE
## forearm     FALSE      FALSE
## wrist       FALSE      FALSE
## 1 subsets of each size up to 8
## Selection Algorithm: backward
##          age weight height adipos neck chest abdom hip thigh knee ankle biceps
## 1  ( 1 ) &amp;quot; &amp;quot; &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 2  ( 1 ) &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 3  ( 1 ) &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 4  ( 1 ) &amp;quot; &amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 5  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot; &amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 6  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 7  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot; &amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
## 8  ( 1 ) &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;    &amp;quot; &amp;quot;    &amp;quot; &amp;quot;    &amp;quot;*&amp;quot;  &amp;quot; &amp;quot;   &amp;quot;*&amp;quot;   &amp;quot;*&amp;quot; &amp;quot;*&amp;quot;   &amp;quot; &amp;quot;  &amp;quot; &amp;quot;   &amp;quot; &amp;quot;   
##          forearm wrist
## 1  ( 1 ) &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 2  ( 1 ) &amp;quot; &amp;quot;     &amp;quot; &amp;quot;  
## 3  ( 1 ) &amp;quot; &amp;quot;     &amp;quot;*&amp;quot;  
## 4  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 5  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 6  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 7  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;  
## 8  ( 1 ) &amp;quot;*&amp;quot;     &amp;quot;*&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;💡Typing &lt;code&gt;?caret::train&lt;/code&gt; inside R’s console will bring a more detailed explanation on how to use the &lt;code&gt;train()&lt;/code&gt; function and information about the expected outcomes.&lt;/p&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;All of the above approaches have suggested different variable selection for the best fitted model. We have noticed by examining the correlogram high multicollinearity amongst the variables in the &lt;code&gt;bodyfat&lt;/code&gt;. It reveals a weak correlation only between three to four variables. This is a frequently encountered problem in multiple regression analysis, where such an interrelationship among explanatory variables obscures their relationship with the response variable. This causes computational instability in model estimation resulting in the different suggestions of the best model for different variable selection approaches:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Best Subsets Regression: has indicated that the models with a fewer than 4 predictors is insufficient, while a model with more than 8 predictors will overfit&lt;/li&gt;
&lt;li&gt;Stepwise Forward and Stepwise Backward selections: has suggested different sets of variables for the five-factor model and the six-factor model&lt;/li&gt;
&lt;li&gt;Validation Set: has recommended the five-factor model as the best one&lt;/li&gt;
&lt;li&gt;10-Fold Cross-Validation: has argued the case for the three-factor model&lt;/li&gt;
&lt;li&gt;Backward Selection with automatic 10-Fold Cross-Validation adopted by the application of the &lt;code&gt;caret&lt;/code&gt; package: identifies the eight-factor model as the best one&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our main goal was to derive a model to predict body fat (variable &lt;code&gt;brozek&lt;/code&gt;) using all predictors except for &lt;code&gt;siri&lt;/code&gt;, &lt;code&gt;density&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt; from the &lt;code&gt;fat&lt;/code&gt; data available from the &lt;code&gt;faraway&lt;/code&gt; package. Guided by the outcomes of the above analysis and a desire to describe the behaviour of this multivariate data set parsimoniously (see Miller, 2002) we suggest the four-factor model for which &lt;span class=&#34;math inline&#34;&gt;\(\bar{R}^2\)&lt;/span&gt; = 73.51%. Adding another 4 variables as suggested by Backward Selection with automatic 10-Fold Cross-Validation would increase &lt;span class=&#34;math inline&#34;&gt;\(\bar{R}^2\)&lt;/span&gt; statistic by only 1.16%.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;coef(breg_full, 4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (Intercept)      weight       abdom     forearm       wrist 
## -31.2967858  -0.1255654   0.9213725   0.4463824  -1.3917662&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[brozek = -31.2967858 - 0.1255654 \; weight  + 0.9213725 \; abdom + 0.4463824 \; forearm - 1.3917662 \; wrist\]&lt;/span&gt;
Applying different subset selection approaches we have pruned a list of plausible explanatory variables down to a parsimonious collection of the “most useful” variables. We need to realise that subset selection approaches for multiple regression modelling should be used as a tool that can help us avoid the tiresome process of trying all possible combinations of explanatory variables, by testing variables one by one. However, as statistical models can serve different purposes we need to incorporate prior knowledge when it is possible. Solely reliance on subset selection approaches is wrong and it could be misleading (Smith, 2018).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;M. Friendly. &lt;a href=&#34;http://euclid.psych.yorku.ca/datavis/papers/corrgram.pdf&#34;&gt;Corrgrams: Exploratory displays for correlation matrices&lt;/a&gt;, The American Statistician 56(4): 316-324, 2002.&lt;/p&gt;
&lt;p&gt;G. James, D. Witten, T. Hastie, R. Tibshirani. &lt;a href=&#34;https://www.statlearning.com&#34;&gt;Introduction to Statistical Learning with Applications in R&lt;/a&gt;, Springer Texts in Statistics, 2013.&lt;/p&gt;
&lt;p&gt;M. Kuhn, K. Johnson. &lt;a href=&#34;https://vuquangnguyen2016.files.wordpress.com/2018/03/applied-predictive-modeling-max-kuhn-kjell-johnson_1518.pdf&#34;&gt;“Applied Predictive Modeling”&lt;/a&gt;, Springer, 2013.&lt;/p&gt;
&lt;p&gt;M. Kuhn. &lt;a href=&#34;https://topepo.github.io/caret/&#34;&gt;The caret Package&lt;/a&gt;, 2019.&lt;/p&gt;
&lt;p&gt;A. J. Miller. &lt;a href=&#34;https://www.taylorfrancis.com/books/subset-selection-regression-alan-miller/10.1201/9781420035933&#34;&gt;Subset Selection in Regression&lt;/a&gt;. Monographs on Statistics and Applied Probability, Chapman &amp;amp; Hall/CRC, 2&lt;span class=&#34;math inline&#34;&gt;\(^\text{nd}\)&lt;/span&gt; edition, 2002.&lt;/p&gt;
&lt;p&gt;G. Smith. &lt;a href=&#34;https://journalofbigdata.springeropen.com/track/pdf/10.1186/s40537-018-0143-6.pdf&#34;&gt;Step away from stepwise&lt;/a&gt;. Journal of Big Data, pp. 5-32. 2018&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Covid UK: How to do it in R</title>
      <link>/post/covid_uk/</link>
      <pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate>
      <guid>/post/covid_uk/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leaflet/leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leafletfix/leafletfix.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/Proj4Leaflet/proj4-compressed.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/Proj4Leaflet/proj4leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/rstudio_leaflet/rstudio_leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet-binding/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Open data belongs to everyone; it empowers people to make informed decisions that are not clouded by misinformation, rumour and gossip. To be able to identify the underlying facts within data sets, it is crucial that individuals and communities possess the necessary skills. Open data is often inconsistent and limited and requires a significant amount of time to organise and structure for presentation purposes.&lt;/p&gt;
&lt;p&gt;This is a data analysis report concerning the visualisation of the COVID-19 virus within the United Kingdom and Europe. All of the report is created with &lt;a href=&#34;https://www.r-project.org&#34;&gt;R&lt;/a&gt;. It represents a case study as an illustration of the concepts presented at the workshop on basic R for data analysts. To learn how to use R and develop a report like this visit the &lt;a href=&#34;https://introtor.netlify.app/&#34;&gt;Introduction To R&lt;/a&gt; website.&lt;/p&gt;
&lt;div id=&#34;covid-19-open-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Covid-19: Open Data&lt;/h1&gt;
&lt;p&gt;The novel coronavirus disease 2019 (COVID-19) was first reported in Wuhan, China, where the initial wave of intense community transmissions was cut short by interventions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; # If you don&amp;#39;t have the &amp;quot;leaflet&amp;quot; package installed yet, uncomment and run the line below
&amp;gt; #install.packages(&amp;quot;leaflet&amp;quot;)
&amp;gt; library(leaflet)
&amp;gt; # Initialize and assign as the leaflet object
&amp;gt; leaflet() %&amp;gt;%
+   # add tiles to the leaflet object
+   addTiles() %&amp;gt;%  
+   # setting the centre of the map and the zoom level
+   setView(lng = 114.3055, lat = 30.5928 , zoom = 10) %&amp;gt;%
+   # add a popup marker 
+   addMarkers(lng = 114.3055, lat = 30.5928, popup = &amp;quot;&amp;lt;b&amp;gt;Wuhan, capital of Central China’s Hubei province&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;&amp;lt;a href=&amp;#39;https://www.ft.com/content/82574e3d-1633-48ad-8afb-71ebb3fe3dee&amp;#39;&amp;gt;China and Covid-19: what went wrong in Wuhan?&amp;lt;/a&amp;gt;&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addMarkers&#34;,&#34;args&#34;:[30.5928,114.3055,null,null,null,{&#34;interactive&#34;:true,&#34;draggable&#34;:false,&#34;keyboard&#34;:true,&#34;title&#34;:&#34;&#34;,&#34;alt&#34;:&#34;&#34;,&#34;zIndexOffset&#34;:0,&#34;opacity&#34;:1,&#34;riseOnHover&#34;:false,&#34;riseOffset&#34;:250},&#34;&lt;b&gt;Wuhan, capital of Central China’s Hubei province&lt;\/b&gt;&lt;br&gt;&lt;a href=&#39;https://www.ft.com/content/82574e3d-1633-48ad-8afb-71ebb3fe3dee&#39;&gt;China and Covid-19: what went wrong in Wuhan?&lt;\/a&gt;&#34;,null,null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null]}],&#34;setView&#34;:[[30.5928,114.3055],10,[]],&#34;limits&#34;:{&#34;lat&#34;:[30.5928,30.5928],&#34;lng&#34;:[114.3055,114.3055]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
Experience has shown that for public health intervention to be successful governmental authorities need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;identify the infected and provide treatment&lt;/li&gt;
&lt;li&gt;locate and quarantine all those who had contact with the infected&lt;/li&gt;
&lt;li&gt;sterilise environmental pathogens&lt;/li&gt;
&lt;li&gt;promote the use of masks and social distancing&lt;/li&gt;
&lt;li&gt;release to the public the number of new infections and deaths on a daily basis through open data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The importance of hand washing, wearing a mask and social distancing as a tool to limit disease transmission is well recognised, but nonetheless ensuring social distancing especially in densely populated urban areas is still challenging. Well-educated communities are critical for an effective response and for the prevention of local outbreaks. The sharing of factual information that can be understood and trusted by the communities is vital. This will lead to a change in their behaviour to implement efficiently desired public health actions is a must. Trust and transparency are fundamental in obtaining absolute public engagement. The publishing of daily figures that can be freely analysed and scrutinised can help in engaging communities and obtaining its willing and continued support in controlling the spread of infection.&lt;/p&gt;
&lt;div id=&#34;working-with-a-db-in-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Working with a DB in R&lt;/h2&gt;
&lt;p&gt;In big organisations data is often kept in a database and data you wish to access from it might be too large to fit into the memory of your computer. Connecting from R to a database to access the necessary data for an analysis can be very useful, as it allows you to fetch only the chunks needed for the current study. R enables you to access and query a database without having to download the data contained in it. The two most common methods of connection are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Option 1)&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;code&gt;RODBC&lt;/code&gt; package: uses slightly older code; it can be used to connect to anything that uses ODBC.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; library(&amp;quot;RODBC&amp;quot;)
&amp;gt; # Connection with a server called &amp;quot;Walmart&amp;quot; and a database called &amp;quot;Asda&amp;quot;:
&amp;gt; RODBC_connection &amp;lt;- odbcDriverConnect(&amp;#39;driver = {SQL Server};
+                                       server = Walmart;
+                                       database = Asda;
+                                       trusted_connection = true&amp;#39;) #passes your windows credentials to the server; can also specify a username `uid` and a password `pwd`
&amp;gt; dt1 &amp;lt;- sqlFetch(channel = RODBC_connection, sqtable = &amp;quot;MyTable&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using &lt;code&gt;RODBC&lt;/code&gt; you can write back to database tables, choosing to append or not:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; sqlSave(channel = RODBC_connection,
+         dat = dt2, 
+         tablename = &amp;quot;MyTable_R_version&amp;quot;,
+         append = FALSE,
+         safer = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When you finish working using the database you should disconnect from the server.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; odbcClose(RODBC_connection)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One of the authors of this package is the famous statistician &lt;a href=&#34;https://en.wikipedia.org/wiki/Brian_D._Ripley&#34;&gt;Brian Ripley&lt;/a&gt;, and you can find more about the possibilities it offers by playing around with it using the guidance from &lt;a href=&#34;https://www.rdocumentation.org/packages/RODBC/versions/1.3-17&#34;&gt;RDocumentation on RODBC v1.3-17&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Option 2)&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;code&gt;DBI&lt;/code&gt; package: a common database interface in R; can be used with different ‘back-end’ drivers such as MySQL, SQL Server, SQLite, Oracle etc; to write SQL it can be used on its own:&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; # Can write an SQL query directly using the `dbSendQuery` function
&amp;gt; # Executes the query on the server-side only, but if you want the results back in R, you need to use `dbFetch`
&amp;gt; SomeRecords &amp;lt;- dbFetch(dbSendQuery(DBI_Connection, 
+                                    &amp;quot;SELECT CustomerName_column, City_column FROM Customers_Table&amp;quot;)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also write back to a database using the &lt;code&gt;dbWriteTable&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; #Writing a new table called &amp;#39;Table_created_in_R&amp;#39; using the R data.frame called &amp;quot;my_df&amp;quot;, with `append` and `overwrite` options
&amp;gt; dbWriteTable(DBI_Connection,&amp;quot;Table_created_in_R&amp;quot;, my_df, overwrite = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We use &lt;code&gt;tbl()&lt;/code&gt; to define a table as if it were part of the R work-space, and to specify as the function’s arguments the connection object and the name of the table in the database.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; MyTable_Rws &amp;lt;- tbl(DBI_Connection, &amp;quot;MyTable_DB&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If we need to pull the data from the server into R’s memory we can use the &lt;code&gt;collect()&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;DBI&lt;/code&gt; package can be combined with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;code&gt;dplyr&lt;/code&gt; package: to make the &lt;code&gt;tbl&lt;/code&gt;s and to work on them using &lt;code&gt;dplyr&lt;/code&gt; syntax&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;dbplyr&lt;/code&gt; package: allows translation of SQL to dplyr&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;odbc&lt;/code&gt;package: provides the odbc drivers, but you could use the functions below with other drivers instead&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt;     DBI_Connection &amp;lt;- dbConnect(odbc(), 
+                                 driver = &amp;quot;SQL Server&amp;quot;,
+                                 server = Sys.getenv(&amp;quot;SERVER&amp;quot;),
+                                 database = Sys.getenv(&amp;quot;DATABASE&amp;quot;)
+ )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With the wave of &lt;code&gt;tidy verse&lt;/code&gt; evangelists the second option has become more popular as it allows us to convert SQL into R using the &lt;code&gt;dplyr&lt;/code&gt; commands chained with the pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) operator. &lt;code&gt;dplyr&lt;/code&gt; can translate many different query types into SQL. We can use it to do fairly complex queries without translation in just a few lines and obtain the results even though the data is still in the database.&lt;/p&gt;
&lt;p&gt;Useful DBI commands&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;dbConnect()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Create a DBI connection object&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;dbListTables()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;List the tables on the connection&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;dbListFields()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;List the fields for a given table on a given connection&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;dbSendQuery()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Send a query to execute on the server/connection&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;dbFetch()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Fetch the results from the server/connection&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;dbWriteTable()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Write a table to the connection&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;tbl()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Set a table on the connection as a &lt;code&gt;tibble&lt;/code&gt; for &lt;code&gt;dplyr&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;glimpse()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;See a summary of the rows, data types and top rows&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;reading-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Reading Data&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide&#34;&gt;European Centre for Disease Prevention and Control&lt;/a&gt; provides daily updates of newly reported cases of COVID-19 by country worldwide. The downloadable data file is updated daily and contains the latest available public data on COVID-19. Each row/entry contains the number of new cases reported per country and per day (with a lag of a day).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ecdc.europa.eu/en/publications-data/download-data-response-measures-covid-19&#34; class=&#34;uri&#34;&gt;https://www.ecdc.europa.eu/en/publications-data/download-data-response-measures-covid-19&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ecdc.europa.eu/en/cases-2019-ncov-eueea&#34; class=&#34;uri&#34;&gt;https://www.ecdc.europa.eu/en/cases-2019-ncov-eueea&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We will start the analysis by uploading the necessary packages and data into R. If you have not got the packages used in the following code, you will need to uncomment the first line (delete the &lt;code&gt;#&lt;/code&gt; symbol) in the code below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; #install.packages(c(&amp;quot;dplyr&amp;quot;, &amp;quot;stringr&amp;quot;)) # install multiple packages by passing a vector of package names to the function; this function will install the requested packages, along with any of their non-optional dependencies
&amp;gt; suppressPackageStartupMessages(library(readxl)) 
&amp;gt; suppressPackageStartupMessages(library(tidyverse))
&amp;gt; suppressPackageStartupMessages(library(httr))
&amp;gt; suppressPackageStartupMessages(library(lubridate))
&amp;gt; suppressPackageStartupMessages(library(dplyr))
&amp;gt; suppressPackageStartupMessages(library(plotly))
&amp;gt; suppressPackageStartupMessages(library(ggplot2))
&amp;gt; suppressPackageStartupMessages(library(cowplot))
&amp;gt; suppressPackageStartupMessages(library(scales))
&amp;gt; suppressPackageStartupMessages(library(sf))
&amp;gt; suppressPackageStartupMessages(library(DBI))
&amp;gt; suppressPackageStartupMessages(library(dbplyr))
&amp;gt; suppressPackageStartupMessages(library(tmap))
&amp;gt; suppressPackageStartupMessages(library(tmaptools))
&amp;gt; 
&amp;gt; 
&amp;gt; url2ecdc &amp;lt;- &amp;quot;https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-2020-11-30.xlsx&amp;quot;
&amp;gt; 
&amp;gt; suppressMessages(GET(url2ecdc, write_disk(tf &amp;lt;- tempfile(fileext = &amp;quot;.xlsx&amp;quot;))))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Response [https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-disbtribution-worldwide-2020-11-30.xlsx]
##   Date: 2021-02-24 17:27
##   Status: 200
##   Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
##   Size: 3.41 MB
## &amp;lt;ON DISK&amp;gt;  /var/folders/71/96w85flx3yl928r2hzpfwvd00000gp/T//RtmpN0XKYH/file66be7333587b.xlsx&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_world &amp;lt;- read_excel(tf)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will set up the database connection to work on &lt;code&gt;covid_world&lt;/code&gt; data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; SQLcon &amp;lt;- dbConnect(RSQLite::SQLite(), &amp;quot;:memory:&amp;quot;)
&amp;gt; dbWriteTable(SQLcon, &amp;quot;covid&amp;quot;, covid_world, overwrite=TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s see what tables we have in our database.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; dbListTables(SQLcon)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;covid&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can list the fields in a table:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; dbListFields(SQLcon, name = &amp;quot;covid&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;dateRep&amp;quot;                                                   
##  [2] &amp;quot;day&amp;quot;                                                       
##  [3] &amp;quot;month&amp;quot;                                                     
##  [4] &amp;quot;year&amp;quot;                                                      
##  [5] &amp;quot;cases&amp;quot;                                                     
##  [6] &amp;quot;deaths&amp;quot;                                                    
##  [7] &amp;quot;countriesAndTerritories&amp;quot;                                   
##  [8] &amp;quot;geoId&amp;quot;                                                     
##  [9] &amp;quot;countryterritoryCode&amp;quot;                                      
## [10] &amp;quot;popData2019&amp;quot;                                               
## [11] &amp;quot;continentExp&amp;quot;                                              
## [12] &amp;quot;Cumulative_number_for_14_days_of_COVID-19_cases_per_100000&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can run an SQL query directly from R. To illustrate it we will run a query to obtain distinct values for the field “continentExp”.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; dbFetch(dbSendQuery(SQLcon, &amp;quot;Select distinct continentExp from covid&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   continentExp
## 1         Asia
## 2       Europe
## 3       Africa
## 4      America
## 5      Oceania
## 6        Other&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we will run a query to count how many entries we have for each continent&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; dbFetch(
+   dbSendQuery(SQLcon,
+               &amp;quot;Select continentExp, count(*) as Count  
+                  from covid
+                  group by continentExp&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   continentExp Count
## 1       Africa 14196
## 2      America 13056
## 3         Asia 12653
## 4       Europe 16601
## 5      Oceania  2332
## 6        Other    64&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and see how many entries there are for the UK, using a &lt;code&gt;where&lt;/code&gt; clause.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; dbFetch(
+   dbSendQuery(SQLcon,
+                &amp;quot;Select continentExp, count(*) as Count  
+                   from covid
+                   Where countriesAndTerritories = &amp;#39;United_Kingdom&amp;#39;
+                   group by continentExp&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   continentExp Count
## 1       Europe   336&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fortunately, for people whose SQL is rusty, and who don’t feel like learning both SQL and R, we can do all of this using the &lt;code&gt;diplyr&lt;/code&gt; package in R.&lt;/p&gt;
&lt;p&gt;First we need to declare covid as a &lt;code&gt;tbl&lt;/code&gt; for use with &lt;code&gt;dplyr&lt;/code&gt;. We’ll call it &lt;code&gt;covid_ecdc&lt;/code&gt; to avoid any confusion.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_ecdc &amp;lt;- tbl(SQLcon, &amp;quot;covid&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will now be treated as an R tibble, but it is still in the database!!!&lt;/p&gt;
&lt;p&gt;It is always useful to have a quick glance at the data set structure to find out how the information it contains is structured. Knowledge of the structure is important, because it allows us later to filter out the desired information very precisely, based on criteria to limit specific dimensions, i.e. variables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_ecdc %&amp;gt;%
+   glimpse()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: ??
## Columns: 12
## Database: sqlite 3.33.0 [:memory:]
## $ dateRep                                                      &amp;lt;dbl&amp;gt; 16066944…
## $ day                                                          &amp;lt;dbl&amp;gt; 30, 29, …
## $ month                                                        &amp;lt;dbl&amp;gt; 11, 11, …
## $ year                                                         &amp;lt;dbl&amp;gt; 2020, 20…
## $ cases                                                        &amp;lt;dbl&amp;gt; 0, 228, …
## $ deaths                                                       &amp;lt;dbl&amp;gt; 0, 11, 1…
## $ countriesAndTerritories                                      &amp;lt;chr&amp;gt; &amp;quot;Afghani…
## $ geoId                                                        &amp;lt;chr&amp;gt; &amp;quot;AF&amp;quot;, &amp;quot;A…
## $ countryterritoryCode                                         &amp;lt;chr&amp;gt; &amp;quot;AFG&amp;quot;, &amp;quot;…
## $ popData2019                                                  &amp;lt;dbl&amp;gt; 38041757…
## $ continentExp                                                 &amp;lt;chr&amp;gt; &amp;quot;Asia&amp;quot;, …
## $ `Cumulative_number_for_14_days_of_COVID-19_cases_per_100000` &amp;lt;dbl&amp;gt; 6.416633…&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before we go any further and start the analysis of covid data we will replicate the above queries using the &lt;code&gt;dplyr&lt;/code&gt; functions. First, to illustrate how easy it is to do the column selection with &lt;code&gt;dplyr&lt;/code&gt; we’ll select &lt;code&gt;countriesAndTerritories&lt;/code&gt; and continentExp&lt;code&gt;from our&lt;/code&gt;covid_ecdc` data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; head(covid_ecdc %&amp;gt;% 
+        select(countriesAndTerritories, continentExp)) # returns first six rows of the vector, i.e. tibble&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # Source:   lazy query [?? x 2]
## # Database: sqlite 3.33.0 [:memory:]
##   countriesAndTerritories continentExp
##   &amp;lt;chr&amp;gt;                   &amp;lt;chr&amp;gt;       
## 1 Afghanistan             Asia        
## 2 Afghanistan             Asia        
## 3 Afghanistan             Asia        
## 4 Afghanistan             Asia        
## 5 Afghanistan             Asia        
## 6 Afghanistan             Asia&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The First query was the count of entries for each continent.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_ecdc %&amp;gt;% 
+   group_by(continentExp) %&amp;gt;% 
+   tally()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # Source:   lazy query [?? x 2]
## # Database: sqlite 3.33.0 [:memory:]
##   continentExp     n
##   &amp;lt;chr&amp;gt;        &amp;lt;int&amp;gt;
## 1 Africa       14196
## 2 America      13056
## 3 Asia         12653
## 4 Europe       16601
## 5 Oceania       2332
## 6 Other           64&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The second was to look for the number of entries for the UK.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_ecdc %&amp;gt;%
+   filter(countriesAndTerritories == &amp;quot;United_Kingdom&amp;quot;) %&amp;gt;%
+   tally()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # Source:   lazy query [?? x 1]
## # Database: sqlite 3.33.0 [:memory:]
##       n
##   &amp;lt;int&amp;gt;
## 1   336&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you do not have to manipulate and do the engineering work with DBs, but you need to access it to obtain data for the analysis, you might find it easier to do it all using the &lt;code&gt;dplyr&lt;/code&gt;. It is intuitive and therefore easier to write. You cannot deny that &lt;code&gt;dplyr&lt;/code&gt;’s version also looks neater.&lt;/p&gt;
&lt;p&gt;Next, we’ll check the total number of readings for each country and present it in a table using the &lt;code&gt;DT&lt;/code&gt; package. &lt;code&gt;DT&lt;/code&gt; provides an R interface to the JavaScript library &lt;a href=&#34;https://datatables.net&#34;&gt;&lt;code&gt;DataTables&lt;/code&gt;&lt;/a&gt;, which will enable us to filter through the displayed data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; if (!require(&amp;quot;DT&amp;quot;)) install.packages(&amp;#39;DT&amp;#39;) # returns a logical value say, FALSE if the requested package is not found and TRUE if the package is loaded
&amp;gt; tt &amp;lt;- covid_ecdc %&amp;gt;%
+   group_by(countriesAndTerritories) %&amp;gt;%
+   summarise(no_readings = n()) %&amp;gt;%
+   arrange(no_readings)
&amp;gt;   
&amp;gt; mdt &amp;lt;- DT::datatable(data.frame(tt))
&amp;gt; widgetframe::frameWidget(mdt)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/post/Covid_UK/index_files/figure-html//widgets/widget_covid_ecdc.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;tidying-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Tidying Data&lt;/h2&gt;
&lt;p&gt;We will focus our analysis on European countries and select them from our &lt;code&gt;covid_world&lt;/code&gt; data, saving it all as &lt;code&gt;covid_eu&lt;/code&gt; data frame object as this data needs tidying and wrangling and we do not want to limit ourselves by using only &lt;code&gt;dplyr&lt;/code&gt; functions in R.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_eu &amp;lt;- rbind(covid_world %&amp;gt;% filter(continentExp == &amp;quot;Europe&amp;quot;), 
+                   covid_world %&amp;gt;% filter(countriesAndTerritories == &amp;quot;Turkey&amp;quot;))  
&amp;gt; 
&amp;gt; mdt &amp;lt;- DT::datatable(covid_eu)
&amp;gt; widgetframe::frameWidget(mdt)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/post/Covid_UK/index_files/figure-html//widgets/widget_ecdc_data.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
You can, however, try to pull the data from the server into R’s memory and by using &lt;code&gt;dplyr&lt;/code&gt; functions do the required manipulations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_eu &amp;lt;- covid_ecdc %&amp;gt;% 
+   filter(continentExp == &amp;quot;Europe&amp;quot;) %&amp;gt;% 
+   collect()
&amp;gt;   
&amp;gt; mdt &amp;lt;- DT::datatable(covid_eu)
&amp;gt; widgetframe::frameWidget(mdt)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The experience with COVID-19 shows that the spread of the disease can be controlled by implementing the measures of prevention as soon as an outbreak has been detected.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To monitor the effectiveness of the measures introduced, we will focus on daily cumulative cases of COVID-19 infection that can be expressed as
&lt;span class=&#34;math display&#34;&gt;\[F(x) = \sum_{i=1}^{n} x_i\]&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Although &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; can show the volume of the epidemic, it does not tell us directly about the changes in the acceleration of the spread of infection. This information can be provided by the derivatives of the &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt;. The first derivative &lt;span class=&#34;math inline&#34;&gt;\(F^{’}(x)\)&lt;/span&gt; corresponds to the information on the number of new cases detected every day. The second derivative &lt;span class=&#34;math inline&#34;&gt;\(F^{’’}(x)\)&lt;/span&gt; provides the information about the acceleration of the epidemic. &lt;span class=&#34;math inline&#34;&gt;\(F^{’’}(x) \approx 0\)&lt;/span&gt; indicates the state of stagnation, while &lt;span class=&#34;math inline&#34;&gt;\(F^{’’}(x) &amp;lt; 0\)&lt;/span&gt; indicates deceleration and of course any &lt;span class=&#34;math inline&#34;&gt;\(F^{’’}(x) &amp;gt; 0\)&lt;/span&gt; acceleration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We will carry on with the analysis by tidying &lt;code&gt;covid_eu&lt;/code&gt; data and adding the information about those derivatives. First, we notice that there are 4 columns used to contain the date of reporting, which will allow us to remove columns 2-4 as redundant. We will only keep the &lt;code&gt;dateRep&lt;/code&gt; column which requires some tidying up in respect of the format in which the dates are recorded. We will also carry out the necessary calculations for obtaining the second derivative &lt;span class=&#34;math inline&#34;&gt;\(F^{’’}(x)\)&lt;/span&gt; and rename some of the variables to make them easier to display and type. 😁 All of this is very easy to carry out in R using the &lt;code&gt;tidy verse&lt;/code&gt;, opinionated collection of R packages for data science.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; # --- tidy data ---
&amp;gt; glimpse(covid_eu)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 16,863
## Columns: 12
## $ dateRep                                                      &amp;lt;dttm&amp;gt; 2020-11…
## $ day                                                          &amp;lt;dbl&amp;gt; 30, 29, …
## $ month                                                        &amp;lt;dbl&amp;gt; 11, 11, …
## $ year                                                         &amp;lt;dbl&amp;gt; 2020, 20…
## $ cases                                                        &amp;lt;dbl&amp;gt; 835, 545…
## $ deaths                                                       &amp;lt;dbl&amp;gt; 11, 16, …
## $ countriesAndTerritories                                      &amp;lt;chr&amp;gt; &amp;quot;Albania…
## $ geoId                                                        &amp;lt;chr&amp;gt; &amp;quot;AL&amp;quot;, &amp;quot;A…
## $ countryterritoryCode                                         &amp;lt;chr&amp;gt; &amp;quot;ALB&amp;quot;, &amp;quot;…
## $ popData2019                                                  &amp;lt;dbl&amp;gt; 2862427,…
## $ continentExp                                                 &amp;lt;chr&amp;gt; &amp;quot;Europe&amp;quot;…
## $ `Cumulative_number_for_14_days_of_COVID-19_cases_per_100000` &amp;lt;dbl&amp;gt; 342.1921…&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; #covid_eu &amp;lt;- covid_eu[, -c(2:4)] # remove redundant information
&amp;gt; covid_eu &amp;lt;- covid_eu %&amp;gt;% 
+   separate(dateRep, c(&amp;quot;dateRep&amp;quot;), sep = &amp;quot;T&amp;quot;) %&amp;gt;%
+   group_by(countriesAndTerritories) %&amp;gt;% 
+   arrange(dateRep) %&amp;gt;% 
+   mutate(total_cases = cumsum(cases), 
+          total_deaths = cumsum(deaths)) %&amp;gt;% 
+   mutate(Diff_cases = total_cases - lag(total_cases),  # 1st derivative (same as cases)
+          Rate_pc_cases = round(Diff_cases/lag(total_cases) * 100, 2)) %&amp;gt;% # rate of change
+   mutate(second_der = Diff_cases - lag(Diff_cases)) %&amp;gt;% # 2nd derivative
+   rename(country = countriesAndTerritories) %&amp;gt;% 
+   rename(country_code = countryterritoryCode) %&amp;gt;% 
+   rename(Fx14dper100K = &amp;quot;Cumulative_number_for_14_days_of_COVID-19_cases_per_100000&amp;quot;) %&amp;gt;% 
+   mutate(Fx14dper100K = round(Fx14dper100K))
&amp;gt; 
&amp;gt; covid_eu$dateRep &amp;lt;- as.Date(covid_eu$dateRep)
&amp;gt; head(covid_eu) # returns first six rows of the df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 17
## # Groups:   country [6]
##   dateRep      day month  year cases deaths country geoId country_code
##   &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       
## 1 2019-12-31    31    12  2019     0      0 Armenia AM    ARM         
## 2 2019-12-31    31    12  2019     0      0 Austria AT    AUT         
## 3 2019-12-31    31    12  2019     0      0 Azerba… AZ    AZE         
## 4 2019-12-31    31    12  2019     0      0 Belarus BY    BLR         
## 5 2019-12-31    31    12  2019     0      0 Belgium BE    BEL         
## 6 2019-12-31    31    12  2019     0      0 Croatia HR    HRV         
## # … with 8 more variables: popData2019 &amp;lt;dbl&amp;gt;, continentExp &amp;lt;chr&amp;gt;,
## #   Fx14dper100K &amp;lt;dbl&amp;gt;, total_cases &amp;lt;dbl&amp;gt;, total_deaths &amp;lt;dbl&amp;gt;,
## #   Diff_cases &amp;lt;dbl&amp;gt;, Rate_pc_cases &amp;lt;dbl&amp;gt;, second_der &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;writing-functions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Writing Functions&lt;/h1&gt;
&lt;p&gt;As we would like to be able to plot this time series of the second derivatives &lt;span class=&#34;math inline&#34;&gt;\(F^{’’}(x)\)&lt;/span&gt; for any country, we will create functions that will allow us to extract a country from the &lt;code&gt;covid_eu&lt;/code&gt; data and to plot it as a time series.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; # function for filltering a country from the given df
&amp;gt; sep_country &amp;lt;- function(df, ccode){ 
+   df_c &amp;lt;- df %&amp;gt;% 
+     filter(country_code == as.character(ccode))
+   return(df_c)
+ }
&amp;gt; 
&amp;gt; # plotting the 2nd derivative
&amp;gt; sec_der_plot &amp;lt;- function(df){
+   df %&amp;gt;% 
+   filter(!is.na(second_der)) %&amp;gt;% 
+     ggplot(aes(x = dateRep, y = second_der)) +
+     geom_line() + geom_point(col = &amp;quot;#00688B&amp;quot;) +
+     xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;) +
+     labs (title = &amp;quot;2nd derivative of F(x)&amp;quot;, 
+           caption = &amp;quot;Data from: https://www.ecdc.europa.eu&amp;quot;) +
+     theme_minimal() +
+     theme(plot.title = element_text(size = 14, vjust = 2, hjust=0.5),
+           panel.grid.major.x = element_blank(),
+           panel.grid.minor.x = element_blank())
+ }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-visualisation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Data Visualisation&lt;/h1&gt;
&lt;p&gt;Once we have accessed and tidied up our data in R we can carry out the exploitative analysis using visualisation as an effective tool.&lt;/p&gt;
&lt;div id=&#34;plotly-and-ggplot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;plotly and ggplot&lt;/h2&gt;
&lt;p&gt;We will start reporting by illustrating the time series of the daily number of new cases of infection and deaths. To make this plot more informative, we will create it as an interactive web graphic using the &lt;code&gt;plotly&lt;/code&gt; library. You can explore different kinds of &lt;code&gt;plotly&lt;/code&gt; graphs in R from &lt;a href=&#34;https://plotly.com/r/basic-charts/&#34; class=&#34;uri&#34;&gt;https://plotly.com/r/basic-charts/&lt;/a&gt; or by reading the &lt;a href=&#34;https://medium.com/swlh/step-by-step-data-visualization-guideline-with-plotly-in-r-fbd212640de2&#34;&gt;Step-by-Step Data Visualization Guideline with Plotly in R&lt;/a&gt; blog post.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.ecdc.europa.eu/en&#34;&gt;ecdc&lt;/a&gt; data updated on &lt;span style=&#34;color:dodgerblue3&#34;&gt;2020-11-30&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; # Plot cases and deaths day-by-day
&amp;gt; 
&amp;gt; covid_uk &amp;lt;- sep_country(covid_eu, &amp;quot;GBR&amp;quot;)
&amp;gt; 
&amp;gt; x &amp;lt;- list(title = &amp;quot;date reported&amp;quot;)
&amp;gt; 
&amp;gt; fig &amp;lt;- plot_ly(covid_uk, x = ~  dateRep) 
&amp;gt; fig &amp;lt;- fig %&amp;gt;% add_trace(y = ~cases, name = &amp;#39;cases&amp;#39;, type = &amp;#39;scatter&amp;#39;, mode = &amp;#39;lines&amp;#39;)
&amp;gt; fig &amp;lt;- fig %&amp;gt;% add_trace(y = ~deaths, name = &amp;#39;deaths&amp;#39;, type = &amp;#39;scatter&amp;#39;, mode = &amp;#39;lines&amp;#39;)   
&amp;gt; fig &amp;lt;- fig %&amp;gt;% layout(xaxis = x)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; fig&lt;/code&gt;&lt;/pre&gt;
&lt;iframe seamless src=&#34;fig1.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;The plots below illustrate dynamic changes based on the &lt;span class=&#34;math inline&#34;&gt;\(F(x)\)&lt;/span&gt; created using the &lt;code&gt;ggplot2&lt;/code&gt; package. What we would like to see is the flattening of the bars indicating the slowdown in the number of new Covid-19 cases.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_uk %&amp;gt;% 
+   ggplot(aes(x = dateRep, y = total_cases)) +
+   geom_bar(stat=&amp;quot;identity&amp;quot;, fill = &amp;quot;#00688B&amp;quot;) + 
+   labs (title = &amp;quot;Cumulative number of cases F(x)&amp;quot;, 
+         caption = &amp;quot;Data from: https://www.ecdc.europa.eu&amp;quot;, 
+         x = &amp;quot;Date&amp;quot;, y = &amp;quot;number of cases&amp;quot;) +
+   theme_minimal() +
+   theme(plot.title = element_text(size = 14, vjust = 2, hjust=0.5),
+         panel.grid.major.x = element_blank(),
+         panel.grid.minor.x = element_blank()) +
+   theme(legend.position=&amp;quot;none&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We will present the same information this time using the line plot integrating interactivity, displaying the information by using the &lt;code&gt;ggplotly()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; pl1 &amp;lt;- covid_uk %&amp;gt;% 
+   ggplot(aes(x = dateRep, y = total_cases)) +
+   geom_line() + geom_point(col = &amp;quot;#00688B&amp;quot;) +
+   xlab(&amp;quot;Date&amp;quot;) + ylab(&amp;quot;Number of Cases&amp;quot;) +
+   labs (title = &amp;quot;F(x)&amp;quot;, 
+         caption = &amp;quot;Data from: https://www.ecdc.europa.eu&amp;quot;) +
+   theme_minimal() +
+   theme(plot.title = element_text(size = 14, vjust = 2, hjust=0.5),
+         panel.grid.major.x = element_blank(),
+         panel.grid.minor.x = element_blank())
&amp;gt; pl1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The following graph presents the cumulative number of covid-19 cases using a logarithmic scale to emphasise the rate of change in a way that a linear scale does not.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; pl_log &amp;lt;- covid_uk %&amp;gt;% 
+   mutate(log_total_cases = log(total_cases)) %&amp;gt;% 
+   ggplot(aes(x = dateRep, y = log_total_cases)) +
+   geom_line() + geom_point(col = &amp;quot;#00688B&amp;quot;) +
+   xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;) +
+   labs (title = &amp;quot;F(x) on log scale&amp;quot;, 
+         caption = &amp;quot;Data from: https://www.ecdc.europa.eu&amp;quot;) +
+   theme_minimal() +
+   theme(plot.title = element_text(size = 14, vjust = 2, hjust=0.5),
+         panel.grid.major.x = element_blank(),
+         panel.grid.minor.x = element_blank()) 
&amp;gt; pl_log&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Sometimes it might be useful to present several plots next to each other. To do this in R we apply the &lt;code&gt;plot_grid()&lt;/code&gt; function from the &lt;code&gt;cowplot&lt;/code&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; plot_grid(pl1, pl_log)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; /&gt;
Next we will illustrate the cumulative number of cases for all selected European countries&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; all_plot &amp;lt;- covid_eu %&amp;gt;% 
+   filter(country_code %in% c(&amp;quot;GBR&amp;quot;, &amp;quot;FRA&amp;quot;, &amp;quot;DEU&amp;quot;, &amp;quot;ITA&amp;quot;, &amp;quot;ESP&amp;quot;, &amp;quot;SWE&amp;quot;)) %&amp;gt;% 
+   filter(dateRep &amp;gt; (max(dateRep) - 21)) %&amp;gt;% 
+   ggplot(aes(x = dateRep, y = total_cases, colour = country_code)) +
+   geom_line() + 
+   xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;) +
+   labs (title = &amp;quot;F(x) in the last three weeks&amp;quot;, 
+         caption = &amp;quot;Data from: https://www.ecdc.europa.eu&amp;quot;) +
+   theme_minimal() +
+   theme(plot.title = element_text(size = 14, vjust = 2, hjust=0.5),
+         panel.grid.major.x = element_blank(),
+         panel.grid.minor.x = element_blank()) +
+   scale_x_date(labels = date_format(&amp;quot;%m-%d&amp;quot;),
+                breaks = &amp;#39;day&amp;#39;) +
+   scale_colour_brewer(palette = &amp;quot;Set1&amp;quot;) +
+   theme_classic() +
+   theme(legend.position = &amp;quot;bottom&amp;quot;) +
+   theme(axis.text.x = element_text(angle = 90)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; ggplotly(all_plot)&lt;/code&gt;&lt;/pre&gt;
&lt;iframe seamless src=&#34;fig2.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;Again, this would be easier to compare using the log scale&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_eu %&amp;gt;% 
+   filter(country_code %in% c(&amp;quot;GBR&amp;quot;, &amp;quot;FRA&amp;quot;, &amp;quot;DEU&amp;quot;, &amp;quot;ITA&amp;quot;, &amp;quot;ESP&amp;quot;, &amp;quot;SWE&amp;quot;)) %&amp;gt;% 
+   filter(dateRep &amp;gt; (max(dateRep) - 21)) %&amp;gt;% 
+   mutate(log_total_cases = log(total_cases)) %&amp;gt;% 
+   ggplot(aes(x = dateRep, y = log_total_cases, colour = country_code)) +
+   geom_line() + 
+   xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;) +
+   labs (title = &amp;quot;logF(x) in the last three weeks&amp;quot;, 
+         caption = &amp;quot;Data from: https://www.ecdc.europa.eu&amp;quot;) +
+   theme_minimal() +
+   theme(plot.title = element_text(size = 14, vjust = 2, hjust=0.5),
+         panel.grid.major.x = element_blank(),
+         panel.grid.minor.x = element_blank()) +
+   scale_x_date(labels = date_format(&amp;quot;%m-%d&amp;quot;),
+                breaks = &amp;#39;day&amp;#39;) +
+   scale_colour_brewer(palette = &amp;quot;Set1&amp;quot;) +
+   theme_classic() +
+   theme(legend.position = &amp;quot;bottom&amp;quot;) +
+   theme(axis.text.x = element_text(angle = 45)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;672&#34; /&gt;
The following plot enables us to observe the change in the acceleration in relation to the governmental measures.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_uk %&amp;gt;% 
+   filter(!is.na(second_der)) %&amp;gt;% 
+   ggplot(aes(x = dateRep, y = second_der)) +
+   geom_line() + geom_point(col = &amp;quot;#00688B&amp;quot;) +
+   xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;) +
+   labs (title = &amp;quot;2nd derivative of F(x) for the UK&amp;quot;, 
+         caption = &amp;quot;Data from: https://www.ecdc.europa.eu&amp;quot;) +
+   theme_minimal() +
+   theme(plot.title = element_text(size = 14, vjust = 2, hjust=0.5),
+         panel.grid.major.x = element_blank(),
+         panel.grid.minor.x = element_blank()) +
+   geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2020-03-23&amp;quot;)), linetype = 3, colour = &amp;quot;red&amp;quot;, alpha = 0.5) +
+   geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2020-05-10&amp;quot;)), linetype = 3, colour = &amp;quot;dodgerblue4&amp;quot;, alpha = 0.5) +
+   geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2020-07-04&amp;quot;)), linetype = 3, colour = &amp;quot;chartreuse4&amp;quot;, alpha = 0.5) +
+   geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2020-11-05&amp;quot;)), linetype = 3, colour = &amp;quot;red&amp;quot;, alpha = 0.5) +
+   annotate(geom=&amp;quot;text&amp;quot;, x=as.Date(&amp;quot;2020-03-23&amp;quot;), y = 8000, 
+            label=&amp;quot;UK wide lockdown&amp;quot;, col = &amp;quot;red&amp;quot;) +
+   annotate(geom=&amp;quot;text&amp;quot;, x=as.Date(&amp;quot;2020-05-21&amp;quot;), y = 5000, 
+            label=&amp;quot;lockdown lifting plan&amp;quot;, col = &amp;quot;dodgerblue4&amp;quot;) +
+   annotate(geom=&amp;quot;text&amp;quot;, x=as.Date(&amp;quot;2020-07-04&amp;quot;), y = -5000, 
+            label=&amp;quot;wide-ranging changes&amp;quot; , col = &amp;quot;chartreuse4&amp;quot;) +
+   annotate(geom=&amp;quot;text&amp;quot;, x=as.Date(&amp;quot;2020-11-05&amp;quot;), y = 8000, 
+            label=&amp;quot;UK wide lockdown&amp;quot;, col = &amp;quot;red&amp;quot;)  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-27-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let us see how these figures compare with other countries in particular France and Germany.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;France: &lt;span class=&#34;math inline&#34;&gt;\(F^{&amp;#39;&amp;#39;}(x)\)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_fr &amp;lt;- sep_country(covid_eu, &amp;quot;FRA&amp;quot;) 
&amp;gt; sec_der_plot(covid_fr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-28-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Germany: &lt;span class=&#34;math inline&#34;&gt;\(F^{&amp;#39;&amp;#39;}(x)\)&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_de &amp;lt;- sep_country(covid_eu, &amp;quot;DEU&amp;quot;) 
&amp;gt; sec_der_plot(covid_de)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-29-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Next, we are going to visualise a comparison between these three countries of the total number of deaths month by month.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_eu %&amp;gt;% 
+    filter(country %in% c(&amp;quot;United_Kingdom&amp;quot;, &amp;quot;Germany&amp;quot;, &amp;quot;France&amp;quot;)) %&amp;gt;% 
+    mutate(mon = month(dateRep, label = TRUE, abbr = TRUE)) %&amp;gt;% 
+    group_by(country, mon) %&amp;gt;% 
+    summarise(no_readings = n(), tdeath = max(total_deaths)) %&amp;gt;% 
+    ggplot(aes(x = mon, y = tdeath, fill = country)) +
+    geom_bar(stat=&amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;, color = &amp;quot;black&amp;quot;) +
+    theme(plot.title = element_text(size = 14, vjust = 2, hjust=0.5)) +
+    labs (title = &amp;quot;total number of deaths by month&amp;quot;, 
+          caption = &amp;quot;Data from: https://www.ecdc.europa.eu/en&amp;quot;, 
+          x = &amp;quot;month&amp;quot;, y = &amp;quot;number of deaths&amp;quot;) +
+    scale_fill_brewer(palette=&amp;quot;Paired&amp;quot;) + 
+    theme(legend.position=&amp;quot;bottom&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-30-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can make the same kind of comparisons for the total number of infections. But, before we just copy/paste and make an adjustment for &lt;code&gt;y&lt;/code&gt; access, note that the order of the months does not show in the timeline of covid events. The recording of information about the spread of the pandemic started last December, which means that the bars should be in order from December to November. We are also going to flip the bars to see if it will add to its readability.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_eu %&amp;gt;% 
+    filter(country %in% c(&amp;quot;United_Kingdom&amp;quot;, &amp;quot;Germany&amp;quot;, &amp;quot;France&amp;quot;)) %&amp;gt;% 
+    mutate(mon = month(dateRep, label = TRUE, abbr = TRUE)) %&amp;gt;% 
+    mutate(mon = factor(mon, levels=c(&amp;quot;Dec&amp;quot;, &amp;quot;Jan&amp;quot;, &amp;quot;Feb&amp;quot;, &amp;quot;Mar&amp;quot;, &amp;quot;Apr&amp;quot;, &amp;quot;May&amp;quot;, &amp;quot;Jun&amp;quot;, &amp;quot;Jul&amp;quot;, &amp;quot;Aug&amp;quot;, &amp;quot;Sep&amp;quot;, &amp;quot;Oct&amp;quot;, &amp;quot;Nov&amp;quot;))) %&amp;gt;% 
+    group_by(country, mon) %&amp;gt;% 
+    summarise(no_readings = n(), tcases = max(total_cases)) %&amp;gt;% 
+    ggplot(aes(x = mon, y = tcases, fill = country)) +
+    geom_bar(stat=&amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;, color = &amp;quot;black&amp;quot;) +
+    coord_flip() +
+    theme(plot.title = element_text(size = 14, vjust = 2, hjust=0.5)) +
+    labs (title = &amp;quot;total number of infections by month&amp;quot;, 
+          caption = &amp;quot;Data from: https://www.ecdc.europa.eu/en&amp;quot;, 
+          x = &amp;quot;month&amp;quot;, y = &amp;quot;number of infections&amp;quot;) +
+    scale_fill_brewer(palette=&amp;quot;Set1&amp;quot;) + 
+    theme(legend.position=&amp;quot;bottom&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-31-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can present the total number of infections for each month. As the numbers are high we are going to “control” the way the values on the &lt;code&gt;y&lt;/code&gt; access are going to appear.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_eu %&amp;gt;% 
+    filter(country %in% c(&amp;quot;United_Kingdom&amp;quot;, &amp;quot;Germany&amp;quot;, &amp;quot;France&amp;quot;)) %&amp;gt;% 
+    mutate(mon = month(dateRep, label = TRUE, abbr = TRUE)) %&amp;gt;% 
+    mutate(mon = factor(mon, levels=c(&amp;quot;Dec&amp;quot;, &amp;quot;Jan&amp;quot;, &amp;quot;Feb&amp;quot;, &amp;quot;Mar&amp;quot;, &amp;quot;Apr&amp;quot;, &amp;quot;May&amp;quot;, &amp;quot;Jun&amp;quot;, &amp;quot;Jul&amp;quot;, &amp;quot;Aug&amp;quot;, &amp;quot;Sep&amp;quot;, &amp;quot;Oct&amp;quot;, &amp;quot;Nov&amp;quot;))) %&amp;gt;% 
+    group_by(country, mon) %&amp;gt;% 
+    summarise(month_cases = sum(cases)) %&amp;gt;% 
+    ggplot(aes(x = mon, y = month_cases, fill = country)) +
+    geom_bar(stat=&amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;, color = &amp;quot;black&amp;quot;) +
+    theme(plot.title = element_text(size = 14, vjust = 2, hjust=0.5)) +
+    scale_y_continuous(breaks = seq(0, 800000, 200000), labels = c(&amp;quot;0&amp;quot;, &amp;quot;200K&amp;quot;, &amp;quot;400K&amp;quot;, &amp;quot;600K&amp;quot;, &amp;quot;800K&amp;quot;)) +
+    labs (title = &amp;quot;total number of infections each month&amp;quot;, 
+          caption = &amp;quot;Data from: https://www.ecdc.europa.eu/en&amp;quot;, 
+          x = &amp;quot;month&amp;quot;, y = &amp;quot;number of deaths&amp;quot;) +
+    scale_fill_brewer(palette=&amp;quot;Dark2&amp;quot;) + 
+    theme(legend.position=&amp;quot;bottom&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-32-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Next, we are going to present the total number of deaths for each of the months since the recording began. Note, that in the code there is a line that is currently set as a comment that allows for the values to appear as texts on the top of the bars. You can go ahead and uncomment this line by removing the hashtag symbol in front of it.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_eu %&amp;gt;% 
+    filter(country %in% c(&amp;quot;United_Kingdom&amp;quot;, &amp;quot;Germany&amp;quot;, &amp;quot;France&amp;quot;)) %&amp;gt;% 
+    mutate(mon = month(dateRep, label = TRUE, abbr = TRUE)) %&amp;gt;% 
+    mutate(mon = factor(mon, levels=c(&amp;quot;Dec&amp;quot;, &amp;quot;Jan&amp;quot;, &amp;quot;Feb&amp;quot;, &amp;quot;Mar&amp;quot;, &amp;quot;Apr&amp;quot;, &amp;quot;May&amp;quot;, &amp;quot;Jun&amp;quot;, &amp;quot;Jul&amp;quot;, &amp;quot;Aug&amp;quot;, &amp;quot;Sep&amp;quot;, &amp;quot;Oct&amp;quot;, &amp;quot;Nov&amp;quot;))) %&amp;gt;% 
+    group_by(country, mon) %&amp;gt;% 
+    summarise(month_deaths = sum(deaths)) %&amp;gt;% 
+    ggplot(aes(x = mon, y = month_deaths, fill = country)) +
+    geom_bar(stat=&amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;, color = &amp;quot;black&amp;quot;) +
+    theme(plot.title = element_text(size = 14, vjust = 2, hjust=0.5)) +
+ #   geom_text(aes(label = month_cases), size = 3, hjust = 0.5) +  
+    labs (title = &amp;quot;total number of deaths each month&amp;quot;, 
+          caption = &amp;quot;Data from: https://www.ecdc.europa.eu/en&amp;quot;, 
+          x = &amp;quot;month&amp;quot;, y = &amp;quot;number of cases&amp;quot;) +
+    scale_fill_brewer(palette=&amp;quot;Accent&amp;quot;) + 
+    theme(legend.position=&amp;quot;bottom&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-33-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;spatial-visualisation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Spatial Visualisation&lt;/h2&gt;
&lt;p&gt;We will create a choropleth in which we will colour the EU countries according to the most current value of cumulative numbers for 14 days of COVID-19 cases per 100000. To do this we will use the shape file onto which we will superimpose this value as a colour of the polygon, i.e. country.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; #points to the shape file
&amp;gt; bound &amp;lt;- &amp;quot;shapes/eu_countries_simplified.shp&amp;quot;
&amp;gt; 
&amp;gt; #used the st_read() function to import it
&amp;gt; bound &amp;lt;- st_read(bound)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Reading layer `eu_countries_simplified&amp;#39; from data source `/Users/Tanja1/Documents/My_R/mws/content/post/Covid_UK/shapes/eu_countries_simplified.shp&amp;#39; using driver `ESRI Shapefile&amp;#39;
## replacing null geometries with empty geometries
## Simple feature collection with 54 features and 4 fields (with 4 geometries empty)
## geometry type:  GEOMETRY
## dimension:      XY
## bbox:           xmin: -10.48 ymin: 34.5675 xmax: 44.81861 ymax: 71.13312
## CRS:            4326&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; # plot the shape file
&amp;gt; ggplot(bound) + 
+   geom_sf()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-34-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; covid_EU &amp;lt;- covid_eu %&amp;gt;% 
+   filter(dateRep == max(dateRep))
&amp;gt; 
&amp;gt; 
&amp;gt; # tidy up
&amp;gt; # make the country names correspond to ecdc data 
&amp;gt; bound$country &amp;lt;- gsub(&amp;quot; &amp;quot;, &amp;quot;_&amp;quot;, bound$country)
&amp;gt; bound &amp;lt;- bound %&amp;gt;% 
+   mutate(country = fct_recode(country,
+                               &amp;quot;Czechia&amp;quot; = &amp;quot;Czech_Republic&amp;quot;,
+                               &amp;quot;North_Macedonia&amp;quot; = &amp;quot;Macedonia&amp;quot;))
&amp;gt; 
&amp;gt; # join data from the two data frames  
&amp;gt; my_map &amp;lt;- left_join(bound, covid_EU,
+                     by = c(&amp;quot;country&amp;quot; = &amp;quot;country&amp;quot;))
&amp;gt; 
&amp;gt; ggplot(my_map) +
+   geom_sf(aes(fill = Fx14dper100K)) +
+   scale_fill_distiller(direction = 1, name = &amp;quot;Fx14per100K&amp;quot;) +
+   labs(title=&amp;quot;Cumulative number for 14 days of COVID-19 cases per 100000&amp;quot;, caption=&amp;quot;Source: ecdc&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/Covid_UK/index_files/figure-html/unnamed-chunk-34-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; mdt &amp;lt;- DT::datatable(my_map)
&amp;gt; widgetframe::frameWidget(mdt)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-4&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-4&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;/post/Covid_UK/index_files/figure-html//widgets/widget_unnamed-chunk-35.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;hr /&gt;
&lt;p&gt;With the &lt;code&gt;tmap&lt;/code&gt; package, thematic maps can be generated with great effectiveness presenting several layers of information. The syntax is similar to the one adopted in &lt;code&gt;ggplot&lt;/code&gt;. Motivation and the explanation of this package has been proposed and published in the article &lt;a href=&#34;https://www.jstatsoft.org/article/view/v084i06&#34;&gt;tmap: Thematic Maps in R&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are interested in learning more about creating maps in R check the online version of the book &lt;a href=&#34;https://geocompr.robinlovelace.net&#34;&gt;Geocomputation with R&lt;/a&gt;. &lt;a href=&#34;https://geocompr.robinlovelace.net/adv-map.html&#34;&gt;Chapter 8: The Making maps with R&lt;/a&gt; provides an easy to follow overview on using the &lt;code&gt;tmap&lt;/code&gt; and other packages for creating beautiful maps in R.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; my_map &amp;lt;- my_map %&amp;gt;% 
+   mutate(ln_deaths = log(deaths)^10)
&amp;gt; 
&amp;gt; #tmap_mode(mode =  &amp;quot;view&amp;quot;)
&amp;gt; 
&amp;gt; tm_shape(my_map) +
+   tm_polygons(&amp;quot;Fx14dper100K&amp;quot;, 
+               id = &amp;quot;country&amp;quot;, 
+               palette = &amp;quot;YlGn&amp;quot;, 
+               popup.vars=c(&amp;quot;cases&amp;quot;, 
+                            &amp;quot;deaths&amp;quot;)) +
+   tm_layout(title = &amp;quot;Covid-19 EU&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;data source: &amp;lt;a href=&amp;#39;https://www.ecdc.europa.eu/en/covid-19-pandemic&amp;#39;&amp;gt;ECDC&amp;lt;/a&amp;gt;&amp;quot;,
+             frame = FALSE,
+             inner.margins = c(0.1, 0.1, 0.05, 0.05)) &lt;/code&gt;&lt;/pre&gt;
&lt;iframe seamless src=&#34;europe.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;Lastly, we should not forget to disconnect from the database.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dbDisconnect(SQLcon)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;useful-links&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Useful Links&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://db.rstudio.com&#34;&gt;Databases using R&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://datacarpentry.org/R-ecology-lesson/05-r-and-databases.html&#34;&gt;SQL databases and R&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://plotly-r.com&#34;&gt;Book: Interactive web-based data visualization with R, plotly, and shiny&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;font color=&#34;gray&#34;&gt;&lt;strong&gt;Working with a DB in R&lt;/strong&gt; section is an adaptation of &lt;a href=&#34;https://nhsrcommunity.com/&#34;&gt;the NHS-R Community&lt;/a&gt; &lt;a href=&#34;https://nhsrcommunity.com/learn-r/workshops/database-connections-in-r-webinar/&#34;&gt;&lt;strong&gt;Database Connections in R&lt;/strong&gt;&lt;/a&gt; webinar created and run by &lt;a href=&#34;https://www.mainard.co.uk/&#34;&gt;Chris Mainey&lt;/a&gt;.&lt;/font&gt;
&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Thematic Maps</title>
      <link>/post/cins_map/</link>
      <pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate>
      <guid>/post/cins_map/</guid>
      <description>


&lt;p&gt;Thematic maps are geographical maps in which spatial data distributions are visualised. Earlier this year I contributed to the &lt;a href=&#34;https://www.cins.rs/en/&#34;&gt;CINS’&lt;/a&gt; article about &lt;a href=&#34;https://www.cins.rs/sns-sps-i-ds-za-sedam-godina-gradjani-strankama-donirali-oko-15-milijardi-dinara/&#34;&gt;donations to local political parties for the period between 2012-2018&lt;/a&gt;. We created an interactive thematic map, choropleth, shading the development group of the town and adding two more layers of information, i.e. attributes: the total amount of money donated (size and the colour of the bubble) and the amount of money received by each of the political parties (popup menu)&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;
&lt;p lang=&#34;und&#34; dir=&#34;ltr&#34;&gt;
🔎Pogledajte odakle dolaze donatori &lt;a href=&#34;https://twitter.com/sns_srbija?ref_src=twsrc%5Etfw&#34;&gt;&lt;span class=&#34;citation&#34;&gt;@sns_srbija&lt;/span&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/socijalisti?ref_src=twsrc%5Etfw&#34;&gt;&lt;span class=&#34;citation&#34;&gt;@socijalisti&lt;/span&gt;&lt;/a&gt; i &lt;a href=&#34;https://twitter.com/demokrate?ref_src=twsrc%5Etfw&#34;&gt;&lt;span class=&#34;citation&#34;&gt;@demokrate&lt;/span&gt;&lt;/a&gt; i ko je prikupio najviše para od donacija u periodu od sedam godina 💸👇&lt;a href=&#34;https://t.co/2HHXrSLSLC&#34;&gt;https://t.co/2HHXrSLSLC&lt;/a&gt;
&lt;/p&gt;
— CINS (&lt;span class=&#34;citation&#34;&gt;@CINSerbia&lt;/span&gt;) &lt;a href=&#34;https://twitter.com/CINSerbia/status/1264812939401400320?ref_src=twsrc%5Etfw&#34;&gt;May 25, 2020&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;To create an interactive map like this in R you will need the &lt;a href=&#34;https://cran.r-project.org/web/packages/tmap/tmap.pdf&#34;&gt;&lt;code&gt;tmap&lt;/code&gt;&lt;/a&gt; package. In order to provide the workflow to create thematic maps, additionally you need a set of tools for reading and processing spatial data, available through the &lt;a href=&#34;https://cran.r-project.org/web/packages/tmaptools/index.html&#34;&gt;&lt;code&gt;tmaptools&lt;/code&gt;&lt;/a&gt;. I will illustrate how easy it is to create a thematic map using the &lt;code&gt;tmap&lt;/code&gt; package, but you can learn more about this package from the &lt;a href=&#34;https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html&#34;&gt;tmap: get started!&lt;/a&gt; website.&lt;/p&gt;
&lt;p&gt;R has impressive geographic capabilities and can handle different kinds of spatial data file formats including geojson and KML. In this example we will make use of the ESRI Shapefile format, which stores non-topological geometry and attribute information for the spatial features in a data set. A shapefile consists minimally of a main file, an index file, and a dBASE table.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.shp - lists shape and vertices&lt;/li&gt;
&lt;li&gt;.shx - has index with offsets&lt;/li&gt;
&lt;li&gt;.dbf - relationship file between geometry and attributes (data)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To import an ESRI shapefile into R correctly, all three files must be present in the directory and named the same (except for the file extension).&lt;/p&gt;
&lt;p&gt;To reproduce this example you will need to download spatial files and data that is visualised on the map. You can download this data bundle from &lt;a href=&#34;https://github.com/TanjaKec/tm_bundle/archive/main.zip&#34;&gt;here&lt;/a&gt;. These shape files with Serbian districts’ boundaries are obtained from &lt;a href=&#34;https://gadm.org/download_country_v3.html&#34;&gt;GADM maps and data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We will start by uploading the required packages and read simple features from our spatial files as indicated in the code below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## If you don&amp;#39;t have ggplot2, dplyr, sf, sp, tm, tmaptools installed yet, uncomment and run the line below
#install.packages(&amp;quot;ggplot2&amp;quot;, &amp;quot;dplyr&amp;quot;, &amp;quot;sf&amp;quot;, &amp;quot;sp&amp;quot;, &amp;quot;readxl&amp;quot;, tm&amp;quot;, &amp;quot;tmaptools&amp;quot;)
library(ggplot2)
library(dplyr)
library(sf)
library(sp)
library(readxl)
library(tmap)
library(tmaptools)

#pointed to the shape file
serbia_location1 &amp;lt;- &amp;quot;spatial/gadm36_SRB_1.shp&amp;quot;

#used the st_read() function to import it
serbia_districts1 &amp;lt;- st_read(serbia_location1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The visualisation needs to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;indicate the development group for each Serbian municipality&lt;/li&gt;
&lt;li&gt;display donations to local political parties for the period between 2012-2018 for each municipality&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Belgrade city has several municipalities, but donations to local political parties for the period between 2012-2018 is given for the whole of Belgrade. This requires removing the boundary for the whole of the Belgrade district and combining it with the boundaries for the rest of the Serbian municipalities.&lt;/p&gt;
&lt;p&gt;In order to filter the necessary geometry for the Belgrade district and to combine it with the sf data for Serbian municipalities we will use &lt;a href=&#34;https://r-spatial.github.io/sf/reference/tidyverse.html&#34;&gt;&lt;code&gt;tidyverse&lt;/code&gt; methods for sf objects&lt;/a&gt;. Another issue we need to address is that data also contains information about Kosovo which needs to be included on the map. We will read shape files for Serbian and Kosovo municipalities and combine them into one.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# filter out geometry of Belgrade&amp;#39;s district
serbia_districts1 &amp;lt;- serbia_districts1 %&amp;gt;% 
  filter(as.character(VARNAME_1) == &amp;quot;Belgrade&amp;quot;)


# pointed to the shape files for municipalities (Serbia and Kosovo)
serbia_location &amp;lt;- &amp;quot;gadm36_SRB_2.shp&amp;quot;
kosovo_location &amp;lt;- &amp;quot;gadm36_XKO_2.shp&amp;quot;
#used the st_read() function to import them
serbia_districts &amp;lt;- st_read(serbia_location)
kosovo_districts &amp;lt;- st_read(kosovo_location)

# replace geometries of Belgrade&amp;#39;s municipalities with Belgrade district 
BG &amp;lt;- serbia_districts %&amp;gt;%
  filter(NAME_2 == &amp;quot;Stari Grad&amp;quot;)
BG$NAME_2 &amp;lt;- &amp;quot;Beograd&amp;quot;
BG$NL_NAME_2 &amp;lt;- BG$NL_NAME_1
BG$geometry &amp;lt;- serbia_districts1$geometry

serbia_districts_BG &amp;lt;- serbia_districts %&amp;gt;% 
  filter(NAME_1 != &amp;quot;Grad Beograd&amp;quot;)

serbia_districts_BG1 &amp;lt;- rbind(BG, serbia_districts_BG)

# combine sf data of serbia and Kosovo 
sr &amp;lt;- rbind(serbia_districts_BG1, kosovo_districts)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the next step we read data to be mapped given in the Excel file and make sure that the names of the municipalities correspond to the names in the &lt;code&gt;sf&lt;/code&gt; file in the old fashioned way 😁.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# read excel file
razvijenost &amp;lt;- read_excel(&amp;quot;razvijenost.xlsx&amp;quot;, sheet = 1)

ki &amp;lt;- serbia_districts$NL_NAME_2[serbia_districts$NAME_2 == &amp;quot;Kikinda&amp;quot;]
gm &amp;lt;- serbia_districts$NL_NAME_2[serbia_districts$NAME_2 == &amp;quot;Gornji Milanovac&amp;quot;]
ar &amp;lt;- serbia_districts$NL_NAME_2[serbia_districts$NAME_2 == &amp;quot;Arilje&amp;quot;]
pe &amp;lt;- serbia_districts$NL_NAME_2[serbia_districts$NAME_2 == &amp;quot;Petrovac&amp;quot;]
dm &amp;lt;- serbia_districts$NL_NAME_2[serbia_districts$NAME_2 == &amp;quot;Dimitrovgrad&amp;quot;]
# ----
pr &amp;lt;- kosovo_districts$NL_NAME_2[kosovo_districts$NAME_2 == &amp;quot;Priština&amp;quot;]
ur &amp;lt;- kosovo_districts$NL_NAME_2[kosovo_districts$NAME_2 == &amp;quot;Uroševac&amp;quot;]

razvijenost$Town[razvijenost$Town == &amp;quot;Кикинда&amp;quot;] &amp;lt;- ki
razvijenost$Town[razvijenost$Town ==&amp;quot;Горњи Милановац&amp;quot;] &amp;lt;- gm 
razvijenost$Town[razvijenost$Town ==&amp;quot;Ариље&amp;quot;] &amp;lt;- ar 
razvijenost$Town[razvijenost$Town ==&amp;quot;Петровац на Млави&amp;quot;] &amp;lt;- pe 
razvijenost$Town[razvijenost$Town ==&amp;quot;Димитровград&amp;quot;] &amp;lt;- dm 
# ----
razvijenost$Town[razvijenost$Town ==&amp;quot;Приштина&amp;quot;] &amp;lt;- pr
razvijenost$Town[razvijenost$Town ==&amp;quot;Урошевац&amp;quot;] &amp;lt;- ur

# merge data: sf and excel 
my_map &amp;lt;- left_join(sr, razvijenost,
                    by=c(&amp;quot;NL_NAME_2&amp;quot; = &amp;quot;Town&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once data is organised it can be mapped using &lt;code&gt;tmap&lt;/code&gt;. To make it aesthetically more appealing we will rescale the values for total donations so that the bubbles that are going to be used in its visualisation are not too small nor too big. Another matter that needs to be addressed is that the polygon of Negotin’s municipality has an extra border that needs to be removed before we can map data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# ====================
# ----- Mapping ------

library(tmap)
library(tmaptools)

# scaling `donation`
my_map &amp;lt;- my_map %&amp;gt;% 
  mutate(ln_donation = log(donation)^6)

# Pull out the geometry for Negotin
bad_geo  = 
  my_map %&amp;gt;%
  filter(NAME_2 == &amp;quot;Negotin&amp;quot;) %&amp;gt;%
  pull(geometry)
# Keep only the first of the two polygon borders
good_geo = bad_geo[[1]][1]
# Replace old geometry with fixed
my_map$geometry[which(my_map$NAME_2 == &amp;quot;Negotin&amp;quot;)] &amp;lt;- st_multipolygon(good_geo)

# set tmap mode to interactive viewing
tmap_mode(mode =  &amp;quot;view&amp;quot;)

# shade municipalities according to the group development and superimpose bubble which size and colour shade correspond to the total level of donation. Enable pop-up information about individual party donations (show it using Latin alphabet rather than Cyrillic).
tm_shape(my_map) +
  tm_polygons(&amp;quot;development_group&amp;quot;, 
              id = &amp;quot;NAME_2&amp;quot;, 
              palette = &amp;quot;YlGn&amp;quot;, 
              title = &amp;quot;Grupa razvijenosti&amp;quot;,
              textNA = &amp;quot;nema podataka&amp;quot;,
              popup.vars=c(&amp;quot;DS&amp;quot;=&amp;quot;ДС&amp;quot;, 
                           &amp;quot;SNS&amp;quot;=&amp;quot;СНС&amp;quot;,  
                           &amp;quot;SPS&amp;quot;=&amp;quot;СПС&amp;quot;,
                           &amp;quot;Ukupno (RSD)&amp;quot; = &amp;quot;donation&amp;quot;)) +
  tm_bubbles(size = &amp;quot;ln_donation&amp;quot;, 
             col = &amp;quot;donation&amp;quot;, 
             border.col = &amp;quot;black&amp;quot;, 
             border.alpha = 1, 
             style = &amp;quot;fixed&amp;quot;, 
             breaks=c(0 , 1000000, 10000000, 50000000, 100000000, 200000000, 500000000),
             palette = &amp;quot;PuRd&amp;quot;, 
             contrast = 1, 
             title.col = &amp;quot;Ukupno donirano u RSD&amp;quot;,
             id = &amp;quot;NAME_2&amp;quot;,
             popup.vars=c(&amp;quot;DS&amp;quot;=&amp;quot;ДС&amp;quot;, 
                          &amp;quot;SNS&amp;quot;=&amp;quot;СНС&amp;quot;,  
                          &amp;quot;SPS&amp;quot;=&amp;quot;СПС&amp;quot;,
                          &amp;quot;Ukupno (RSD)&amp;quot; = &amp;quot;donation&amp;quot;)) +
  tm_layout(legend.title.size = .5, legend.text.size = .65,
            legend.frame = TRUE,
            legend.format = list(fun = function(x) { 
              formatC(x, digits = 0, big.mark = &amp;quot;,&amp;quot;, format = &amp;quot;f&amp;quot;)
            })) +
  tm_layout(title = &amp;quot;Prilozi građana za period 2012-2018&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;izvor podataka: &amp;lt;a href=&amp;#39;http://www.acas.rs/&amp;#39;&amp;gt;ACAS&amp;lt;/a&amp;gt; i &amp;lt;a href=&amp;#39;ras.gov.rs&amp;#39;&amp;gt;RAS&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;© &amp;lt;a href=&amp;#39;https://www.cins.rs/&amp;#39;&amp;gt;CINS&amp;lt;/a&amp;gt;, maj 2020&amp;quot;,
            frame = FALSE,
            inner.margins = c(0.1, 0.1, 0.05, 0.05)) &lt;/code&gt;&lt;/pre&gt;
&lt;iframe seamless src=&#34;prilozi_gradjana_links.html&#34; width=&#34;100%&#34; height=&#34;500&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;This is information rich visualisation. It incorporates an interactive thematic map, choropleth, shading the development group of the town and adding two more layers of information, i.e. attributes: the total amount of money donated (size and the colour of the bubble) and the amount of money received by each of the political parties (popup menu).&lt;/p&gt;
&lt;p&gt;Incorporating interactive visualisation with clearly presented facts, helped to empower readers by informing them in an effective manner.&lt;/p&gt;
&lt;p&gt;This was an excellent example of effective data journalism, employed as a direct result of &lt;a href=&#34;https://www.cins.rs/en/&#34;&gt;CINS&lt;/a&gt; embracing the capacity of the &lt;a href=&#34;https://rtoolbox.rbind.io/&#34;&gt;RToolbox&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Covid SR: data visualisation</title>
      <link>/post/covid_sr/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/post/covid_sr/</guid>
      <description>


&lt;p&gt;There is no a definitive way for carrying out data analysis. It rather depends on the study domain and the insights you wish to extract from the data that you can collect.&lt;/p&gt;
&lt;p&gt;This post is an ongoing covid-19 data journey that illustrates the behaviour of Covid-19 pandemic within the Republic of Serbia and neighbouring ex-YU countries. All of the report is created with R and is presented on its’ designated website &amp;lt; &lt;a href=&#34;https://covid19sr.rbind.io/&#34; class=&#34;uri&#34;&gt;https://covid19sr.rbind.io/&lt;/a&gt;&amp;gt; built with 💙 using the &lt;a href=&#34;https://bookdown.org&#34;&gt;&lt;code&gt;blogdown&lt;/code&gt;&lt;/a&gt;
and &lt;a href=&#34;https://themes.gohugo.io/air/&#34;&gt;Air&lt;/a&gt; &lt;a href=&#34;https://gohugo.io/&#34;&gt;HUGO&lt;/a&gt; theme.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coronavirus: See How Many Medical Ventilators There Are in Your Town</title>
      <link>/post/ventilators/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/ventilators/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leaflet/leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leafletfix/leafletfix.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/Proj4Leaflet/proj4-compressed.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/Proj4Leaflet/proj4leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/rstudio_leaflet/rstudio_leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet-binding/leaflet.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;r-markdown&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R Markdown&lt;/h2&gt;
&lt;p&gt;For patients critically ill with COVID-19, access to a ventilator could be a matter of life or death. In early March at the beginning of the COVID-19 pandemic the Serbian government was not disclosing information about the available number of ventilators to its citizens. &lt;a href=&#34;https://www.cins.rs/en/&#34;&gt;CINS’&lt;/a&gt; journalists took the initiative to obtain this information and to make it available to the public in an article concerning respiratory equipment in the current crisis. Shortly after, the government took more serious action towards protecting its citizens against the virus.&lt;/p&gt;
&lt;p&gt;As a data scientist I was pleased to assist CINS’ journalists in making interactive maps informing readers of their findings.&lt;/p&gt;
&lt;p&gt;This article can be found at
&lt;a href=&#34;https://www.cins.rs/en/coronavirus-see-how-many-medical-ventilators-there-are-in-your-town/&#34; class=&#34;uri&#34;&gt;https://www.cins.rs/en/coronavirus-see-how-many-medical-ventilators-there-are-in-your-town/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To create an interactive map like this in R you will need the &lt;code&gt;leaflet&lt;/code&gt; package. &lt;strong&gt;Leaflet&lt;/strong&gt; is one of the most popular open-source JavaScript libraries for interactive maps that was integrated into R, by a team of people from RStudio. We will illustrate how easy it is to plot a location map using the leaflet package, but you can learn more about this package from the &lt;a href=&#34;https://rstudio.github.io/leaflet/&#34;&gt;Leaflet for R&lt;/a&gt; website.&lt;/p&gt;
&lt;p&gt;Here is what we did.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(leaflet)
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(tidyverse))

mydata &amp;lt;- read.csv(&amp;#39;Gradovi.csv&amp;#39;, 
                    header=T, 
                    na.strings=c(&amp;quot;&amp;quot;,&amp;quot;NA&amp;quot;),
                    stringsAsFactor = FALSE) 

glimpse(mydata)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 69
## Columns: 7
## $ Mesta         &amp;lt;chr&amp;gt; &amp;quot;Bačka Topola&amp;quot;, &amp;quot;Subotica&amp;quot;, &amp;quot;Kikinda&amp;quot;, &amp;quot;Senta&amp;quot;, &amp;quot;Zrenja…
## $ Latitude      &amp;lt;dbl&amp;gt; 45.81442, 46.10055, 45.82728, 45.92601, 45.38156, 45.77…
## $ Longitude     &amp;lt;dbl&amp;gt; 19.63796, 19.66506, 20.46152, 20.07809, 20.36857, 19.11…
## $ Koristi.se    &amp;lt;int&amp;gt; 1, 19, 6, 6, 13, 14, 3, 1, 4, 14, 98, 48, 1, 1, 0, 16, …
## $ Ne.koristi.se &amp;lt;int&amp;gt; 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 5, 8, 0, 0, 1, 0, 0, 0, 0…
## $ Nepoznato     &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0…
## $ Ukupno        &amp;lt;int&amp;gt; 1, 19, 6, 7, 13, 14, 3, 1, 6, 14, 103, 56, 1, 1, 1, 16,…&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;minlat &amp;lt;- min(mydata$Latitude)
maxlat &amp;lt;- max(mydata$Latitude)
minlng &amp;lt;- min(mydata$Longitude)
maxlng &amp;lt;- max(mydata$Longitude)

mydata %&amp;gt;% 
   leaflet() %&amp;gt;% 
   addTiles() %&amp;gt;%
   fitBounds(~minlng, ~minlat, ~maxlng, ~maxlat) %&amp;gt;% 
   addCircles(lng = ~Longitude, lat = ~Latitude,
              radius = 750, weight = 7, color = &amp;quot;black&amp;quot;,
              fillColor = &amp;quot;red&amp;quot;, fillOpacity = 0.7,  
              popup = ~paste(&amp;quot;&amp;lt;b&amp;gt;&amp;quot;, Mesta, &amp;quot;&amp;lt;/b&amp;gt;&amp;quot;, &amp;quot;&amp;lt;br&amp;gt;Koristi se = &amp;quot;, Koristi.se,&amp;quot;&amp;lt;br&amp;gt;Ne koristi se = &amp;quot;,  Ne.koristi.se, &amp;quot;&amp;lt;br&amp;gt; Nepoznato =&amp;quot;, Nepoznato, &amp;quot;&amp;lt;br&amp;gt;Total =&amp;quot;, Ukupno, &amp;quot;&amp;lt;br&amp;gt;&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addCircles&#34;,&#34;args&#34;:[[45.8144238,46.1005467,45.8272842,45.9260128,45.3815612,45.773295,44.9018213,45.1071651,45.1181926,44.874,45.2671352,45.2208633,45.6138162,45.415745,45.2497275,45.5701534,45.0485391,45.00806,45.1287251,45.1011851,44.9794968,44.6034915,44.786568,44.5313463,44.7488612,44.2743141,44.367191,44.6658941,44.37366517,44.4766526,44.6208353,44.3082168,44.0127932,44.24984,43.858616,43.9777294,43.925537,44.0698918,44.6035552,44.2288747,44.4191965,43.9015048,43.5660829,43.9705397,43.4676913,45.8461,43.5827565,43.2741145,43.8555729,43.7504777,43.5827565,43.3893574,43.8555729,43.8914144,44.0207262,43.1406976,43.7238483,43.5763232,43.3209022,43.5409901,43.2367913,43.0638347,43.1557012,42.9963758,42.5450345,42.6907233,42.3091712,42.8913909,42.6014008],[19.6379551,19.6650593,20.4615173,20.0780937,20.3685737,19.1151469,21.4232908,20.6595515,21.2944883,20.6475673,19.8335496,19.8470699,20.0459853,19.8931066,19.3967698,19.6449683,20.0808092,19.82222,19.7897422,19.8616812,19.6209662,20.45241,20.4489216,19.2067663,19.6907882,19.8903398,20.9604515,20.9335169,21.41833166,21.6742577,21.1842054,20.5562765,20.9114225,21.2008216,21.403911,21.2572719,21.3748327,22.0985086,22.6098737,22.5310674,21.9495234,22.2738011,22.2466754,19.5649108,19.8125507,20.0365,19.5266606,20.0032054,19.842471,19.7142007,19.5266606,19.6463666,19.842471,20.3501652,20.4633133,20.5213617,20.6872542,21.3335812,21.8957589,21.7183695,21.5915831,22.4061647,22.5856811,21.944034,21.9002712,22.1720303,21.6498686,20.8659995,21.1918761],750,null,null,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:true,&#34;color&#34;:&#34;black&#34;,&#34;weight&#34;:7,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColor&#34;:&#34;red&#34;,&#34;fillOpacity&#34;:0.7},[&#34;&lt;b&gt; Bačka Topola &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Subotica &lt;\/b&gt; &lt;br&gt;Koristi se =  19 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 19 &lt;br&gt;&#34;,&#34;&lt;b&gt; Kikinda &lt;\/b&gt; &lt;br&gt;Koristi se =  6 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 6 &lt;br&gt;&#34;,&#34;&lt;b&gt; Senta &lt;\/b&gt; &lt;br&gt;Koristi se =  6 &lt;br&gt;Ne koristi se =  1 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 7 &lt;br&gt;&#34;,&#34;&lt;b&gt; Zrenjanin &lt;\/b&gt; &lt;br&gt;Koristi se =  13 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 13 &lt;br&gt;&#34;,&#34;&lt;b&gt; Sombor &lt;\/b&gt; &lt;br&gt;Koristi se =  14 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 14 &lt;br&gt;&#34;,&#34;&lt;b&gt; Bela Crkva &lt;\/b&gt; &lt;br&gt;Koristi se =  3 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 3 &lt;br&gt;&#34;,&#34;&lt;b&gt; Kovačica &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Vršac &lt;\/b&gt; &lt;br&gt;Koristi se =  4 &lt;br&gt;Ne koristi se =  2 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 6 &lt;br&gt;&#34;,&#34;&lt;b&gt; Pančevo &lt;\/b&gt; &lt;br&gt;Koristi se =  14 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 14 &lt;br&gt;&#34;,&#34;&lt;b&gt; Novi Sad &lt;\/b&gt; &lt;br&gt;Koristi se =  98 &lt;br&gt;Ne koristi se =  5 &lt;br&gt; Nepoznato = 6 &lt;br&gt;Total = 103 &lt;br&gt;&#34;,&#34;&lt;b&gt; Sremska Kamenica &lt;\/b&gt; &lt;br&gt;Koristi se =  48 &lt;br&gt;Ne koristi se =  8 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 56 &lt;br&gt;&#34;,&#34;&lt;b&gt; Bečej &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Temerin &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Bačka Palanka &lt;\/b&gt; &lt;br&gt;Koristi se =  0 &lt;br&gt;Ne koristi se =  1 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Vrbas &lt;\/b&gt; &lt;br&gt;Koristi se =  16 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 16 &lt;br&gt;&#34;,&#34;&lt;b&gt; Inđija &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Ruma &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Vrdnik &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Irig &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Sremska Mitrovica &lt;\/b&gt; &lt;br&gt;Koristi se =  8 &lt;br&gt;Ne koristi se =  1 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 9 &lt;br&gt;&#34;,&#34;&lt;b&gt; Barajevo &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Beograd &lt;\/b&gt; &lt;br&gt;Koristi se =  430 &lt;br&gt;Ne koristi se =  30 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 460 &lt;br&gt;&#34;,&#34;&lt;b&gt; Loznica &lt;\/b&gt; &lt;br&gt;Koristi se =  5 &lt;br&gt;Ne koristi se =  1 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 6 &lt;br&gt;&#34;,&#34;&lt;b&gt; Šabac &lt;\/b&gt; &lt;br&gt;Koristi se =  5 &lt;br&gt;Ne koristi se =  1 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 6 &lt;br&gt;&#34;,&#34;&lt;b&gt; Valjevo &lt;\/b&gt; &lt;br&gt;Koristi se =  9 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 9 &lt;br&gt;&#34;,&#34;&lt;b&gt; Smederevska Palanka &lt;\/b&gt; &lt;br&gt;Koristi se =  3 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 3 &lt;br&gt;&#34;,&#34;&lt;b&gt; Smederevo &lt;\/b&gt; &lt;br&gt;Koristi se =  10 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 10 &lt;br&gt;&#34;,&#34;&lt;b&gt; Petrovac &lt;\/b&gt; &lt;br&gt;Koristi se =  2 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 2 &lt;br&gt;&#34;,&#34;&lt;b&gt; Kučevo &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Požarevac &lt;\/b&gt; &lt;br&gt;Koristi se =  8 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 8 &lt;br&gt;&#34;,&#34;&lt;b&gt; Aranđelovac &lt;\/b&gt; &lt;br&gt;Koristi se =  4 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 4 &lt;br&gt;&#34;,&#34;&lt;b&gt; Kragujevac &lt;\/b&gt; &lt;br&gt;Koristi se =  35 &lt;br&gt;Ne koristi se =  2 &lt;br&gt; Nepoznato = 3 &lt;br&gt;Total = 40 &lt;br&gt;&#34;,&#34;&lt;b&gt; Svilajnac &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Paraćin &lt;\/b&gt; &lt;br&gt;Koristi se =  3 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 3 &lt;br&gt;&#34;,&#34;&lt;b&gt; Jagodina &lt;\/b&gt; &lt;br&gt;Koristi se =  4 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 4 &lt;br&gt;&#34;,&#34;&lt;b&gt; Ćuprija &lt;\/b&gt; &lt;br&gt;Koristi se =  7 &lt;br&gt;Ne koristi se =  2 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 9 &lt;br&gt;&#34;,&#34;&lt;b&gt; Bor &lt;\/b&gt; &lt;br&gt;Koristi se =  3 &lt;br&gt;Ne koristi se =  2 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 5 &lt;br&gt;&#34;,&#34;&lt;b&gt; Kladovo &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  1 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 2 &lt;br&gt;&#34;,&#34;&lt;b&gt; Negotin &lt;\/b&gt; &lt;br&gt;Koristi se =  2 &lt;br&gt;Ne koristi se =  1 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 3 &lt;br&gt;&#34;,&#34;&lt;b&gt; Majdanpek &lt;\/b&gt; &lt;br&gt;Koristi se =  2 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 2 &lt;br&gt;&#34;,&#34;&lt;b&gt; Zaječar &lt;\/b&gt; &lt;br&gt;Koristi se =  8 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 8 &lt;br&gt;&#34;,&#34;&lt;b&gt; Knjaževac &lt;\/b&gt; &lt;br&gt;Koristi se =  3 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 3 &lt;br&gt;&#34;,&#34;&lt;b&gt; Bajina Bašta &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Nova Varoš &lt;\/b&gt; &lt;br&gt;Koristi se =  3 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 3 &lt;br&gt;&#34;,&#34;&lt;b&gt; Požega &lt;\/b&gt; &lt;br&gt;Koristi se =  3 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 3 &lt;br&gt;&#34;,&#34;&lt;b&gt; Priboj &lt;\/b&gt; &lt;br&gt;Koristi se =  3 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 3 &lt;br&gt;&#34;,&#34;&lt;b&gt; Sjenica &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Užice &lt;\/b&gt; &lt;br&gt;Koristi se =  2 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 2 &lt;br&gt;&#34;,&#34;&lt;b&gt; Čajetina &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Priboj &lt;\/b&gt; &lt;br&gt;Koristi se =  2 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 2 &lt;br&gt;&#34;,&#34;&lt;b&gt; Prijepolje &lt;\/b&gt; &lt;br&gt;Koristi se =  2 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 2 &lt;br&gt;&#34;,&#34;&lt;b&gt; Užice &lt;\/b&gt; &lt;br&gt;Koristi se =  10 &lt;br&gt;Ne koristi se =  3 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 13 &lt;br&gt;&#34;,&#34;&lt;b&gt; Čačak &lt;\/b&gt; &lt;br&gt;Koristi se =  16 &lt;br&gt;Ne koristi se =  1 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 17 &lt;br&gt;&#34;,&#34;&lt;b&gt; Gornji Milanovac &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Novi Pazar &lt;\/b&gt; &lt;br&gt;Koristi se =  3 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 3 &lt;br&gt;&#34;,&#34;&lt;b&gt; Kraljevo &lt;\/b&gt; &lt;br&gt;Koristi se =  10 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 10 &lt;br&gt;&#34;,&#34;&lt;b&gt; Kruševac &lt;\/b&gt; &lt;br&gt;Koristi se =  6 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 6 &lt;br&gt;&#34;,&#34;&lt;b&gt; Niš &lt;\/b&gt; &lt;br&gt;Koristi se =  43 &lt;br&gt;Ne koristi se =  2 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 45 &lt;br&gt;&#34;,&#34;&lt;b&gt; Aleksinac &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Prokuplje &lt;\/b&gt; &lt;br&gt;Koristi se =  4 &lt;br&gt;Ne koristi se =  6 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 4 &lt;br&gt;&#34;,&#34;&lt;b&gt; Babušnica &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Pirot &lt;\/b&gt; &lt;br&gt;Koristi se =  7 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 7 &lt;br&gt;&#34;,&#34;&lt;b&gt; Leskovac &lt;\/b&gt; &lt;br&gt;Koristi se =  7 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 7 &lt;br&gt;&#34;,&#34;&lt;b&gt; Vranje &lt;\/b&gt; &lt;br&gt;Koristi se =  13 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 13 &lt;br&gt;&#34;,&#34;&lt;b&gt; Surdulica &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;,&#34;&lt;b&gt; Preševo &lt;\/b&gt; &lt;br&gt;Koristi se =  2 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 2 &lt;br&gt;&#34;,&#34;&lt;b&gt; Kosovska Mitrovica &lt;\/b&gt; &lt;br&gt;Koristi se =  7 &lt;br&gt;Ne koristi se =  2 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 9 &lt;br&gt;&#34;,&#34;&lt;b&gt; Gračanica &lt;\/b&gt; &lt;br&gt;Koristi se =  1 &lt;br&gt;Ne koristi se =  0 &lt;br&gt; Nepoznato = 0 &lt;br&gt;Total = 1 &lt;br&gt;&#34;],null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null,null]}],&#34;fitBounds&#34;:[42.3091712,19.1151469,46.1005467,22.6098737,[]],&#34;limits&#34;:{&#34;lat&#34;:[42.3091712,46.1005467],&#34;lng&#34;:[19.1151469,22.6098737]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;hr /&gt;
&lt;p&gt;This was data democracy in action, a means of holding governments to account and nudging them into action. By empowering citizens to be data literate they are able to cut through the fog of misinformation and to have a deeper understanding of the world we live in. There is no need for everyone to be a data scientist, but there is an urgent need for data literacy to be available to everyone. Data is democracy.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Air pollution in Belgrade</title>
      <link>/post/oh/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/post/oh/</guid>
      <description>


&lt;p&gt;Earlier in March we ran our first ever &lt;a href=&#34;https://openheroines.org&#34;&gt;Open Heroines&lt;/a&gt; event here in Belgrade.&lt;/p&gt;
&lt;p&gt;We got things started by creating &lt;a href=&#34;https://ohsa.netlify.app/&#34;&gt;a website&lt;/a&gt; publicising our event and making it clear from the get go what the participants could expect from the event. The website was created in &lt;a href=&#34;https://rstudio.com&#34;&gt;RStudio&lt;/a&gt; using &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;&lt;code&gt;blogdown&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://themes.gohugo.io&#34;&gt;HUGO&lt;/a&gt; and deployed using &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt; and &lt;a href=&#34;https://www.netlify.com&#34;&gt;Netlify&lt;/a&gt;. The responses to the site were very positive and we were particularly bowled over by the wide range of backgrounds of the people wishing to attend. From economists to journalists, students to CEOs, the desire to understand more about the power of data acted as the adhesive to the collective ensemble.&lt;/p&gt;
&lt;p&gt;We illustrated the process of the democratisation of open data. In the belief that we should use a topical subject for analysis, we looked at data related to air pollution in Belgrade sourced from &lt;a href=&#34;https://klimerko.org&#34;&gt;Vazduh Gradjanima&lt;/a&gt; – a hot talking point within the city. We created R-Markdown reports where the participants created visual data reporting of the core issues related to air pollution. There was an amazing response to everyone being able to learn how to interact with data, as if a new world was now available to them.&lt;/p&gt;
&lt;p&gt;In the spirit of transparency and reproducibility for those who were not fortunate to join us in learning how to use R and analyse this air pollution data, we uploaded our findings to the GitHub &lt;a href=&#34;https://tanjakec.github.io/OH_workshop/OHSA.html&#34; class=&#34;uri&#34;&gt;https://tanjakec.github.io/OH_workshop/OHSA.html&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why R? An illustration through the use of ggplot and magick</title>
      <link>/post/why_r/</link>
      <pubDate>Sun, 27 Aug 2017 00:00:00 +0000</pubDate>
      <guid>/post/why_r/</guid>
      <description>


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;R&lt;/strong&gt; language provides a rich and flexible environment for working with data, especially data to be used for statistical modelling or graphics.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt; is a comprehensive public domain language for data analysis, with no licensing costs associated with it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Being independent of any platform, &lt;strong&gt;R&lt;/strong&gt; is universally applicable and simple to integrate into existing IT structures.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can download &lt;strong&gt;R&lt;/strong&gt; for free from:&lt;br /&gt;
&lt;a href=&#34;https://cran.r-project.org/&#34; class=&#34;uri&#34;&gt;https://cran.r-project.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;and &lt;a href=&#34;https://www.rstudio.com/&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;, a free and open-source integrated development environment (IDE) for &lt;strong&gt;R&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.rstudio.com/&#34; class=&#34;uri&#34;&gt;https://www.rstudio.com/&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;data-science&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Science&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The new vast amount of data we have begun to take more and more notice of, has given a rise to the new discipline of data science.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Growing demand of data volume and easy understandability of extracted knowledge and insights from data is the motivating force of data science.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With the explosion of “Big Data” problems, data science has become a very hot field in many scientific areas as well as marketing, finance, and other business and social study disciplines. Hence, there is a growing demand for business and social scientific researchers with statistical, modelling and computing skills.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can now identify patterns and regularities in data of all sorts that allow us to advance scholarship, improve the human condition, and create commercial and social value.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The field of data science is emerging at the intersection of the fields of statistics, computer science and design. &lt;strong&gt;R&lt;/strong&gt; provides grate platform for this multidisciplinarity. It is incredibly powerful and as such it should be the first language for data manipulation, data analysis and visualisation you’re looking to grow skills in if you want to move towards data science.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;why-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why R?&lt;/h2&gt;
&lt;ol style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;R&lt;/strong&gt; system has an extensive library of packages that offer state-of-the-art-abilities.&lt;br /&gt;
Many of the analyses that they offer are not even available in any of the standard packages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The functionalities of:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;data manipulation,&lt;/li&gt;
&lt;li&gt;data analysis and&lt;/li&gt;
&lt;li&gt;visualisation implemented in &lt;strong&gt;R&lt;/strong&gt; are incomparable.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: lower-alpha&#34;&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt; enables you to escape from the restrictive environments and sterile analyses offered by commonly used statistical software packages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt; enables easy experimentation and exploration, which improves data analysis.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt; is a tool behind reporting modern data analyses in a reproducible manner making an analysis more useful to others because the data and code that actually conducted the analysis can be made available.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;r-community&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R Community&lt;/h2&gt;
&lt;p&gt;“The &lt;strong&gt;R&lt;/strong&gt; community is one of &lt;strong&gt;R&lt;/strong&gt;’s best features!”
&lt;a href=&#34;http://blog.revolutionanalytics.com/&#34;&gt;Revolutions&lt;/a&gt; Daily news about using open source &lt;strong&gt;R&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Supported by the &lt;strong&gt;R Foundation for Statistical Computing&lt;/strong&gt; and with the strong and open engagement of developers and users from all walks of background from science to commerce it is hard to envisage that any commercial corporation will be able to develop sustainable business model with the same innovative drive and power as &lt;strong&gt;R community&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The collaboration amongst statisticians and other scientist who are engaged with statistical computing and growing interest and engagement of large companies creates altruistic &lt;strong&gt;R community&lt;/strong&gt; which generates the force within which &lt;strong&gt;R&lt;/strong&gt; is conquering the field of data analytics. As a result it creates a more powerful &lt;strong&gt;R&lt;/strong&gt; resource and becomes more usable and attractive to Data scientists and analysists.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;list-of-resources&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;List of resources&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://ropensci.org/&#34;&gt;ROpenSci&lt;/a&gt;: “&lt;strong&gt;R&lt;/strong&gt; community is not just for ‘power users’ or developers. It’s a place for users and people interested in learning more about &lt;strong&gt;R&lt;/strong&gt;”;
Provides list of useful links:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/search?q=%23rstats&#34;&gt;#rstats hashtag&lt;/a&gt; — a responsive, welcoming, and inclusive community of &lt;strong&gt;R&lt;/strong&gt; users to interact with on Twitter&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rladies.org/&#34;&gt;R-Ladies&lt;/a&gt; — a world-wide organization focused on promoting gender diversity within the &lt;strong&gt;R&lt;/strong&gt; community, with more than 30 local chapters&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jumpingrivers.github.io/meetingsR/r-user-groups.html&#34;&gt;Local R meetup groups&lt;/a&gt; — a google search may show that there’s one in your area! If not, maybe consider starting one! Face-to-face meet-ups for users of all levels are incredibly valuable&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://rweekly.org/&#34;&gt;Rweekly&lt;/a&gt; — an incredible weekly recap of all things &lt;strong&gt;R&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.r-bloggers.com/&#34;&gt;R-bloggers&lt;/a&gt; — an awesome resource to find posts from many different bloggers using &lt;strong&gt;R&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.datacarpentry.org/&#34;&gt;DataCarpentry&lt;/a&gt; and &lt;a href=&#34;https://software-carpentry.org/&#34;&gt;Software Carpentry&lt;/a&gt; — a resource of openly available lessons that promote and model reproducible research&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt; — chances are your R question has already been answered here (with additional resources for people looking for jobs)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;who-uses-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Who uses R?&lt;/h2&gt;
&lt;p&gt;Some of the major domains using &lt;strong&gt;R&lt;/strong&gt; include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Financial Services,&lt;/li&gt;
&lt;li&gt;Pharmaceuticals,&lt;/li&gt;
&lt;li&gt;Telecom,&lt;/li&gt;
&lt;li&gt;Life Sciences and&lt;/li&gt;
&lt;li&gt;Education sector.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Top companies using &lt;strong&gt;R&lt;/strong&gt; are :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.me&#34;&gt;Google&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/&#34;&gt;LinkedIn&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/&#34;&gt;Facebook&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;http://johnburnmurdoch.github.io/&#34;&gt;Financial Times&lt;/a&gt;: Quantitative Journalism,&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.amazon.com&#34;&gt;Amazon&lt;/a&gt; and many more…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;how-do-we-do-it&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;How do we do it?&lt;/h2&gt;
&lt;p&gt;Tools needed in a typical data science project:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Program_HW.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R for Data Science&lt;/strong&gt;
by Garrett Grolemund &amp;amp; Hadley Wickham&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://r4ds.had.co.nz/index.html&#34; class=&#34;uri&#34;&gt;http://r4ds.had.co.nz/index.html&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;real-example&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Real Example&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://www.declawing-project.org/&#34;&gt;Does declawing (onychectomy) cause harm to cats?&lt;/a&gt; Analyzing 17 years’ worth of shelter admissions data.
- The dataset captures specifics about the individual cat (declawed status, age, breed, coat color, etc.) as well as the primary reason for admission. Some of the admission reasons are unconnected to the animal (e.g., moving, can’t afford pet, allergies) — but some reasons are based on problematic behaviors exhibited by the cat (e.g., house-soiling, aggressive to other animals, aggressive to people). Available to us is a CSV file containing 200 sample records.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;DataCSV.png&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Cat_Data&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;do-it-in-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Do it in R&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Install and load packages and data 
# The tidyverse is a collection of R packages designed for data science
# Install the complete tidyverse with
# install.packages(&amp;quot;tidyverse&amp;quot;)
# load the complete tidyverse with
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Attaching packages ─────────────────────────────────────────────────────────── tidyverse 1.3.0 ──&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ✓ ggplot2 3.3.1     ✓ purrr   0.3.4
## ✓ tibble  3.0.1     ✓ dplyr   1.0.2
## ✓ tidyr   1.1.0     ✓ stringr 1.4.0
## ✓ readr   1.3.1     ✓ forcats 0.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ── Conflicts ────────────────────────────────────────────────────────────── tidyverse_conflicts() ──
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Install and load the ggplot2 package: grammer of graphics
# Install and load the magick package fo advanced image-processing in R
# install.packages(&amp;quot;magick&amp;quot;)
library(magick)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Linking to ImageMagick 6.9.11.32
## Enabled features: cairo, fontconfig, freetype, lcms, pango, rsvg, webp
## Disabled features: fftw, ghostscript, x11&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# load the data saved on your computer
# cat_claw &amp;lt;- read.csv(&amp;quot;declawing_data_sample.csv&amp;quot;)
# or load the data directly from the website
cat_claw &amp;lt;- read.csv(&amp;quot;declawing_data_sample.csv&amp;quot;)
# Have a look at the data: head()
# let us look at first three raws of the data
head(cat_claw, n = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Animal.ID Animal.Name Species Gender Date.Of.Birth      Primary.Breed
## 1   1032415      HARLEY     Cat      M     9/18/1999 Domestic Shorthair
## 2   1032962     TRUCKER     Cat      M     4/10/1998 Domestic Shorthair
## 3   1033799                 Cat      M      2/2/2000  Domestic Longhair
##   Secondary.Breed Declawed Distinguishing.Markings Purebred BodyWeight
## 1             Mix     None                                0          0
## 2             Mix     None                                0          0
## 3             Mix     None                                0          2
##   BodyWeightUnit PrimaryColor SecondaryColor ColorPattern         Intake.Date
## 1           &amp;lt;NA&amp;gt;        Black          White         &amp;lt;NA&amp;gt; 03/18/2000 00:14:00
## 2           &amp;lt;NA&amp;gt;         Grey           &amp;lt;NA&amp;gt;        Tiger 04/06/2000 00:45:00
## 3          pound        Black           &amp;lt;NA&amp;gt;         &amp;lt;NA&amp;gt; 05/02/2000 00:37:00
##                Intake.Type Intake.Subtype        Reason Reason.Category
## 1 Owner/Guardian Surrender       Schedule                          &amp;lt;NA&amp;gt;
## 2                    Stray        Walk In                          &amp;lt;NA&amp;gt;
## 3 Owner/Guardian Surrender        Walk In Too Many Pets   Owner problem&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Have alook at the structure of the data: str()
# look at the structure of the data
str(cat_claw)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;data.frame&amp;#39;:    200 obs. of  20 variables:
##  $ Animal.ID              : int  1032415 1032962 1033799 1033965 1038328 1048494 1052572 1053299 1054811 1057979 ...
##  $ Animal.Name            : chr  &amp;quot;HARLEY&amp;quot; &amp;quot;TRUCKER&amp;quot; &amp;quot;&amp;quot; &amp;quot;&amp;quot; ...
##  $ Species                : chr  &amp;quot;Cat&amp;quot; &amp;quot;Cat&amp;quot; &amp;quot;Cat&amp;quot; &amp;quot;Cat&amp;quot; ...
##  $ Gender                 : chr  &amp;quot;M&amp;quot; &amp;quot;M&amp;quot; &amp;quot;M&amp;quot; &amp;quot;M&amp;quot; ...
##  $ Date.Of.Birth          : chr  &amp;quot;9/18/1999&amp;quot; &amp;quot;4/10/1998&amp;quot; &amp;quot;2/2/2000&amp;quot; &amp;quot;3/7/2000&amp;quot; ...
##  $ Primary.Breed          : chr  &amp;quot;Domestic Shorthair&amp;quot; &amp;quot;Domestic Shorthair&amp;quot; &amp;quot;Domestic Longhair&amp;quot; &amp;quot;Domestic Longhair&amp;quot; ...
##  $ Secondary.Breed        : chr  &amp;quot;Mix&amp;quot; &amp;quot;Mix&amp;quot; &amp;quot;Mix&amp;quot; &amp;quot;Mix&amp;quot; ...
##  $ Declawed               : chr  &amp;quot;None&amp;quot; &amp;quot;None&amp;quot; &amp;quot;None&amp;quot; &amp;quot;None&amp;quot; ...
##  $ Distinguishing.Markings: chr  &amp;quot;&amp;quot; &amp;quot;&amp;quot; &amp;quot;&amp;quot; &amp;quot;&amp;quot; ...
##  $ Purebred               : int  0 0 0 0 0 0 0 0 0 0 ...
##  $ BodyWeight             : num  0 0 2 0 0 0 0 12 0 0 ...
##  $ BodyWeightUnit         : chr  NA NA &amp;quot;pound&amp;quot; NA ...
##  $ PrimaryColor           : chr  &amp;quot;Black&amp;quot; &amp;quot;Grey&amp;quot; &amp;quot;Black&amp;quot; &amp;quot;Orange&amp;quot; ...
##  $ SecondaryColor         : chr  &amp;quot;White&amp;quot; NA NA &amp;quot;White&amp;quot; ...
##  $ ColorPattern           : chr  NA &amp;quot;Tiger&amp;quot; NA NA ...
##  $ Intake.Date            : chr  &amp;quot;03/18/2000 00:14:00&amp;quot; &amp;quot;04/06/2000 00:45:00&amp;quot; &amp;quot;05/02/2000 00:37:00&amp;quot; &amp;quot;05/07/2000 00:26:00&amp;quot; ...
##  $ Intake.Type            : chr  &amp;quot;Owner/Guardian Surrender&amp;quot; &amp;quot;Stray&amp;quot; &amp;quot;Owner/Guardian Surrender&amp;quot; &amp;quot;Owner/Guardian Surrender&amp;quot; ...
##  $ Intake.Subtype         : chr  &amp;quot;Schedule&amp;quot; &amp;quot;Walk In&amp;quot; &amp;quot;Walk In&amp;quot; &amp;quot;Walk In&amp;quot; ...
##  $ Reason                 : chr  &amp;quot;&amp;quot; &amp;quot;&amp;quot; &amp;quot;Too Many Pets&amp;quot; &amp;quot;Too Many Pets&amp;quot; ...
##  $ Reason.Category        : chr  NA NA &amp;quot;Owner problem&amp;quot; &amp;quot;Owner problem&amp;quot; ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Do it in a tidy way: glimpse()
# previous output was messy as it didn&amp;#39;t fit on the slide.
# we want tolook at the structure of the data as much data 
# as possible and identify data types for each of the variables
glimpse(cat_claw)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 200
## Columns: 20
## $ Animal.ID               &amp;lt;int&amp;gt; 1032415, 1032962, 1033799, 1033965, 1038328, …
## $ Animal.Name             &amp;lt;chr&amp;gt; &amp;quot;HARLEY&amp;quot;, &amp;quot;TRUCKER&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;PUDDY TAT&amp;quot;,…
## $ Species                 &amp;lt;chr&amp;gt; &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Ca…
## $ Gender                  &amp;lt;chr&amp;gt; &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;, …
## $ Date.Of.Birth           &amp;lt;chr&amp;gt; &amp;quot;9/18/1999&amp;quot;, &amp;quot;4/10/1998&amp;quot;, &amp;quot;2/2/2000&amp;quot;, &amp;quot;3/7/20…
## $ Primary.Breed           &amp;lt;chr&amp;gt; &amp;quot;Domestic Shorthair&amp;quot;, &amp;quot;Domestic Shorthair&amp;quot;, &amp;quot;…
## $ Secondary.Breed         &amp;lt;chr&amp;gt; &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mi…
## $ Declawed                &amp;lt;chr&amp;gt; &amp;quot;None&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;Fron…
## $ Distinguishing.Markings &amp;lt;chr&amp;gt; &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;…
## $ Purebred                &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …
## $ BodyWeight              &amp;lt;dbl&amp;gt; 0.00, 0.00, 2.00, 0.00, 0.00, 0.00, 0.00, 12.…
## $ BodyWeightUnit          &amp;lt;chr&amp;gt; NA, NA, &amp;quot;pound&amp;quot;, NA, NA, NA, NA, &amp;quot;pound&amp;quot;, NA,…
## $ PrimaryColor            &amp;lt;chr&amp;gt; &amp;quot;Black&amp;quot;, &amp;quot;Grey&amp;quot;, &amp;quot;Black&amp;quot;, &amp;quot;Orange&amp;quot;, &amp;quot;Black&amp;quot;, …
## $ SecondaryColor          &amp;lt;chr&amp;gt; &amp;quot;White&amp;quot;, NA, NA, &amp;quot;White&amp;quot;, &amp;quot;White&amp;quot;, &amp;quot;Brown&amp;quot;, N…
## $ ColorPattern            &amp;lt;chr&amp;gt; NA, &amp;quot;Tiger&amp;quot;, NA, NA, NA, &amp;quot;Tiger&amp;quot;, &amp;quot;Tortoisesh…
## $ Intake.Date             &amp;lt;chr&amp;gt; &amp;quot;03/18/2000 00:14:00&amp;quot;, &amp;quot;04/06/2000 00:45:00&amp;quot;,…
## $ Intake.Type             &amp;lt;chr&amp;gt; &amp;quot;Owner/Guardian Surrender&amp;quot;, &amp;quot;Stray&amp;quot;, &amp;quot;Owner/G…
## $ Intake.Subtype          &amp;lt;chr&amp;gt; &amp;quot;Schedule&amp;quot;, &amp;quot;Walk In&amp;quot;, &amp;quot;Walk In&amp;quot;, &amp;quot;Walk In&amp;quot;, …
## $ Reason                  &amp;lt;chr&amp;gt; &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Too Many Pets&amp;quot;, &amp;quot;Too Many Pets&amp;quot;, &amp;quot;&amp;quot;,…
## $ Reason.Category         &amp;lt;chr&amp;gt; NA, NA, &amp;quot;Owner problem&amp;quot;, &amp;quot;Owner problem&amp;quot;, NA,…&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;what-to-focus-on&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What to focus on?&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Note that variable &amp;#39;Declawed&amp;#39; is the main variable of interest
# with three possible outcomes
summary(cat_claw$Declawed)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Length     Class      Mode 
##       200 character character&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# sort the dates (DOB and InatekD) to be in the same format
cat_claw$Date.Of.Birth &amp;lt;- as.Date(cat_claw$Date.Of.Birth, format=&amp;#39;%m/%d/%Y&amp;#39;)
cat_claw$Intake.Date &amp;lt;- as.Date(cat_claw$Intake.Date, format=&amp;#39;%m/%d/%Y&amp;#39;)
# How does it look?
# check the data
glimpse(cat_claw)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 200
## Columns: 20
## $ Animal.ID               &amp;lt;int&amp;gt; 1032415, 1032962, 1033799, 1033965, 1038328, …
## $ Animal.Name             &amp;lt;chr&amp;gt; &amp;quot;HARLEY&amp;quot;, &amp;quot;TRUCKER&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;PUDDY TAT&amp;quot;,…
## $ Species                 &amp;lt;chr&amp;gt; &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Ca…
## $ Gender                  &amp;lt;chr&amp;gt; &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;, …
## $ Date.Of.Birth           &amp;lt;date&amp;gt; 1999-09-18, 1998-04-10, 2000-02-02, 2000-03-…
## $ Primary.Breed           &amp;lt;chr&amp;gt; &amp;quot;Domestic Shorthair&amp;quot;, &amp;quot;Domestic Shorthair&amp;quot;, &amp;quot;…
## $ Secondary.Breed         &amp;lt;chr&amp;gt; &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mi…
## $ Declawed                &amp;lt;chr&amp;gt; &amp;quot;None&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;Fron…
## $ Distinguishing.Markings &amp;lt;chr&amp;gt; &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;…
## $ Purebred                &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …
## $ BodyWeight              &amp;lt;dbl&amp;gt; 0.00, 0.00, 2.00, 0.00, 0.00, 0.00, 0.00, 12.…
## $ BodyWeightUnit          &amp;lt;chr&amp;gt; NA, NA, &amp;quot;pound&amp;quot;, NA, NA, NA, NA, &amp;quot;pound&amp;quot;, NA,…
## $ PrimaryColor            &amp;lt;chr&amp;gt; &amp;quot;Black&amp;quot;, &amp;quot;Grey&amp;quot;, &amp;quot;Black&amp;quot;, &amp;quot;Orange&amp;quot;, &amp;quot;Black&amp;quot;, …
## $ SecondaryColor          &amp;lt;chr&amp;gt; &amp;quot;White&amp;quot;, NA, NA, &amp;quot;White&amp;quot;, &amp;quot;White&amp;quot;, &amp;quot;Brown&amp;quot;, N…
## $ ColorPattern            &amp;lt;chr&amp;gt; NA, &amp;quot;Tiger&amp;quot;, NA, NA, NA, &amp;quot;Tiger&amp;quot;, &amp;quot;Tortoisesh…
## $ Intake.Date             &amp;lt;date&amp;gt; 2000-03-18, 2000-04-06, 2000-05-02, 2000-05-…
## $ Intake.Type             &amp;lt;chr&amp;gt; &amp;quot;Owner/Guardian Surrender&amp;quot;, &amp;quot;Stray&amp;quot;, &amp;quot;Owner/G…
## $ Intake.Subtype          &amp;lt;chr&amp;gt; &amp;quot;Schedule&amp;quot;, &amp;quot;Walk In&amp;quot;, &amp;quot;Walk In&amp;quot;, &amp;quot;Walk In&amp;quot;, …
## $ Reason                  &amp;lt;chr&amp;gt; &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;Too Many Pets&amp;quot;, &amp;quot;Too Many Pets&amp;quot;, &amp;quot;&amp;quot;,…
## $ Reason.Category         &amp;lt;chr&amp;gt; NA, NA, &amp;quot;Owner problem&amp;quot;, &amp;quot;Owner problem&amp;quot;, NA,…&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;how-old-are-the-cats&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;How old are the cats?&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# calculate age in days
cat_claw$diff_in_days &amp;lt;- cat_claw$Intake.Date - cat_claw$Date.Of.Birth
summary(cat_claw$diff_in_days) # summary for class type: &amp;#39;difftime&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Length    Class     Mode 
##      200 difftime  numeric&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# summary for diff_in_days as numeric (does everything seem ok?)
summary(as.numeric(cat_claw$diff_in_days))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
##    -322     122     730    1070    1822    5114&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Identify &amp;#39;incorrect&amp;#39; observation(s)
# identify negative diff_in_days; how many?
ind &amp;lt;- which.min(as.numeric(cat_claw$diff_in_days))
ind&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 30&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# remove observations with intake date before date of bearth
# save it as a new data set
cat &amp;lt;- cat_claw[-ind,]
# replace empty spaces with NA
cat$Animal.Name[cat$Animal.Name == &amp;quot;&amp;quot;] &amp;lt;- NA
cat$Distinguishing.Markings[cat$Distinguishing.Markings == &amp;quot;&amp;quot;] &amp;lt;- NA
cat$Reason[cat$Reason == &amp;quot;&amp;quot;] &amp;lt;- NA
# Check the data
glimpse(cat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 199
## Columns: 21
## $ Animal.ID               &amp;lt;int&amp;gt; 1032415, 1032962, 1033799, 1033965, 1038328, …
## $ Animal.Name             &amp;lt;chr&amp;gt; &amp;quot;HARLEY&amp;quot;, &amp;quot;TRUCKER&amp;quot;, NA, NA, NA, &amp;quot;PUDDY TAT&amp;quot;,…
## $ Species                 &amp;lt;chr&amp;gt; &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Cat&amp;quot;, &amp;quot;Ca…
## $ Gender                  &amp;lt;chr&amp;gt; &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;, …
## $ Date.Of.Birth           &amp;lt;date&amp;gt; 1999-09-18, 1998-04-10, 2000-02-02, 2000-03-…
## $ Primary.Breed           &amp;lt;chr&amp;gt; &amp;quot;Domestic Shorthair&amp;quot;, &amp;quot;Domestic Shorthair&amp;quot;, &amp;quot;…
## $ Secondary.Breed         &amp;lt;chr&amp;gt; &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mix&amp;quot;, &amp;quot;Mi…
## $ Declawed                &amp;lt;chr&amp;gt; &amp;quot;None&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;None&amp;quot;, &amp;quot;Fron…
## $ Distinguishing.Markings &amp;lt;chr&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…
## $ Purebred                &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …
## $ BodyWeight              &amp;lt;dbl&amp;gt; 0.00, 0.00, 2.00, 0.00, 0.00, 0.00, 0.00, 12.…
## $ BodyWeightUnit          &amp;lt;chr&amp;gt; NA, NA, &amp;quot;pound&amp;quot;, NA, NA, NA, NA, &amp;quot;pound&amp;quot;, NA,…
## $ PrimaryColor            &amp;lt;chr&amp;gt; &amp;quot;Black&amp;quot;, &amp;quot;Grey&amp;quot;, &amp;quot;Black&amp;quot;, &amp;quot;Orange&amp;quot;, &amp;quot;Black&amp;quot;, …
## $ SecondaryColor          &amp;lt;chr&amp;gt; &amp;quot;White&amp;quot;, NA, NA, &amp;quot;White&amp;quot;, &amp;quot;White&amp;quot;, &amp;quot;Brown&amp;quot;, N…
## $ ColorPattern            &amp;lt;chr&amp;gt; NA, &amp;quot;Tiger&amp;quot;, NA, NA, NA, &amp;quot;Tiger&amp;quot;, &amp;quot;Tortoisesh…
## $ Intake.Date             &amp;lt;date&amp;gt; 2000-03-18, 2000-04-06, 2000-05-02, 2000-05-…
## $ Intake.Type             &amp;lt;chr&amp;gt; &amp;quot;Owner/Guardian Surrender&amp;quot;, &amp;quot;Stray&amp;quot;, &amp;quot;Owner/G…
## $ Intake.Subtype          &amp;lt;chr&amp;gt; &amp;quot;Schedule&amp;quot;, &amp;quot;Walk In&amp;quot;, &amp;quot;Walk In&amp;quot;, &amp;quot;Walk In&amp;quot;, …
## $ Reason                  &amp;lt;chr&amp;gt; NA, NA, &amp;quot;Too Many Pets&amp;quot;, &amp;quot;Too Many Pets&amp;quot;, NA,…
## $ Reason.Category         &amp;lt;chr&amp;gt; NA, NA, &amp;quot;Owner problem&amp;quot;, &amp;quot;Owner problem&amp;quot;, NA,…
## $ diff_in_days            &amp;lt;drtn&amp;gt; 182 days, 727 days, 90 days, 61 days, 3 days…&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;what-to-plot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What to plot?&lt;/h3&gt;
&lt;p&gt;Plot Age vs Declawed using Boxplot&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;boxplot(as.numeric(diff_in_days) ~ Declawed, data = cat, horizontal = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/why_r/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Can we make it more attractive looking?&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;create-graph-using-ggplot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Create graph using ggplot&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#The image_graph() function opens a new graphics device similar to e.g. png() or x11(). 
# It returns an image objec to which the plot(s) will be written
fig &amp;lt;- image_graph(width = 600, height = 600, res = 96)

# plots Age (in years) vs Declawed and saves it as an image
ggplot(cat, aes(Declawed, round(as.numeric(diff_in_days)/365), 2)) + 
  geom_boxplot(outlier.size = 0) + 
  geom_jitter(position=position_jitter(width=0.30), shape = 20, size = 3, aes(colour=Declawed), alpha=0.75) + 
  stat_summary(fun.y=mean, shape=23, size = 3, fill = &amp;quot;orange&amp;quot;, col= &amp;quot;black&amp;quot;, geom=&amp;#39;point&amp;#39;) +
  labs (title= &amp;quot;Cats: Age vs Declawed &amp;quot;, x = &amp;quot; Declawed&amp;quot;, y = &amp;quot; Age&amp;quot;) +
  theme(panel.border = element_rect(fill = NA, colour = &amp;quot;black&amp;quot;, size = 2)) +
  theme(plot.title = element_text(size = 20, vjust = 2)) +
  ggsave(&amp;#39;~/Documents/my_R/RLadiesMNE/ggplot_image.png&amp;#39;) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `fun.y` is deprecated. Use `fun` instead.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Saving 6.25 x 6.25 in image&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;adding-an-animation-to-a-graph&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Adding an animation to a graph:&lt;/h3&gt;
&lt;p&gt;Read gif and background files&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# read cat gif file
cat_gif &amp;lt;- image_read(&amp;quot;http://media.giphy.com/media/q0ujUmppx3Fu0/giphy.gif&amp;quot;)  
#
# Background image
graph_bg &amp;lt;- image_read(&amp;quot;~/Documents/my_R/RLadiesMNE/ggplot_image.png&amp;quot;)
background &amp;lt;- image_background(image_scale(graph_bg, &amp;quot;650&amp;quot;), &amp;quot;white&amp;quot;, flatten = TRUE)
# Combine and flatten frames
frames &amp;lt;- image_apply(cat_gif, function(frame) {
  image_composite(background, frame, offset = &amp;quot;+410+10&amp;quot;)
})&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Turn frames into animation
animation &amp;lt;- image_animate(frames, fps = 10)
print(animation)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;Cat_Declawed.gif&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;happy-plotting&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Happy Plotting!&lt;/h1&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
